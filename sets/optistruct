// HWVERSION_13.0_Aug 27 2014_18:29:54
// Copyright (c) 2014 Altair Engineering, Inc. All rights reserved.
// Contains trade secrets of Altair Engineering, Inc.
// Copyright notice does not imply publication.


*text()
*if([@writehmcomments()])
			*string("$$")
			*end()
			*string("$$ Optistruct Input Deck Generated by HyperMesh Version  : ")
			*field(string,version,0)
			*end()   
			*string("$$ Generated using HyperMesh-Optistruct Template Version : ")
			*string("13.0")
			*end()
			*string("$$")
			*end()
*endif()
*output()

*codename(optistruct,1)
*include(../../common_nas_os/attribs)
*include(../../common_nas_os/misc_defs.tpl)
*assigndictionarytogroup("PROPS","Contact","PCONT")
*setpropertyelementreference("PSOLID",205,1)
*setpropertyelementreference("PSOLID",213,1)
*assigndictionarytogroup("MATS","GASKET","MGASK")
*assigndictionarytogroup("PROPS","3D","PGASK")
*setpropertyelementreference("PGASK",206,6)
*setpropertyelementreference("PGASK",208,7)
*realprecision(8)
*compressreal(3)
*setelementcolorbypropsmethod(1)
*setelementcolorbymatsmethod(1)
*sortdictionarynames("ALL")
*getcardthicknessproc("::UserProfiles::OptiStruct::Get_Thickness")
*setcardthicknessproc("::UserProfiles::OptiStruct::Set_Thickness")


*text()
*if([@writehmcomments()])
*string("$$   Template:  optistruct")
*end()
*string("$$")
*end()
*string("$$")
*end()
*endif()    
*output() 

#Issue: [182780]: This is intentionaly added comment to identify the deck exported in Optistruct deck. 
#Please do not delete or comment 
*text()
*string("$$ optistruct")
*end()
*output() 

*begincardmenu()
*cardmenuitem("ACMODL","ACMODL")
*cardmenuitem("ANALYSIS","ANALYSIS")
*cardmenuitem("ASSIGN","ASSIGN")
*cardmenuitem("B2GG","B2GG")
*cardmenuitem("BULK_UNSUPPORTED_CARDS","BULK_UNSUPPORTED_CARDS")
*cardmenuitem("CASE_UNSUPPORTED_CARDS","CASE_UNSUPPORTED_CARDS")
*cardmenuitem("CHECK","CHECK")
*cardmenuitem("CONTPRM","CONTPRM")
*cardmenuitem("DEBUG","OPTI_DEBUG")  
*cardmenuitem("DENSITY","DENSITY")  
*cardmenuitem("DENSRES","DENSRES")
*cardmenuitem("DESHIS","DESHIS")
*cardmenuitem("DESVARG","DESVARG")
*cardmenuitem("DGLOBAL","DGLOBAL")
*cardmenuitem("DMIGMOD","DMIGMOD")
*cardmenuitem("DMIGNAME","DMIGNAME")
*cardmenuitem("DTI_UNITS","DTI_UNITS")
*cardmenuitem("ECHO","ECHO")
*cardmenuitem("EIGVNAME","EIGVNAME")
*cardmenuitem("ELEMQUAL","ELEMQUAL")
*cardmenuitem("FORMAT","FORMAT")
*cardmenuitem("GAPPRM","GAPPRM")
*cardmenuitem("GLOBAL_CASE_CONTROL","GLOBAL_CASE_CONTROL")
*cardmenuitem("GLOBAL_OUTPUT_REQUEST","GLOBAL_OUTPUT_REQUEST")
*cardmenuitem("GRDSET","GRDSET")
*cardmenuitem("GROUNDCHECK","GROUNDCHECK")
*cardmenuitem("HISOUT","HISOUT")
*cardmenuitem("INCLUDE_BULK","INCLUDE_BULK")
*cardmenuitem("INCLUDE_CTRL","INCLUDE_CTRL")
*cardmenuitem("INFILE","INFILE")
*cardmenuitem("K2GG","K2GG")
*cardmenuitem("K2PP","K2PP")
*cardmenuitem("K42GG","K42GG")
*cardmenuitem("LABEL","LABEL")
*cardmenuitem("LOADLIB","LOADLIB")
*cardmenuitem("M2GG","M2GG")
*cardmenuitem("MECHCHECK","MECHCHECK")
*cardmenuitem("MODEL","MODEL")
*cardmenuitem("Model Documentation","MODEL_DOC")
*cardmenuitem("MSGLMT","MSGLMT")
*cardmenuitem("OMIT","OMIT")  
*cardmenuitem("OSDIAG","OPTI_DIAG")  
*cardmenuitem("OUTFILE","OUTFILE")
*cardmenuitem("OUTPUT","OUTPUT")
*cardmenuitem("P2G","P2G")
*cardmenuitem("PARAM","PARAM")
*cardmenuitem("PFGRID","PFGRID")
*cardmenuitem("PFMODE","PFMODE")
*cardmenuitem("PFPANEL","PFPANEL")
*cardmenuitem("PROPERTY","PROPERTY")
*cardmenuitem("RESPRINT","RESPRINT")
*cardmenuitem("RESTART","RESTART")
*cardmenuitem("RESULTS","RESULTS")
*cardmenuitem("SCREEN","SCREEN")
*cardmenuitem("SENSITIVITY","SENSITIVITY")
*cardmenuitem("SENSOUT","SENSOUT")
*cardmenuitem("SHAPE","SHAPE_CTRL")
*cardmenuitem("SHRES","SHRES")
*cardmenuitem("SUBTITLE","SUBTITLE")
*cardmenuitem("SWLDPRM","SWLDPRM")
*cardmenuitem("SYSSETTING","SYSSETTING")
*cardmenuitem("THICKNESS","THICKNESS")
*cardmenuitem("TITLE","TITLE")
*cardmenuitem("TMPDIR","TMPDIR")  
*cardmenuitem("UNITS","UNITS")  
*cardmenuitem("XSHLPRM","XSHLPRM")
*cardmenuitem("XSOLPRM","XSOLPRM")
*endcardmenu()

*include(../../optistruct/include/cards_IOOptions.tpl)

*dobjrefs()
*beginmenu()
*menuif([loadsteplistmax == 0])
*menustring("DOBJREF ")
*menufield(ID,integer,id,8)
*menufield(RID,integer,responseid,8)
*menustring("     ALL")
*menuif([reference == 0 || reference == 2])
*menufield(NEGREF,real,negative_reference,8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([reference == 1 || reference == 2])
*menufield(POSREF,real,positive_reference,8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([responseid != 0 && @entityexists(optiresponses,responseid)])
*menuvariableset(variable1,[@getentityvalue(optiresponses,responseid,response)])
*menuif([variable1 == 35 || variable1 == 14 || variable1 == 15 || variable1 == 16 || variable1 == 18 || variable1 == 38 || variable1 == 19 || variable1 == 42 || variable1 == 59])  
*menufield(LOWFQ,real,$lowerbound_freq,8)
*menudefaultvalue("        ")
*menuinitialvalue(0.0)
*menurestrictedvalue(>=,0.0)
*menufield(HIGHFQ,real,$upperbound_freq,8)
*menudefaultvalue("        ")
*menuinitialvalue(1.0E+20)
*menurestrictedvalue(>=,0.0)
*menuendif()
*menuendif()
*menulineend()
*menuelse()
*menucounterset(counter1,1)
*beginrepeat(loadsteplistmax)
*menustring("DOBJREF ")
*menufield(ID,integer,id,8)
*menufield(RID,integer,responseid,8)
*menupointerset(pointer1,loadsteplist,[counter1 - 1])
*menufield(SID,integer,pointer1.pointervalue,8)
*menuif([reference == 0 || reference == 2])
*menufield(NEGREF,real,negative_reference,8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([reference == 1 || reference == 2])
*menufield(POSREF,real,positive_reference,8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([responseid != 0 && @entityexists(optiresponses,responseid)])
*menuvariableset(variable1,[@getentityvalue(optiresponses,responseid,response)])
*menuif([variable1 == 35 || variable1 == 14 || variable1 == 15 || variable1 == 16 || variable1 == 18 || variable1 == 38 || variable1 == 19 || variable1 == 42 || variable1 == 59])  
*menufield(LOWFQ,real,$lowerbound_freq,8)
*menudefaultvalue("        ")
*menuinitialvalue(0.0)
*menurestrictedvalue(>=,0.0)
*menufield(HIGHFQ,real,$upperbound_freq,8)
*menudefaultvalue("        ")
*menuinitialvalue(1.0E+20)
*menurestrictedvalue(>=,0.0)
*menuendif()
*menuendif()
*menulineend()
*menucounterset(counter1,[counter1+1])
*endrepeat()
*menuendif()
*endmenu()
*format()
*output()

*objectives()
*nomenu()
*format()
*uservariableset(#minmaxid,id)
*uservariableset(#dobjref_found,0)
*uservariableset(#response_found,0)
*dobjrefs()
*format()
*if([objectid == #minmaxid])
*uservariableset(#dobjref_found,1)
*endif()
*output()

*if([@entityexists(optiresponses,responseid)])
*if([@getentityvalue(optiresponses,responseid,response) == 52]) 
*uservariableset(#response_found,1)
*endif()        
*endif()

*if([#dobjref_found > 0 || #response_found > 0])
*if([minmaxflag == 2])
*string("MINMAX = ")
*if([#dobjref_found > 0])
*fieldleft(integer,id,8)
*endif()
*if([#response_found > 0])
*fieldleft(integer,responseid,8)
*endif()
*endif()
*if([minmaxflag == 3])
*string("MAXMIN = ")
*if([#dobjref_found > 0])
*fieldleft(integer,id,8)
*endif()
*if([#response_found > 0])
*fieldleft(integer,responseid,8)
*endif()
*endif()
*end() 
*endif()
*output()

*include(../../optistruct/include/loadcols_menu.tpl)

*text()
*if([@writehmcomments()])
*string("$$------------------------------------------------------------------------------$") *end()
*string("$$                      Case Control Cards                                      $") *end()
*string("$$------------------------------------------------------------------------------$") *end()
*endif()    
*output()

## optiobjectvar1: a variable to count global objectives, 0 if there is a global objective, 1 otherwise

*objectives()
*beginmenu()
*menuif([minmaxflag < 2])
*menustring("DESOBJ")
*menuif([minmaxflag == 0])
*menustring("(MIN)")
*menuelse()
*menustring("(MAX)")
*menuendif()
*menufield(RID,integer,responseid,8)
*menuelse()
*menuif([minmaxflag == 2])
*menustring("MINMAX")
*menuendif()
*menuif([minmaxflag == 3])
*menustring("MAXMIN")
*menuendif()

*menuif([responseid != 0 && @entityexists(optiresponses,responseid)])
*menuif([@getentityvalue(optiresponses,responseid,response) == 52])  
*menufield(RID,integer,responseid,8)
*menuendif()
*menuelse()
*menufield(ID,integer,id,8)
*menuendif()
*menuendif()
*menulineend()
*endmenu()
*format()
*if([minmaxflag < 2])
*if([loadstepid == 0])
*uservariableset(#optiobjectvar1,0)
*else()
*uservariableset(#optiobjectvar1,1)
*endif()
*endif()
*uservariableset(#opticonstraintglobalcount,0)
*uservariableset(#opticonstraintsubcasecount,0)
*output()

*opticonstraints()
*beginmenu()
*menustring("DCONSTR ")
*menufield(DCID,integer,id,8)
*menufield(RID,integer,responseid,8)
*menuif([bound == 0 || bound == 2])
*menufield(LBOUND,real,lowerbound,8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([bound == 1 || bound == 2])
*menufield(UBOUND,real,upperbound,8)
*menuelse()
*menustring("        ")      
*menuendif()
*menuvariableset(variable1,[@getentityvalue(optiresponses,responseid,response)])
*menuif([variable1 == 14 || variable1 == 15  || variable1 == 16 || variable1 == 18 || variable1 == 19 || variable1 == 38 ||
variable1 == 42 ||  variable1 == 59 ||  variable1 == 35])
*menufield(LFREQ,real,$DCONSTR_LFREQ,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>=,0.0)
*menufield(UFREQ,real,$DCONSTR_UFREQ,8)
*menudefaultvalue("        ")
*menuinitialvalue(1.0E+20)
*menurestrictedvalue(>=,0.0)
*menuendif()
*menulineend()
*endmenu()
*before()
*uservariableset(#maxconstraintid,1)
*format()
*if([#maxconstraintid <= id])
*uservariableset(#maxconstraintid,[id+1])
*endif()
*if([loadsteplistmax == 0])
*uservariableset(#opticonstraintglobalcount,1)
*else()
*uservariableset("#opticonstraintsubcasecount",[#opticonstraintsubcasecount+1])
*endif()
*after()
*if([#opticonstraintglobalcount > 0])
*uservariableset(#dessubcounter,[#maxconstraintid])
*else()
*uservariableset(#dessubcounter,[#maxconstraintid - 1])
*endif()
*output()


*objectives()
*before()
*treataslocal(counter19)
*counterset(counter19,0)  
*format()
*if([counter19==0])
*if([#optiobjectvar1 == 0])
*if([@count(objectives,0,0)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  OBJECTIVES Data")
*end()
*string("$$")
*end()
*endif()        
*endif()
*endif()    
*counterset(counter19,1)    
*endif()  
*if([#optiobjectvar1 == 0])
*if([minmaxflag < 2])
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME OBJECTIVES")
*field(integer,id,8)
*fieldleft(string,name,0)
*end()
*string("$")
*end()
*endif()
*string("DESOBJ")
*if([minmaxflag == 0])
*string("(MIN)=")
*else()
*string("(MAX)=")
*endif()
*fieldleft(integer,responseid,8)
*end()
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*endif()
*endif()
*output()

*optiresponses()
*beginmenu()
*menuif([response == 52])
*menustring("DSYSID  ")
*menufield(DOID,integer,id,8)
*menufield(LABEL,string,name,8)
*beginrepeat($DSYSID_NUM)
*repeatcounter(2)
*menufield(RID,entity,$DSYSID_RID,8)
*menuentitytype(optiresponses)
*menufield(SID,string,$DSYSID_SID_STR,8)
*menulegalvalue("        ")
*menulegalvalue(ALL)
*menulegalvalue(SID)
*menuif([@stringequal(@attributearrayvalue($DSYSID_SID_STR,counter2),"SID")])
*menufield(SID,entity,$DSYSID_SID,8)
*menuentitytype(loadsteps)
*menuendif()
*menufield(T,arrayofreal,$DSYSID_T,8)
*menufield(W,arrayofreal,$DSYSID_W,8)   
*menudefaultvalue("        ")
*menuinitialarrayvalue(1.0)

*menuif([$DSYSID_NUM > 1])
*menulineend()
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menuendif()
*endrepeat()
*menulineend()
*menuelse()
*menuif([response != 35 && response != 40])
*menustring("DRESP1  ")
*menufield(ID,integer,id,8)
*menufield(LABEL,string,name,8)
*menuelse()
*menuif([response == 35])
*menustring("DRESP2  ")    
*menufield(ID,integer,id,8)
*menufield(LABEL,string,name,8)
*menuelse()
*menustring("DRESP3  ")
*menufield(ID,integer,id,8)
*menufield(LABEL,string,name,8)
*menufield(GROUP,string,$DRESP3_GROUP,8)
*menufield(FUNC,string,$DRESP3_FUNC,8)
*menuendif()
*menuendif()
*menuif([response == 29])
*menustring("MASS    ")
*menuif([property == 0])
*menustring("        ")
*menuendif()
*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 2])
*menustring("PSOLID  ")
*menuendif()
		*menuif([property == 3])
*menustring("PSHEAR  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property == 15])
*menustring("MAT     ")
*menuendif()
*menuendif()

*menuif([response == 30])
*menustring("MASSFRAC")
*menuif([property == 0])
*menustring("        ")
*menuendif()
*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 2])
*menustring("PSOLID  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property == 15])
*menustring("MAT     ")
*menuendif()
*menuendif()

*menuif([response == 2])
*menustring("VOLUME  ")
*menuif([property == 0])
*menustring("        ")
*menuendif()
*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 2])
*menustring("PSOLID  ")
*menuendif()
	  *menuif([property == 3])
*menustring("PSHEAR  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 20])
*menustring("PWELD   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 11])
*menustring("PBUSH   ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property == 15])
*menustring("MAT     ")
*menuendif()
*menuendif()

*menuif([response == 3])
*menustring("VOLFRAC ")
*menuif([property == 0])
*menustring("        ")
*menuendif()
*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 2])
*menustring("PSOLID  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 20])
*menustring("PWELD   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 11])
*menustring("PBUSH   ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property == 15])
*menustring("MAT     ")
*menuendif()
*menuendif()

*menuif([response == 36])
*menustring("COG     ")
*menuif([property == 0])
*menustring("        ")
*menuendif()
*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 2])
*menustring("PSOLID  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property == 15])
*menustring("MAT     ")
*menuendif()
*menuendif()

*menuif([response == 37])
*menustring("INERTIA ")
*menuif([property == 0])
*menustring("        ")
*menuendif()
*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 2])
*menustring("PSOLID  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property == 15])
*menustring("MAT     ")
*menuendif()
*menuendif()



*menuif([response == 31])
*menustring("COMP    ")
*menuif([property == 0])
*menustring("        ")
*menuendif()
*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 2])
*menustring("PSOLID  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 11])
*menustring("PBUSH   ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property == 15])
*menustring("MAT     ")
*menuendif()
*menuendif()

*menuif([response == 5])
*menustring("FREQ    ")
*menustring("        ")
*menuendif()
*menuif([response == 6])
*menustring("LAMA    ")
*menustring("        ")
*menuendif()
*menuif([response == 7 || response == 14 || response == 15 || response == 16 || response == 62])
*menuif([response == 7 || response == 62])
*menustring("DISP    ")
*menuendif()
*menuif([response == 14])
*menustring("FRDISP   ")
*menuendif()
*menuif([response == 15])
*menustring("FRVELO   ")
*menuendif()
*menuif([response == 16])
*menustring("FRACCL   ")
*menuendif()
*menustring("        ")
*menuendif()
*menuif([response == 42])
*menustring("FRPRES  ")
*menustring("        ")
*menuendif()
*menuif([response == 43])
*menustring("PSDDISP ")
*menustring("        ")
*menuendif()   
*menuif([response == 44])
*menustring("PSDVELO ")
*menustring("        ")
*menuendif()   
*menuif([response == 45])
*menustring("PSDACCL ")
*menustring("        ")
*menuendif()      
*menuif([response == 46])
*menustring("PSDPRES ")
*menustring("        ")
*menuendif()         
*menuif([response == 47])
*menustring("RMSDISP ")
*menustring("        ")
*menuendif()   
*menuif([response == 48])
*menustring("RMSVELO ")
*menustring("        ")
*menuendif()   
*menuif([response == 49])
*menustring("RMSACCL ")
*menustring("        ")
*menuendif()      
*menuif([response == 50])
*menustring("RMSPRES ")
*menustring("        ")
*menuendif() 
*menuif([response == 59])
*menustring("FRERP   ")
*menustring("        ")
*menuendif()   
*menuif([response == 60])
*menustring("SPCFORCE")
*menustring("        ")
*menuendif()  
*menuif([response == 61])
*menustring("GPFORCE ")
*menuif([$GPFORCE_NODEID > 0])
*menufield(PTYPE,integer,[$GPFORCE_NODEID],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuendif()    
*menuif([response == 8 || response == 9 || response == 18 || response == 38 || response == 41])
*menuif([response == 8])
*menustring("STRAIN  ")
*menuendif()
*menuif([response == 9])
*menustring("STRESS  ")
*menuendif()
*menuif([response == 18])
*menustring("FRSTRS  ")
*menuendif()
*menuif([response == 38])
*menustring("FRSTRN  ")
*menuendif()
*menuif([response == 41])
*menustring("FATIGUE ")
*menuendif()
*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 2])
*menustring("PSOLID  ")
*menuendif()
*menuif([property == 3])
*menustring("PSHEAR  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 14])
*menustring("ELEM    ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property != 1 && property != 2 && property != 3 && property != 4 && property != 5 && property != 6 && property != 7 && property != 8 && property != 14 && property != 17 && property != 19 && property != 22])
*menustring("        ")
*menuendif()
*menuendif()
*menuif([response == 10 || response == 19])
*menuif([response == 10])
*menustring("FORCE   ")
*menuendif()
*menuif([response == 19])
*menustring("FRFORC  ")
*menuendif()
*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 11])
*menustring("PBUSH   ")
*menuendif()
*menuif([property == 14])
*menustring("ELEM    ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property != 1 && property != 4 && property != 5 && property != 6 && property != 7 && property != 8 && property != 11 && property != 14 && property != 17 && property != 19 && property != 22])
*menustring("        ")
*menuendif()
*menuendif()
*menuif([response == 11])
*menustring("CSTRESS ")
*menuif([property == 4 || property == 23])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 14])
*menustring("ELEM    ")
*menuendif()
*menuif([property == 25])
*menustring("PLY     ")
*menuendif()
*menuif([property != 4 && property != 14 && property != 22 && property != 16 && property != 23 && property != 25])
*menustring("        ")
*menuendif()
*menuendif()
*menuif([response == 12])
*menustring("CSTRAIN ")
*menuif([property == 4 || property == 23])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 14])
*menustring("ELEM    ")
*menuendif()
*menuif([property == 25])
*menustring("PLY     ")
*menuendif()
*menuif([property != 4 && property != 14 && property != 22 && property != 16 && property != 23 && property != 25])
*menustring("        ")
*menuendif()
*menuendif()
*menuif([response == 13])
*menustring("CFAILURE")
*menuif([property == 4 || property == 23])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 14])
*menustring("ELEM    ")
*menuendif()
*menuif([property == 25])
*menustring("PLY     ")
*menuendif()
*menuif([property != 4 && property != 14 && property != 22 && property != 16 && property != 23 && property != 25])
*menustring("        ")
*menuendif()
*menuendif()
*menuif([response == 53 || response == 54 || response == 56 || response == 57])
*menuif([response == 53])
*menustring("PSDSTRS ")
*menuendif()
*menuif([response == 54])
*menustring("PSDSTRN ")
*menuendif()
*menuif([response == 56])
*menustring("RMSSTRS ")
*menuendif()
*menuif([response == 57])
*menustring("RMSSTRN ")
*menuendif()

*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 2])
*menustring("PSOLID  ")
*menuendif()
*menuif([property == 3])
*menustring("PSHEAR  ")
*menuendif()
*menuif([property == 23])
*menustring("PCOMPP  ")
*menuendif()     
*menuif([property == 14])
*menustring("ELEM    ")
*menuendif()
*menuif([property != 1 && property != 2 && property != 3 && property != 4 && property != 14 && property != 22 && property != 23])
*menustring("        ")
*menuendif()
*menuendif()   
*menuif([response == 35])
*menuif([functionid != 0])
*menufield(EQID,integer,functionid,8)
*menuelse()
*menuif([attribute_b == -1.0])
*menustring("     SUM")
*menuendif()
*menuif([attribute_b == -2.0])
*menustring("     AVG")
*menuendif()
*menuif([attribute_b == -3.0])
*menustring("     SSQ")
*menuendif()
*menuif([attribute_b == -4.0])
*menustring("     RSS")
*menuendif()
*menuif([attribute_b == -5.0])
*menustring("     MAX")
*menuendif()
*menuif([attribute_b == -6.0])
*menustring("     MIN")
*menuendif()
*menuif([attribute_b == -7.0])
*menustring("  AVGABS")
*menuendif()
*menuif([attribute_b == -8.0])
*menustring("  MAXABS")
*menuendif()
*menuif([attribute_b == -9.0])
*menustring("  MINABS")
*menuendif()
*menuif([attribute_b == -10.0])
*menustring("  SUMABS")
*menuendif()
*menuendif()
*menuendif()
*menuif([response == 32])
*menustring("WCOMP   ")
*menustring("        ")
*menuendif()
*menuif([response == 33])
*menustring("WFREQ   ")
*menustring("        ")
*menuendif()
*menuif([response == 34])
*menustring("COMB    ")
*menustring("        ")
*menuendif()
*menuif([response == 39])
*menustring("BEADFRAC")
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menustring("COMB    ")
*menuendif()
*menuif([response == 51])
*menustring("TEMP    ")
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menuendif()   
*menuif([functionid == 0 && response != 39 && response != 51])
*menuif([region == 0])
*menustring("        ")
*menuelse()
*menufield(REGION,integer,region,8)
*menuendif() 
*menuendif()
*menuif([response == 40])
*menufield(RESP,integer,$DRESP3_RESP,8)
*menurestrictedvalue(>,0)
*menufield(MAXRESP,integer,$DRESP3_MAXRESP,8)
*menurestrictedvalue(>,0)
*menuendif()

*menuvariableset(variable8,0)
*menuif([response == 8 || response == 9])
*menuif([property == 1 || property == 4 || property == 22])
*menuif([attribute_a == 18])
*menustring("    SVMB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 19])
*menustring("    SMPB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 23])
*menustring("   SMIPB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("    SVM1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 17])
*menustring("    SVM2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("    SMP1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("   SMIP1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 15])
*menustring("    SMP2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 16])
*menustring("   SMIP2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 20])
*menustring("     SXB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("     SX1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 11])
*menustring("     SX2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 21])
*menustring("     SYB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     SY1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 12])
*menustring("     SY2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 22])
*menustring("    SXYB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("    SXY1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 13])
*menustring("    SXY2")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([property == 2])
*menuif([attribute_a == 13])
*menustring("     SVM")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 801])
*menustring("     SMP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("    SMAP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 16])
*menustring("    SMDP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 22])
*menustring("    SMIP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("     SXX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 14])
*menustring("     SYY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 20])
*menustring("     SZZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     SXY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 15])
*menustring("     SYZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 21])
*menustring("     SXZ")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([property == 7])
*menustring("       S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([property == 8])
*menuif([attribute_a == 3])
*menustring("     SAB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 2])
*menustring("      SA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("      SB")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([property == 3])
*menuif([attribute_a == 2])
*menustring("   SHMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("   SHAVG")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("   SHMRG")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([property == 5 || property == 17])
*menuif([property == 5 || response == 8])
*menuif([attribute_a == 109])
*menustring("    SALL")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 2])
*menustring("     SAC")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("     SAD")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     SAE")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("     SAF")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 10])
*menustring("     SBC")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 11])
*menustring("     SBD")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 12])
*menustring("     SBE")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 13])
*menustring("     SBF")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("   SAMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 14])
*menustring("   SBMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()
*menuif([property == 6 || property == 19])
*menuif([property == 6 || response == 8])
*menuif([attribute_a == 109])
*menustring("    SALL")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     SAC")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("     SAD")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("     SAE")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     SAF")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 104])
*menustring("     SBC")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 105])
*menustring("     SBD")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 106])
*menustring("     SBE")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 107])
*menustring("     SBF")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("   SAMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 108])
*menustring("   SBMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()
*menuif([response == 9])
*menuif([property == 17 || property == 19])
*menupointerset(pointer1,attribute1_list,[0])
*menuvariableset(variable9,[@getinternalid(3,pointer1.pointervalue)])
*menuif([attribute_a == 1])
*menustring("     S1N")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 2])
*menustring("     S2N")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("     S3N")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     S4N")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 99])
*menustring("   SNMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([property == 17])
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"BAR"))])
*menuvariableset(variable3,1)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"BOX"))])
*menuvariableset(variable3,2)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"BOX1"))])
*menuvariableset(variable3,3)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"CHAN"))])
*menuvariableset(variable3,4)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"CHAN1"))])
*menuvariableset(variable3,5)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"CHAN2"))])
*menuvariableset(variable3,6)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"CROSS"))])
*menuvariableset(variable3,7)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"H"))])
*menuvariableset(variable3,8)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"HAT"))])
*menuvariableset(variable3,9)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"I"))])
*menuvariableset(variable3,10)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"I1"))])
*menuvariableset(variable3,11)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"L"))])
*menuvariableset(variable3,12)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"ROD"))])
*menuvariableset(variable3,13)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"T"))])
*menuvariableset(variable3,14)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"T1"))])
*menuvariableset(variable3,15)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"T2"))])
*menuvariableset(variable3,16)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"TUBE"))])
*menuvariableset(variable3,17)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"Z"))])
*menuvariableset(variable3,18)
*menuendif()
*menuelse()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"BAR"))])
*menuvariableset(variable3,1)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"BOX"))])
*menuvariableset(variable3,2)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"BOX1"))])
*menuvariableset(variable3,3)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"CHAN"))])
*menuvariableset(variable3,4)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"CHAN1"))])
*menuvariableset(variable3,5)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"CHAN2"))])
*menuvariableset(variable3,6)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"CROSS"))])
*menuvariableset(variable3,7)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"H"))])
*menuvariableset(variable3,8)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"HAT"))])
*menuvariableset(variable3,9)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"I"))])
*menuvariableset(variable3,10)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"I1"))])
*menuvariableset(variable3,11)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"L"))])
*menuvariableset(variable3,12)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"ROD"))])
*menuvariableset(variable3,13)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"T"))])
*menuvariableset(variable3,14)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"T1"))])
*menuvariableset(variable3,15)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"T2"))])
*menuvariableset(variable3,16)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"TUBE"))])
*menuvariableset(variable3,17)
*menuendif()
*menuif([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"Z"))])
*menuvariableset(variable3,18)
*menuendif()
*menuendif()
*menuif([(variable3 == 2) || (variable3 == 3) || (variable3 == 13) || (variable3 == 17)])
*menuif([attribute_a == 101])
*menustring("     S1S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 102])
*menustring("     S2S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 103])
*menustring("     S3S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 104])
*menustring("     S4S")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([(variable3 != 13) && (variable3 != 17)])
*menuif([attribute_a == 105])
*menustring("     S5S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 106])
*menustring("     S6S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 107])
*menustring("     S7S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([(variable3 != 14) && (variable3 != 15) && (variable3 != 16)])
*menuif([attribute_a == 108])
  *menustring("     S8S")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([(variable3 != 1) && (variable3 != 7) && (variable3 != 12)])
  *menuif([attribute_a == 109])
    *menustring("     S9S")
    *menuvariableset(variable8,1)
  *menuendif()
*menuendif()
*menuendif()
*menuendif()
*menuif([(variable3 == 2) || (variable3 == 3) || (variable3 == 9)])
*menuif([attribute_a == 110])
*menustring("    S10S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 111])
*menustring("    S11S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 112])
*menustring("    S12S")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([(variable3 == 9)])
*menuif([attribute_a == 113])
*menustring("    S13S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 114])
*menustring("    S14S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 115])
*menustring("    S15S")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([attribute_a == 199])
*menustring("   SSMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([(variable3 == 2) || (variable3 == 3) || (variable3 == 7)])
*menuif([attribute_a == 201])
*menustring("     S1V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 202])
*menustring("     S2V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 203])
*menustring("     S3V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 204])
*menustring("     S4V")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([attribute_a == 205])
*menustring("     S5V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 206])
*menustring("     S6V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([(variable3 != 13) && (variable3 != 17)])
*menuif([attribute_a == 207])
*menustring("     S7V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([(variable3 != 14) && (variable3 != 15) && (variable3 != 16)])
*menuif([attribute_a == 208])
  *menustring("     S8V")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([(variable3 != 1) && (variable3 != 7) && (variable3 != 12)])
  *menuif([attribute_a == 209])
    *menustring("     S9V")
    *menuvariableset(variable8,1)
  *menuendif()
*menuendif()
*menuendif()
*menuendif()
*menuif([(variable3 == 2) || (variable3 == 3) || (variable3 == 9)])
*menuif([attribute_a == 210])
*menustring("    S10V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 211])
*menustring("    S11V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 212])
*menustring("    S12V")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([(variable3 == 9)])
*menuif([attribute_a == 213])
*menustring("    S13V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 214])
*menustring("    S14V")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 215])
*menustring("    S15V")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([attribute_a == 299])
*menustring("   SVMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()
*menuif([property == 14])
*menupointerset(pointer1,attribute1_list,[0])
*menuvariableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*menuif([variable1 == 103 || variable1 == 106])
*menuif([attribute_a == 18])
*menustring("    SVMB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 19])
*menustring("    SMPB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 23])
*menustring("   SMIPB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("    SVM1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 17])
*menustring("    SVM2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("    SMP1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("   SMIP1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 15])
*menustring("    SMP2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 16])
*menustring("   SMIP2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 20])
*menustring("     SXB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("     SX1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 11])
*menustring("     SX2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 21])
*menustring("     SYB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     SY1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 12])
*menustring("     SY2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 22])
*menustring("    SXYB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("    SXY1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 13])
*menustring("    SXY2")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([variable1 == 104 || variable1 == 108])
*menupointerset(pointer1,attribute1_list,[0])
*menuvariableset(variable2,[@getentityvalue(elems,pointer1.pointervalue,type)])
*menuif([variable2 == 1 || variable2 == 2])
*menuif([attribute_a == 18])
*menustring("    SVMB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 19])
*menustring("    SMPB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 23])
*menustring("   SMIPB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("    SVM1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 17])
*menustring("    SVM2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("    SMP1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("   SMIP1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 15])
*menustring("    SMP2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 16])
*menustring("   SMIP2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 20])
*menustring("     SXB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("     SX1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 11])
*menustring("     SX2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 21])
*menustring("     SYB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     SY1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 12])
*menustring("     SY2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 22])
*menustring("    SXYB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("    SXY1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 13])
*menustring("    SXY2")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([variable2 == 3])
*menuif([attribute_a == 2])
*menustring("   SHMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("   SHAVG")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("   SHMRG")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()
*menuif([variable1 == 204 || variable1 == 205 || variable1 == 206 || variable1 == 208 || variable1 == 210 ||
variable1 == 213 || variable1 == 215 || variable1 == 220])
*menuif([attribute_a == 13])
*menustring("     SVM")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 801])
*menustring("     SMP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("    SMAP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 16])
*menustring("    SMDP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 22])
*menustring("    SMIP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("     SXX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 14])
*menustring("     SYY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 20])
*menustring("     SZZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     SXY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 15])
*menustring("     SYZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 21])
*menustring("     SXZ")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([variable1 == 21 || variable1 == 1])
*menustring("       S")
*menuvariableset(variable8,1)
*menuendif()
*menuif([variable1== 61])
*menuif([attribute_a == 3])
*menustring("     SAB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 2])
*menustring("      SA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("      SB")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([response == 9])
*menuif([variable1 == 60])
*menuvariableset(variable2,[@getentityvalue(elems,pointer1.pointervalue,propertyid)])
*menuvariableset(variable2,[@getinternalid(3,variable2)])
*menuvariableset(variable4,1)
*menuif([(@stringequal(@getcollectorcardimage(props,variable2),"PBAR"))])
*menuvariableset(variable4,1)
*menuendif()
*menuif([(@stringequal(@getcollectorcardimage(props,variable2),"PBARL"))])
*menuvariableset(variable4,2)
*menuendif()
*menuif([(@stringequal(@getcollectorcardimage(props,variable2),"PBEAM"))])
*menuvariableset(variable4,3)
*menuendif()
*menuif([(@stringequal(@getcollectorcardimage(props,variable2),"PBEAML"))])
*menuvariableset(variable4,4)
*menuendif()
*menuif([variable4 == 1 || variable4 == 3])
*menuif([attribute_a == 109])
  *menustring("    SALL")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
  *menustring("     SAC")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
  *menustring("     SAD")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
  *menustring("     SAE")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
  *menustring("     SAF")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 104])
  *menustring("     SBC")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 105])
  *menustring("     SBD")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 106])
  *menustring("     SBE")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 107])
  *menustring("     SBF")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
  *menustring("   SAMAX")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 108])
  *menustring("   SBMAX")
  *menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([variable4 == 2 || variable4 == 4])
*menuif([variable4 == 2])
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"BAR"))])
    *menuvariableset(variable3,1)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"BOX"))])
    *menuvariableset(variable3,2)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"BOX1"))])
    *menuvariableset(variable3,3)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"CHAN"))])
    *menuvariableset(variable3,4)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"CHAN1"))])
    *menuvariableset(variable3,5)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"CHAN2"))])
    *menuvariableset(variable3,6)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"CROSS"))])
    *menuvariableset(variable3,7)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"H"))])
    *menuvariableset(variable3,8)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"HAT"))])
    *menuvariableset(variable3,9)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"I"))])
    *menuvariableset(variable3,10)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"I1"))])
    *menuvariableset(variable3,11)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"L"))])
    *menuvariableset(variable3,12)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"ROD"))])
    *menuvariableset(variable3,13)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"T"))])
    *menuvariableset(variable3,14)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"T1"))])
    *menuvariableset(variable3,15)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"T2"))])
    *menuvariableset(variable3,16)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"TUBE"))])
    *menuvariableset(variable3,17)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"Z"))])
    *menuvariableset(variable3,18)
  *menuendif()
*menuelse()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"BAR"))])
    *menuvariableset(variable3,1)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"BOX"))])
    *menuvariableset(variable3,2)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"BOX1"))])
    *menuvariableset(variable3,3)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"CHAN"))])
    *menuvariableset(variable3,4)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"CHAN1"))])
    *menuvariableset(variable3,5)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"CHAN2"))])
    *menuvariableset(variable3,6)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"CROSS"))])
    *menuvariableset(variable3,7)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"H"))])
    *menuvariableset(variable3,8)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"HAT"))])
    *menuvariableset(variable3,9)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"I"))])
    *menuvariableset(variable3,10)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"I1"))])
    *menuvariableset(variable3,11)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"L"))])
    *menuvariableset(variable3,12)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"ROD"))])
    *menuvariableset(variable3,13)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"T"))])
    *menuvariableset(variable3,14)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"T1"))])
    *menuvariableset(variable3,15)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"T2"))])
    *menuvariableset(variable3,16)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"TUBE"))])
    *menuvariableset(variable3,17)
  *menuendif()
  *menuif([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"Z"))])
    *menuvariableset(variable3,18)
  *menuendif()
*menuendif()
*menuif([attribute_a == 1])
  *menustring("     S1N")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 2])
  *menustring("     S2N")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
  *menustring("     S3N")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
  *menustring("     S4N")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 99])
  *menustring("   SNMAX")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([(variable3 == 2) || (variable3 == 3) || (variable3 == 13) || (variable3 == 17)])
  *menuif([attribute_a == 101])
    *menustring("     S1S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 102])
    *menustring("     S2S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 103])
    *menustring("     S3S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 104])
    *menustring("     S4S")
    *menuvariableset(variable8,1)
  *menuendif()
*menuendif()
*menuif([(variable3 != 13) && (variable3 != 17)])
  *menuif([attribute_a == 105])
    *menustring("     S5S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 106])
    *menustring("     S6S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 107])
    *menustring("     S7S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([(variable3 != 14) && (variable3 != 15) && (variable3 != 16)])
    *menuif([attribute_a == 108])
      *menustring("     S8S")
      *menuvariableset(variable8,1)
    *menuendif()
    *menuif([(variable3 != 1) && (variable3 != 7) && (variable3 != 12)])
      *menuif([attribute_a == 109])
        *menustring("     S9S")
        *menuvariableset(variable8,1)
      *menuendif()
    *menuendif()
  *menuendif()
*menuendif()
*menuif([(variable3 == 2) || (variable3 == 3) || (variable3 == 9)])
  *menuif([attribute_a == 110])
    *menustring("    S10S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 111])
    *menustring("    S11S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 112])
    *menustring("    S12S")
    *menuvariableset(variable8,1)
  *menuendif()
*menuendif()
*menuif([(variable3 == 9)])
  *menuif([attribute_a == 113])
    *menustring("    S13S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 114])
    *menustring("    S14S")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 115])
    *menustring("    S15S")
    *menuvariableset(variable8,1)
  *menuendif()
*menuendif()
*menuif([attribute_a == 199])
  *menustring("   SSMAX")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([(variable3 == 2) || (variable3 == 3) || (variable3 == 7)])
  *menuif([attribute_a == 201])
    *menustring("     S1V")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 202])
    *menustring("     S2V")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 203])
    *menustring("     S3V")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 204])
    *menustring("     S4V")
    *menuvariableset(variable8,1)
  *menuendif()
*menuendif()
*menuif([attribute_a == 205])
  *menustring("     S5V")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 206])
  *menustring("     S6V")
  *menuvariableset(variable8,1)
*menuendif()
*menuif([(variable3 != 13) && (variable3 != 17)])
  *menuif([attribute_a == 207])
    *menustring("     S7V")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([(variable3 != 14) && (variable3 != 15) && (variable3 != 16)])
    *menuif([attribute_a == 208])
      *menustring("     S8V")
      *menuvariableset(variable8,1)
    *menuendif()
    *menuif([(variable3 != 1) && (variable3 != 7) && (variable3 != 12)])
      *menuif([attribute_a == 209])
        *menustring("     S9V")
        *menuvariableset(variable8,1)
      *menuendif()
    *menuendif()
  *menuendif()
*menuendif()
*menuif([(variable3 == 2) || (variable3 == 3) || (variable3 == 9)])
  *menuif([attribute_a == 210])
    *menustring("    S10V")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 211])
    *menustring("    S11V")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 212])
    *menustring("    S12V")
    *menuvariableset(variable8,1)
  *menuendif()
*menuendif()
*menuif([(variable3 == 9)])
  *menuif([attribute_a == 213])
    *menustring("    S13V")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 214])
    *menustring("    S14V")
    *menuvariableset(variable8,1)
  *menuendif()
  *menuif([attribute_a == 215])
    *menustring("    S15V")
    *menuvariableset(variable8,1)
  *menuendif()
*menuendif()
*menuif([attribute_a == 299])
  *menustring("   SVMAX")
  *menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()
*menuelse()
*menuvariableset(variable7,[@getentityvalue(elems,pointer1.pointervalue,type)])
*menuif([variable1 == 60 && variable7 == 1])
*menuif([attribute_a == 109])
*menustring("    SALL")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 2])
*menustring("     SAC")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("     SAD")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     SAE")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("     SAF")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 10])
*menustring("     SBC")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 11])
*menustring("     SBD")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 12])
*menustring("     SBE")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 13])
*menustring("     SBF")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("   SAMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 14])
*menustring("   SBMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([variable1 == 60 && variable7 == 2])
*menuif([attribute_a == 109])
*menustring("    SALL")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     SAC")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("     SAD")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("     SAE")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     SAF")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 104])
*menustring("     SBC")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 105])
*menustring("     SBD")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 106])
*menustring("     SBE")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 107])
*menustring("     SBF")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("   SAMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 108])
*menustring("   SBMAX")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()
*menuendif()

*menuendif()

*menuif([response == 18 || response == 38])
*menuvariableset(variable6,[(attribute_a % 1000)])
*menuif([variable6 == 9 || variable6 == 17 || variable6 == 18])
*menustring("  ")
*menuvariableset(variable8,1)
*menuelse()
*menuif([attribute_a > 4000])
*menustring("P-")
*menuvariableset(variable8,1)
*menuelse()
*menuif([attribute_a > 3000])
*menustring("M-")
*menuvariableset(variable8,1)
*menuelse()
*menuif([attribute_a > 2000])
*menustring("I-")
*menuvariableset(variable8,1)
*menuelse()
*menuif([attribute_a > 1000])
  *menustring("R-")
  *menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()
*menuendif()
*menuendif()
*menuif([property == 1 || property == 4 || property == 22])
*menuif([variable6 == 18])
*menustring("SVMB  ")
*menuendif()
*menuif([variable6 == 19])
*menustring("SMPB  ")
*menuendif()
*menuif([variable6 == 23])
*menustring("SMIPB ")
*menuendif()
*menuif([variable6 == 9])
*menustring("SVM1  ")
*menuendif()
*menuif([variable6 == 17])
*menustring("SVM2  ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SMP1  ")
*menuendif()
*menuif([variable6 == 8])
*menustring("SMIP1 ")
*menuendif()
*menuif([variable6 == 15])
*menustring("SMP2  ")
*menuendif()
*menuif([variable6 == 16])
*menustring("SMIP2 ")
*menuendif()
*menuif([variable6 == 20])
*menustring("SXB   ")
*menuendif()
*menuif([variable6 == 3])
*menustring("SX1   ")
*menuendif()
*menuif([variable6 == 11])
*menustring("SX2   ")
*menuendif()
*menuif([variable6 == 21])
*menustring("SYB   ")
*menuendif()
*menuif([variable6 == 4])
*menustring("SY1   ")
*menuendif()
*menuif([variable6 == 12])
*menustring("SY2   ")
*menuendif()
*menuif([variable6 == 22])
*menustring("SXYB  ")
*menuendif()
*menuif([variable6 == 5])
*menustring("SXY1  ")
*menuendif()
*menuif([variable6 == 13])
*menustring("SXY2  ")
*menuendif()
*menuendif()
*menuif([property == 2])
*menuif([variable6 == 13])
*menustring("SVM   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("SMP   ")
*menuendif()
*menuif([variable6 == 6])
*menustring("SXX   ")
*menuendif()
*menuif([variable6 == 14])
*menustring("SYY   ")
*menuendif()
*menuif([variable6 == 20])
*menustring("SZZ   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SXY   ")
*menuendif()
*menuif([variable6 == 15])
*menustring("SYZ  ")
*menuendif()
*menuif([variable6 == 21])
*menustring("SXZ   ")
*menuendif()
*menuendif()
*menuif([property == 7])
*menustring("S     ")
*menuendif()
*menuif([property == 8])
*menuif([variable6 == 3])
*menustring("SAB   ")
*menuendif()
*menuif([variable6 == 2])
*menustring("SA    ")
*menuendif()
*menuif([variable6 == 4])
*menustring("SB    ")
*menuendif()
*menuendif()
*menuif([property == 5 || property == 17])
*menuif([variable6 == 109])
*menustring("SALL  ")
*menuendif()
*menuif([variable6 == 2])
*menustring("SAC   ")
*menuendif()
*menuif([variable6 == 3])
*menustring("SAD   ")
*menuendif()
*menuif([variable6 == 4])
*menustring("SAE   ")
*menuendif()
*menuif([variable6 == 5])
*menustring("SAF   ")
*menuendif()
*menuif([variable6 == 10])
*menustring("SBC   ")
*menuendif()
*menuif([variable6 == 11])
*menustring("SBD   ")
*menuendif()
*menuif([variable6 == 12])
*menustring("SBE   ")
*menuendif()
*menuif([variable6 == 13])
*menustring("SBF   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SAMAX ")
*menuendif()
*menuif([variable6 == 14])
*menustring("SBMAX ")
*menuendif()
*menuendif()
*menuif([property == 6 || property == 19])
*menuif([variable6 == 109])
*menustring("SALL  ")
*menuendif()
*menuif([variable6 == 4])
*menustring("SAC   ")
*menuendif()
*menuif([variable6 == 5])
*menustring("SAD   ")
*menuendif()
*menuif([variable6 == 6])
*menustring("SAE   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SAF   ")
*menuendif()
*menuif([variable6 == 104])
*menustring("SBC   ")
*menuendif()
*menuif([variable6 == 105])
*menustring("SBD   ")
*menuendif()
*menuif([variable6 == 106])
*menustring("SBE   ")
*menuendif()
*menuif([variable6 == 107])
*menustring("SBF   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("SAMAX ")
*menuendif()
*menuif([variable6 == 108])
*menustring("SBMAX ")
*menuendif()
*menuendif()
*menuif([property == 14])
*menupointerset(pointer1,attribute1_list,[0])
*menuvariableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*menuif([variable1== 104 || variable1 == 103 || variable1== 106 || variable1 == 108])
*menuif([variable6 == 18])
*menustring("SVMB  ")
*menuendif()
*menuif([variable6 == 19])
*menustring("SMPB  ")
*menuendif()
*menuif([variable6 == 23])
*menustring("SMIPB ")
*menuendif()
*menuif([variable6 == 9])
*menustring("SVM1  ")
*menuendif()
*menuif([variable6 == 17])
*menustring("SVM2  ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SMP1  ")
*menuendif()
*menuif([variable6 == 8])
*menustring("SMIP1 ")
*menuendif()
*menuif([variable6 == 15])
*menustring("SMP2  ")
*menuendif()
*menuif([variable6 == 16])
*menustring("SMIP2 ")
*menuendif()
*menuif([variable6 == 20])
*menustring("SXB   ")
*menuendif()
*menuif([variable6 == 3])
*menustring("SX1   ")
*menuendif()
*menuif([variable6 == 11])
*menustring("SX2   ")
*menuendif()
*menuif([variable6 == 21])
*menustring("SYB   ")
*menuendif()
*menuif([variable6 == 4])
*menustring("SY1   ")
*menuendif()
*menuif([variable6 == 12])
*menustring("SY2   ")
*menuendif()
*menuif([variable6 == 22])
*menustring("SXYB  ")
*menuendif()
*menuif([variable6 == 5])
*menustring("SXY1  ")
*menuendif()
*menuif([variable6 == 13])
*menustring("SXY2  ")
*menuendif()
*menuendif()
*menuif([variable1 == 204 || variable1 == 205 || variable1 == 206 || variable1 == 208 || variable1 == 210 ||
variable1 == 213 || variable1 == 215 || variable1 == 220])
*menuif([variable6 == 13])
*menustring("SVM   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("SMP   ")
*menuendif()
*menuif([variable6 == 6])
*menustring("SXX   ")
*menuendif()
*menuif([variable6 == 14])
*menustring("SYY   ")
*menuendif()
*menuif([variable6 == 20])
*menustring("SZZ   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SXY   ")
*menuendif()
*menuif([variable6 == 15])
*menustring("SYZ   ")
*menuendif()
*menuif([variable6 == 21])
*menustring("SXZ   ")
*menuendif()
*menuendif()
*menuif([variable1 == 21 || variable1 == 1])
*menustring("S     ")
*menuendif()
*menuif([variable1== 61])
*menuif([variable6 == 3])
*menustring("SAB   ")
*menuendif()
*menuif([variable6 == 2])
*menustring("SA    ")
*menuendif()
*menuif([variable6 == 4])
*menustring("SB    ")
*menuendif()
*menuendif()
*menuif([variable1 == 60])
*menuif([variable6 == 109])
*menustring("SALL  ")
*menuendif()
*menuif([variable6 == 4])
*menustring("SAC   ")
*menuendif()
*menuif([variable6 == 5])
*menustring("SAD   ")
*menuendif()
*menuif([variable6 == 6])
*menustring("SAE   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SAF   ")
*menuendif()
*menuif([variable6 == 104])
*menustring("SBC   ")
*menuendif()
*menuif([variable6 == 105])
*menustring("SBD   ")
*menuendif()
*menuif([variable6 == 106])
*menustring("SBE   ")
*menuendif()
*menuif([variable6 == 107])
*menustring("SBF   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("SAMAX ")
*menuendif()
*menuif([variable6 == 108])
*menustring("SBMAX ")
*menuendif()
*menuendif()
*menuendif()

*menuendif()

*menuif([response == 53 || response == 54 || response == 56 || response == 57])
*menuvariableset(variable6,[(attribute_a % 1000)])
*menuif([property == 1 || property == 3 || property == 4 || property == 22 || property == 23])
*menuif([variable6 == 20])
*menustring("SXB   ")
*menuendif()
*menuif([variable6 == 3])
*menustring("SX1   ")
*menuendif()
*menuif([variable6 == 11])
*menustring("SX2   ")
*menuendif()
*menuif([variable6 == 21])
*menustring("SYB   ")
*menuendif()
*menuif([variable6 == 4])
*menustring("SY1   ")
*menuendif()
*menuif([variable6 == 12])
*menustring("SY2   ")
*menuendif()
*menuif([variable6 == 22])
*menustring("SXYB  ")
*menuendif()
*menuif([variable6 == 5])
*menustring("SXY1  ")
*menuendif()
*menuif([variable6 == 13])
*menustring("SXY2  ")
*menuendif()
*menuendif()
*menuif([property == 2])
*menuif([variable6 == 6])
*menustring("SXX   ")
*menuendif()
*menuif([variable6 == 14])
*menustring("SYY   ")
*menuendif()
*menuif([variable6 == 20])
*menustring("SZZ   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SXY   ")
*menuendif()
*menuif([variable6 == 15])
*menustring("SYZ  ")
*menuendif()
*menuif([variable6 == 21])
*menustring("SXZ   ")
*menuendif()
*menuendif()
*menuif([property == 14])
*menupointerset(pointer1,attribute1_list,[0])
*menuvariableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*menuif([variable1== 104 || variable1 == 103 || variable1== 106 || variable1 == 108])
*menuif([variable6 == 20])
*menustring("SXB   ")
*menuendif()
*menuif([variable6 == 3])
*menustring("SX1   ")
*menuendif()
*menuif([variable6 == 11])
*menustring("SX2   ")
*menuendif()
*menuif([variable6 == 21])
*menustring("SYB   ")
*menuendif()
*menuif([variable6 == 4])
*menustring("SY1   ")
*menuendif()
*menuif([variable6 == 12])
*menustring("SY2   ")
*menuendif()
*menuif([variable6 == 22])
*menustring("SXYB  ")
*menuendif()
*menuif([variable6 == 5])
*menustring("SXY1  ")
*menuendif()
*menuif([variable6 == 13])
*menustring("SXY2  ")
*menuendif()
*menuendif()
*menuif([variable1 == 204 || variable1 == 205 || variable1 == 206 || variable1 == 208 || variable1 == 210 ||
variable1 == 213 || variable1 == 215 || variable1 == 220])
*menuif([variable6 == 6])
*menustring("SXX   ")
*menuendif()
*menuif([variable6 == 14])
*menustring("SYY   ")
*menuendif()
*menuif([variable6 == 20])
*menustring("SZZ   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SXY   ")
*menuendif()
*menuif([variable6 == 15])
*menustring("SYZ   ")
*menuendif()
*menuif([variable6 == 21])
*menustring("SXZ   ")
*menuendif()
*menuendif()
*menuendif()
*menuendif()

*menuif([response == 11])
*menuif([property == 4 || property == 22 || property == 14 || property == 16 || property == 23 || property == 25])
*menuif([attribute_a == 3])
*menustring("      S1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("      S2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("     S12")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("     S1Z")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     S2Z")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("    SMAP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 10])
*menustring("    SMIP")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()

*menuif([response == 12])
*menuif([property == 4 || property == 22 || property == 14 || property == 16 || property == 23 || property == 25])
*menuvariableset(variable6,[(attribute_a % 1000)])
*menuif([variable6 == 3 || variable6 == 4])
*menustring("     ")
*menuendif()
*menuif([variable6 == 5])
*menustring("    ")
*menuendif()  
*menuif([variable6 == 9 || variable6 == 10])
*menustring("   ")
*menuendif()

*menuif([attribute_a > 3000])
*menustring("M")
*menuelse()        
*menuif([attribute_a > 2000])
*menustring("T")
*menuelse()
*menuif([attribute_a > 1000])
*menustring(" ")
*menuendif()
*menuendif()   
*menuendif()

*menuif([variable6 == 3])
*menustring("S1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([variable6 == 4])
*menustring("S2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([variable6 == 5])
*menustring("S12")
*menuvariableset(variable8,1)
*menuendif()
*menuif([variable6 == 9])
*menustring("SMAP")
*menuvariableset(variable8,1)
*menuendif()
*menuif([variable6 == 10])
*menustring("SMIP")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()

*menuif([response == 13])
*menuif([property == 4 || property == 22 || property == 14 || property == 23 || property == 25])
*menuif([attribute_a == 1])
*menustring("    HILL")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 2])
*menustring("    HOFF")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("    TSAI")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("    STRN")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()

*menuif([response == 10])
*menuif([property == 1])
*menuif([attribute_a == 2])
*menustring("      NX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("      NY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     NXY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("      MX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("      MY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     MXY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("     SXZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("     SYZ")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([property == 7])
*menustring("       F")
*menuvariableset(variable8,1)
*menuendif()
*menuif([property == 8])
*menuif([attribute_a == 2])
*menustring("      FA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("      FB")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([property == 5 || property == 17])
*menuif([attribute_a == 2])
*menustring("     MA1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("     MA2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     MB1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("     MB2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("     SA1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     SA2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("      FA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("      TA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 54])
*menustring("     SB1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 55])
*menustring("     SB2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 56])
*menustring("      FB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 57])
*menustring("      TB")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([property == 6 || property == 19])
*menuif([attribute_a == 4])
*menustring("     MA1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("     MA2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 94])
*menustring("     MB1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 95])
*menustring("     MB2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("     SA1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     SA2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("      FA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("      TA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 96])
*menustring("     SB1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 97])
*menustring("     SB2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 98])
*menustring("      FA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 99])
*menustring("      TA")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([property == 11])
*menuif([attribute_a == 2])
*menustring("      FX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("      FY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("      FZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("      MX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("      MY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("      MZ")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([property == 14])
*menupointerset(pointer1,attribute1_list,[0])
*menuvariableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*menuvariableset(variable2,[@getentityvalue(elems,pointer1.pointervalue,type)])
*menuif([(variable1== 104 || variable1 == 103 || variable1== 108 || variable1 == 106) && (variable2 == 1 || variable2 == 2)])
*menuif([attribute_a == 2])
*menustring("      NX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("      NY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     NXY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("      MX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("      MY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     MXY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("     SXZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("     SYZ")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([(variable1 == 1 && (variable2 == 2 || variable2 == 5)) ||
(variable1 == 21 && (variable2 == 1 || variable2 == 2))])
*menustring("       F")
*menuvariableset(variable8,1)
*menuendif()
*menuif([variable1 == 21 && variable2 == 6])
*menuif([attribute_a == 2])
*menustring("      FX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("      FY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("      FZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("      MX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("      MY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("      MZ")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([variable1 == 61 && variable2 == 1])
*menuif([attribute_a == 2])
*menustring("      FA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("      FB")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([variable1 == 60 && variable2 == 1])
*menuif([attribute_a == 2])
*menustring("     MA1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("     MA2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("     MB1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("     MB2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("     SA1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     SA2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("      FA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("      TA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 54])
*menustring("     SB1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 55])
*menustring("     SB2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 56])
*menustring("      FB")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 57])
*menustring("      TB")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuif([variable1 == 60 && variable2 == 2])
*menuif([attribute_a == 4])
*menustring("     MA1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("     MA2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 94])
*menustring("     MB1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 95])
*menustring("     MB2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("     SA1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("     SA2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("      FA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 9])
*menustring("      TA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 96])
*menustring("     SB1")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 97])
*menustring("     SB2")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 98])
*menustring("      FA")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 99])
*menustring("      TA")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()
*menuendif()

*menuif([response == 19])
*menuif([attribute_a > 4000])
*menustring("P-")
*menuvariableset(variable8,1)
*menuelse()
*menuif([attribute_a > 3000])
*menustring("M-")
*menuvariableset(variable8,1)
*menuelse()
*menuif([attribute_a > 2000])
*menustring("I-")
*menuvariableset(variable8,1)
*menuelse()
*menuif([attribute_a > 1000])
*menustring("R-")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()
*menuendif()
*menuendif()
*menuvariableset(variable6,[(attribute_a % 1000)])
*menuif([property == 1 || property == 4 || property == 22])
*menuif([variable6 == 2])
*menustring("NX    ")
*menuendif()
*menuif([variable6 == 3])
*menustring("NY    ")
*menuendif()
*menuif([variable6 == 4])
*menustring("NXY   ")
*menuendif()
*menuif([variable6 == 5])
*menustring("MX    ")
*menuendif()
*menuif([variable6 == 6])
*menustring("MY    ")
*menuendif()
*menuif([variable6 == 7])
*menustring("MXY   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("SXZ   ")
*menuendif()
*menuif([variable6 == 9])
*menustring("SYZ   ")
*menuendif()
*menuendif()
*menuif([property == 7])
*menustring("F     ")
*menuendif()
*menuif([property == 8])
*menuif([variable6 == 2])
*menustring("FA    ")
*menuendif()
*menuif([variable6 == 4])
*menustring("FB    ")
*menuendif()
*menuendif()
*menuif([property == 5 || property == 17])
*menuif([variable6 == 2])
*menustring("MA1   ")
*menuendif()
*menuif([variable6 == 3])
*menustring("MA2   ")
*menuendif()
*menuif([variable6 == 4])
*menustring("MB1   ")
*menuendif()
*menuif([variable6 == 5])
*menustring("MB2   ")
*menuendif()
*menuif([variable6 == 6])
*menustring("SA1   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SA2   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("FA    ")
*menuendif()
*menuif([variable6 == 9])
*menustring("TA    ")
*menuendif()
*menuif([variable6 == 54])
*menustring("SB1   ")
*menuendif()
*menuif([variable6 == 55])
*menustring("SB2   ")
*menuendif()
*menuif([variable6 == 56])
*menustring("FB    ")
*menuendif()
*menuif([variable6 == 57])
*menustring("TB    ")
*menuendif()
*menuendif()
*menuif([property == 6 || property == 19])
*menuif([variable6 == 4])
*menustring("MA1   ")
*menuendif()
*menuif([variable6 == 5])
*menustring("MA2   ")
*menuendif()
*menuif([variable6 == 94])
*menustring("MB1   ")
*menuendif()
*menuif([variable6 == 95])
*menustring("MB2   ")
*menuendif()
*menuif([variable6 == 6])
*menustring("SA1   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SA2   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("FA    ")
*menuendif()
*menuif([variable6 == 9])
*menustring("TA    ")
*menuendif()
*menuif([variable6 == 96])
*menustring("SB1   ")
*menuendif()
*menuif([variable6 == 97])
*menustring("SB2   ")
*menuendif()
*menuif([variable6 == 98])
*menustring("FA    ")
*menuendif()
*menuif([variable6 == 99])
*menustring("TA    ")
*menuendif()
*menuendif()
*menuif([property == 11])
*menuif([variable6 == 2])
*menustring("FX    ")
*menuendif()
*menuif([variable6 == 3])
*menustring("FY    ")
*menuendif()
*menuif([variable6 == 4])
*menustring("FZ    ")
*menuendif()
*menuif([variable6 == 5])
*menustring("MX    ")
*menuendif()
*menuif([variable6 == 6])
*menustring("MY    ")
*menuendif()
*menuif([variable6 == 7])
*menustring("MZ    ")
*menuendif()
*menuendif()
*menuif([property == 14])
*menupointerset(pointer1,attribute1_list,[0])
*menuvariableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*menuvariableset(variable2,[@getentityvalue(elems,pointer1.pointervalue,type)])
*menuif([(variable1== 104 || variable1 == 103 || variable1== 108 || variable1 == 106) && (variable2 == 1 || variable2 == 2)])
*menuif([variable6 == 2])
*menustring("NX    ")
*menuendif()
*menuif([variable6 == 3])
*menustring("NY    ")
*menuendif()
*menuif([variable6 == 4])
*menustring("NXY   ")
*menuendif()
*menuif([variable6 == 5])
*menustring("MX    ")
*menuendif()
*menuif([variable6 == 6])
*menustring("MY    ")
*menuendif()
*menuif([variable6 == 7])
*menustring("MXY   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("SXZ   ")
*menuendif()
*menuif([variable6 == 9])
*menustring("SYZ   ")
*menuendif()
*menuendif()
*menuif([(variable1 == 1 && (variable2 == 2 || variable2 == 5)) ||
(variable1 == 21 && (variable2 == 1 || variable2 == 2))])
*menustring("F     ")
*menuendif()
*menuif([variable1 == 21 && variable2 == 6])
*menuif([variable6 == 2])
*menustring("FX    ")
*menuendif()
*menuif([variable6 == 3])
*menustring("FY    ")
*menuendif()
*menuif([variable6 == 4])
*menustring("FZ    ")
*menuendif()
*menuif([variable6 == 5])
*menustring("MX    ")
*menuendif()
*menuif([variable6 == 6])
*menustring("MY    ")
*menuendif()
*menuif([variable6 == 7])
*menustring("MZ    ")
*menuendif()
*menuendif()
*menuif([variable1 == 61 && variable2 == 1])
*menuif([variable6 == 2])
*menustring("FA    ")
*menuendif()
*menuif([variable6 == 4])
*menustring("FB    ")
*menuendif()
*menuendif()
*menuif([variable1 == 60 && variable2 == 1])
*menuif([variable6 == 2])
*menustring("MA1   ")
*menuendif()
*menuif([variable6 == 3])
*menustring("MA2   ")
*menuendif()
*menuif([variable6 == 4])
*menustring("MB1   ")
*menuendif()
*menuif([variable6 == 5])
*menustring("MB2   ")
*menuendif()
*menuif([variable6 == 6])
*menustring("SA1   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SA2   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("FA    ")
*menuendif()
*menuif([variable6 == 9])
*menustring("TA    ")
*menuendif()
*menuif([variable6 == 54])
*menustring("SB1   ")
*menuendif()
*menuif([variable6 == 55])
*menustring("SB2   ")
*menuendif()
*menuif([variable6 == 56])
*menustring("FB    ")
*menuendif()
*menuif([variable6 == 57])
*menustring("TB    ")
*menuendif()
*menuendif()
*menuif([variable1 == 60 && variable2 == 2])
*menuif([variable6 == 4])
*menustring("MA1   ")
*menuendif()
*menuif([variable6 == 5])
*menustring("MA2   ")
*menuendif()
*menuif([variable6 == 94])
*menustring("MB1   ")
*menuendif()
*menuif([variable6 == 95])
*menustring("MB2   ")
*menuendif()
*menuif([variable6 == 6])
*menustring("SA1   ")
*menuendif()
*menuif([variable6 == 7])
*menustring("SA2   ")
*menuendif()
*menuif([variable6 == 8])
*menustring("FA    ")
*menuendif()
*menuif([variable6 == 9])
*menustring("TA    ")
*menuendif()
*menuif([variable6 == 96])
*menustring("SB1   ")
*menuendif()
*menuif([variable6 == 97])
*menustring("SB2   ")
*menuendif()
*menuif([variable6 == 98])
*menustring("FA    ")
*menuendif()
*menuif([variable6 == 99])
*menustring("TA    ")
*menuendif()
*menuendif()
*menuendif()
*menuendif()

*menuif([response == 41])
*menuif([attribute_a == 1])
*menustring("LIFE    ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 2])
*menustring("DAMAGE  ")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()

*menuif([response != 35 && response != 39 && response != 51])
*menuif([attribute_a == 0])
*menustring("        ")
*menuvariableset(variable8,1) 
*menuelse()
*menuif([response == 36 || response == 37])
*menuif([response == 36])
*menuif([attribute_a == 1])
*menustring("       X")
*menuvariableset(variable8,1)
*menuendif()  
*menuif([attribute_a == 2])
*menustring("       Y")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("       Z")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()        
*menuif([response == 37])
*menuif([attribute_a == 1])
*menustring("      XX")
*menuvariableset(variable8,1)
*menuendif()  
*menuif([attribute_a == 2])
*menustring("      YY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("      ZZ")
*menuvariableset(variable8,1)
*menuendif()         
*menuif([attribute_a == 4])
*menustring("      XY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("      XZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("      YZ")
*menuvariableset(variable8,1)
*menuendif()                  
*menuendif()  
*menuelse()
*menuif([response == 7 || response == 62])
*menuif([attribute_a == 1])
*menustring("      TX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 2])
*menustring("      TY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 3])
*menustring("      TZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 4])
*menustring("      RX")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 5])
*menustring("      RY")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 6])
*menustring("      RZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 7])
*menustring("    TXYZ")
*menuvariableset(variable8,1)
*menuendif()
*menuif([attribute_a == 8])
*menustring("    RXYZ")
*menuvariableset(variable8,1)
*menuendif()
*menuendif()  

*menuif([(response < 7 || response > 13) && response != 62])
*menuif([attribute_a < 1000])
*menuif([response != 41])
  *menuif([response == 43 || response == 44 || response == 45 || 
    response == 47 || response == 48 || response == 49])
    *menustring("      ")
    *menuif([attribute_a == 1])
      *menustring("TX")
    *menuendif()
    *menuif([attribute_a == 2])
      *menustring("TY")
    *menuendif()
    *menuif([attribute_a == 3])
      *menustring("TZ")
    *menuendif()
    *menuif([attribute_a == 4])
      *menustring("RX")
    *menuendif()
    *menuif([attribute_a == 5])
      *menustring("RY")
    *menuendif()
    *menuif([attribute_a == 6])
      *menustring("RZ")
    *menuendif()
    *menuvariableset(variable8,1)
  *menuelse()
    *menuif([response == 46 || response == 50])
      *menustring("    PRES")
      *menuvariableset(variable8,1)
    *menuelse()
      *menuif([response == 53 || response == 54 || response == 56 || response == 57])
        *menuvariableset(variable8,1)
      *menuelse()
        *menuif([response != 18 && response != 38])
          *menufield(ATTA,integer,attribute_a,8)
          *menuvariableset(variable8,1)
        *menuelse()
          *menuvariableset(variable8,1)
        *menuendif()
      *menuendif()
    *menuendif()
  *menuendif()
*menuendif() 
*menuelse()
*menuif([response == 14 || response == 15 || response == 16])
  *menuvariableset(variable6,[(attribute_a % 1000)])
  *menuif([variable6 < 7])
    *menustring("    ")
  *menuelse()
    *menustring("  ")
  *menuendif()
  *menuif([attribute_a > 4000])
    *menustring("P-")
    *menuvariableset(variable8,1)
  *menuelse()
    *menuif([attribute_a > 3000])
      *menustring("M-")
      *menuvariableset(variable8,1)
    *menuelse()
      *menuif([attribute_a > 2000])
        *menustring("I-")
        *menuvariableset(variable8,1)
      *menuelse()
        *menuif([attribute_a > 1000])
          *menustring("R-")
          *menuvariableset(variable8,1)
        *menuendif()
      *menuendif()
    *menuendif()
  *menuendif()
  *menuif([$DRESP1_NORMAL_VELOCITY == 1])
    *menustring("NORM")
  *menuelse()
    *menuif([variable6 == 1])
      *menustring("TX")
    *menuendif()
    *menuif([variable6 == 2])
      *menustring("TY")
    *menuendif()
    *menuif([variable6 == 3])
      *menustring("TZ")
    *menuendif()
    *menuif([variable6 == 4])
      *menustring("RX")
    *menuendif()
    *menuif([variable6 == 5])
      *menustring("RY")
    *menuendif()
    *menuif([variable6 == 6])
      *menustring("RZ")
    *menuendif()
    *menuif([variable6 == 7])
      *menustring("TXYZ")
    *menuendif()
    *menuif([variable6 == 8])
      *menustring("RXYZ")
    *menuendif()
  *menuendif()
*menuendif()
*menuif([response == 42])
  *menuvariableset(variable6,[(attribute_a % 1000)])
  *menuif([variable6 < 7])
    *menustring("    ")
  *menuelse()
    *menustring("  ")
  *menuendif()
  *menuif([attribute_a > 4000])
    *menustring("P-")
    *menuvariableset(variable8,1)
  *menuelse()
    *menuif([attribute_a > 3000])
      *menustring("M-")
      *menuvariableset(variable8,1)
    *menuelse()
      *menuif([attribute_a > 2000])
        *menustring("I-")
        *menuvariableset(variable8,1)
      *menuelse()
        *menuif([attribute_a > 1000])
          *menustring("R-")
          *menuvariableset(variable8,1)
        *menuendif()
      *menuendif()
    *menuendif()
  *menuendif()
  *menustring("PRES")
*menuendif()   
*menuendif()    
*menuendif() 
*menuendif()
*menuendif()
*menuendif()

*menuif([variable8 == 0])
*menuif([(attribute_a > 0) && (response != 10)])
*menufield(ATTA,integer,attribute_a,8)
*menuendif()
*menuendif()

*menuif([functionid == 0 && response != 35 && response != 39 && response != 51])
*menuif([attribute_b == 0.0])
*menuif([response < 11 || response > 13])
*menustring("        ")
*menuelse()
*menuif([property != 16 && property != 25])
*menustring("     ALL")
*menuelse()
*menustring("        ")
*menuendif()
*menuendif()
*menuelse()
*menuif([attribute_b > 0.0])
*menuif([response == 11 || response == 12 || response == 13])
*menuif([property != 16 && property != 25 ])
*menufield(ATTB,integer,[(10*attribute_b)/10],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuelse()
*menuif([response == 9 || response == 62])
*menufield(ATTB,integer,attribute_b,8)
*menuelse()
*menufield(ATTB,real,attribute_b,8)
*menuendif()
*menuendif()
*menuelse()
*menuif([response == 11 || response == 12 || response == 13])
*menuvariableset(variable4,[-1*attribute_b])
*menustring("G")
*menuif([variable4 < 10])
*menufield(,integer,variable4,1)
*menustring("      ")
*menuendif()
*menuif([variable4 >= 10])
*menuif([variable4 < 100])
  *menufield(,integer,variable4,2)
  *menustring("     ")
*menuendif()
*menuendif()
*menuif([variable4 >= 100])
*menuif([variable4 < 1000])
  *menufield(,integer,variable4,3)
  *menustring("    ")
*menuendif()
*menuendif()
*menuif([variable4 >= 1000])
*menuif([variable4 < 10000])
  *menufield(,integer,variable4,4)
  *menustring("   ")
*menuendif()
*menuendif()
*menuif([variable4 >= 10000])
*menuif([variable4 < 100000])
  *menufield(,integer,variable4,5)
  *menustring("  ")
*menuendif()
*menuendif()
*menuif([variable4 >= 100000])
*menuif([variable4 < 1000000])
  *menufield(,integer,variable4,6)
  *menustring(" ")
*menuendif()
*menuendif()
*menuif([variable4 >= 1000000])
*menuif([variable4 < 10000000])
  *menufield(,integer,variable4,7)
*menuelse()
  *menustring(" ERROR")
*menuendif()
*menuendif()
*menuelse()
*menuif([attribute_b == 0.0])
*menustring("        ")
*menuendif()
*menuif([attribute_b == -1.0])
*menustring("     SUM")
*menuendif()
*menuif([attribute_b == -2.0])
*menustring("     AVG")
*menuendif()
*menuif([attribute_b == -3.0])
*menustring("     SSQ")
*menuendif()
*menuif([attribute_b == -4.0])
*menustring("     RSS")
*menuendif()
*menuif([attribute_b == -5.0])
*menustring("     MAX")
*menuendif()
*menuif([attribute_b == -6.0])
*menustring("     MIN")
*menuendif()
*menuif([attribute_b == -7.0])
*menustring("  AVGABS")
*menuendif()
*menuif([attribute_b == -8.0])
*menustring("  MAXABS")
*menuendif()
*menuif([attribute_b == -9.0])
*menustring("  MINABS")
*menuendif()
*menuif([attribute_b == -10.0])
*menustring("  SUMABS")
*menuendif()
*menuendif()
*menuendif()  
*menuendif()
*menuendif()

*menuif([attribute1max > 0])
*menuvariableset(variable1,0)
*menupointerset(pointer1,attribute1_list,[variable1])
*menufield(ATTi,integer,pointer1.pointervalue,8)
*menuvariableset(variable1,[variable1+1])
*menuif([variable1 < attribute1max])
*menulineend()
*menustring("        ")
*menuendif()
*menuvariableset(variable2,0)
*menuvariableset(variable3,[attribute1max - variable1])
*beginrepeat(variable3)
*menupointerset(pointer1,attribute1_list,[variable1])
*menufield(ATTi,integer,pointer1.pointervalue,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= attribute1max])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*endrepeat()
*menuendif()
*menuif([(response == 35) || (response == 40 && $OPTIRESP_EXTERNALSWITCH == 0)])
*menuif([desvarlistmax > 0])
*menulineend()
*menustring("        ")
*menustring("DESVAR  ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*menucounterset(counter2,1)
*beginrepeat(desvarlistmax)
*menuif([counter2 ==1000000000])
*menulineend()
*menuendif() 
*menupointerset(pointer1,desvarlist,[variable1])
*menufield(desvar,integer,pointer1.pointervalue,8)
*menuentitytype(designvars)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 7 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 < desvarlistmax])
*menulineend()
*menustring("                ")
*menuendif()
*menuendif()
*endrepeat()
*menuendif()
*menuif([tableentrylistmax > 0])
*menulineend()
*menustring("        ")
*menustring("DTABLE  ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*menucounterset(counter2,1)
*beginrepeat(tableentrylistmax)
*menuif([counter2 ==1000000000])
*menulineend()
*menuendif() 
*menupointerset(pointer1,tableentrylist,[variable1])
*menuvariableset(variable9,[@getinternalid(14,pointer1.pointervalue)])
*menufield(LABL,string,[@getentityvalue(tables,variable9,name)],8)
*menuentitytype(tables)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 7 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 < tableentrylistmax])
*menulineend()
*menustring("                ")
*menuendif()
*menuendif()
*endrepeat()
*menuendif()
*menuif([function_loadsteplistmax + responselistmax])
*menuif([function_loadsteplistmax==0])
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*menuvariableset(variable3,0)
*menuvariableset(variable4,0)

*beginrepeat(responselistmax)
*menupointerset(pointer1,responselist,[variable1])
*menuvariableset(variable5,[@getentityvalue(optiresponses,pointer1.pointervalue,response)])
*menuif( [variable5!=35 && variable5 !=40])
*menuif([variable4==0])
  *menulineend()
  *menustring("        ")
  *menustring("DRESP1  ")
*menuendif()
*menufield(response,integer,pointer1.pointervalue,8)
*menuentitytype(optiresponses)
*menuvariableset(variable4,1)
*menuvariableset(variable2,[variable2+1])
*menuendif()  
*menuvariableset(variable1,[variable1+1])
*menuif([variable2 == 7])
*menuvariableset(variable2,0)
*menuif([variable1 < responselistmax])
  *menulineend()
  *menustring("                ")
*menuendif()
*menuendif()
*endrepeat()

*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*menuvariableset(variable3,0)
*menuvariableset(variable4,0)

*beginrepeat(responselistmax)
*menupointerset(pointer1,responselist,[variable1])

*menuif([@getentityvalue(optiresponses,pointer1.pointervalue,response)==35])
*menuif([variable3==0])
  *menulineend()
  *menustring("        ")
  *menustring("DRESP2  ")
*menuendif()
*menufield(response,integer,pointer1.pointervalue,8)
*menuentitytype(optiresponses)
*menuvariableset(variable3,1)
*menuvariableset(variable2,[variable2+1])
*menuendif() 
*menuvariableset(variable1,[variable1+1])
*menuif([variable2 == 7])
*menuvariableset(variable2,0)
*menuif([variable1 < responselistmax])
  *menulineend()
  *menustring("                ")
*menuendif()
*menuendif()
*endrepeat()       
*menuendif()
*menuif([responselistmax > 0 && function_loadsteplistmax > 0])
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*menuvariableset(variable3,0)
*menuvariableset(variable4,0)

*beginrepeat(function_loadsteplistmax)
*menupointerset(pointer1,responselist,[variable1])
*menuvariableset(variable5,[@getentityvalue(optiresponses,pointer1.pointervalue,response)])
*menuif( [variable5!=35 && variable5 !=40])
*menuif([variable4==0])
  *menulineend()
  *menustring("        ")
  *menustring("DRESP1L ")
  *menuvariableset(variable4,1)
*menuendif()
*menufield(response,integer,pointer1.pointervalue,8)
*menuentitytype(optiresponses)
*menupointerset(pointer1,function_loadsteplist,[variable1])
*menufield(loadstep,integer,pointer1.pointervalue,8)
*menuentitytype(loadsteps)
*menuvariableset(variable2,[variable2+1])
*menuendif()
*menuvariableset(variable1,[variable1+1])
*menuif([variable2 == 3])
*menuvariableset(variable2,0)
*menuif([variable1 < function_loadsteplistmax])
  *menulineend()
  *menustring("                ")
*menuendif()
*menuendif()
*endrepeat()

*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*menuvariableset(variable3,0)
*menuvariableset(variable4,0)

*beginrepeat(function_loadsteplistmax)
*menupointerset(pointer1,responselist,[variable1])
*menuif([@getentityvalue(optiresponses,pointer1.pointervalue,response)==35])
*menuif([variable3==0])
  *menulineend()
  *menustring("        ")
  *menustring("DRESP2L ")
  *menuvariableset(variable3,1)
*menuendif()
*menufield(response,integer,pointer1.pointervalue,8)
*menuentitytype(optiresponses)
*menupointerset(pointer1,function_loadsteplist,[variable1])
*menufield(loadstep,integer,pointer1.pointervalue,8)
*menuentitytype(loadsteps)
*menuvariableset(variable2,[variable2+1])
*menuendif()
*menuvariableset(variable1,[variable1+1])
*menuif([variable2 == 3])
*menuvariableset(variable2,0)
*menuif([variable1 < function_loadsteplistmax])
  *menulineend()
  *menustring("                ")
*menuendif()
*menuendif()
*endrepeat()
*menuendif()
*menuendif()
*menuif([nodelistmax > 0])
*menulineend()
*menustring("        ")
*menustring("DGRID   ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*menucounterset(counter2,1)
*beginrepeat(nodelistmax)
*menuif([counter2 ==1000000000])
*menulineend()
*menuendif() 
*menupointerset(pointer1,nodelist,[variable1])
*menufield(dgrid,integer,pointer1.pointervalue,8)
*menuentitytype(nodes)
*menupointerset(pointer1,coordinate_type_list,[variable1])
*menufield(coord,integer,pointer1.pointervalue,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 3 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 < nodelistmax])
*menulineend()
*menustring("                ")
*menuendif()
*menuendif()
*endrepeat()
*menuendif()
*menuif([(response == 35) && (dvprelmax > 0)])
*menulineend()
*menustring("        ")
*menustring("DVPREL  ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat(dvprelmax)
*menupointerset(pointer1,dvprellist,[variable1])
*menufield(dvprel,integer,pointer1.pointervalue,8)
*menuentitytype(dvprels)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 7 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 < dvprelmax])
*menulineend()
*menustring("                ")
*menuendif()
*menuendif()
*endrepeat()
*menuendif()   
*menuendif()
*menulineend()
*menuif([((response >= 8) && (response <= 13)) || (response == 18) || (response == 19) || (response == 38) || 
(response == 41) || (response == 53) || (response == 54) || (response == 56) || (response == 57)])
*menuvariableset(variable3,[@attributearraylength($Response_ExcludedElems)])
*menuif([variable3 > 0])
*menustring("        ")
*menustring("EXCL    ")
*menuvariableset(variable4,0)
*menuvariableset(variable5,0)
*menuvariableset(variable6,0)  
*beginrepeat(variable3)
*menuif([@attributearrayvalue($Response_ExcludedElems,variable4+1) > 0])
*menufield(EID,integer,[@attributearrayvalue($Response_ExcludedElems,variable4+1)],8)
*menuvariableset(variable5,0)
*menuvariableset(variable6,[variable6+1])
*menuelse()
*menuvariableset(variable5,1)
*menuendif()
*menuvariableset(variable4,[variable4+1])

*menuif([variable5 == 0])
*menuif([variable6 % 7 == 0])
*menuif([variable4 < variable3])
  *menulineend()
  *menustring("                ")
*menuendif()
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuendif()
*menuendif()
*menuif([response == 43 || response == 44 || response == 45 || response == 46 || response == 47 || response == 48 || 
response == 49 || response == 50 || response == 53 || response == 54 || response == 56 || response == 57])
*menuif([$RESPONSE_RANDPS_ID > 0]) 
*menustring("        ")
*menustring("EXTN    ")
*menufield(RANDID,integer,[$RESPONSE_RANDPS_ID],8)
*menuendif()
*menulineend()
*menuendif()
*menuendif()

// start for Dresp3.. dummy menu section for panel
*menuif([($OPTIRESP_EXTERNALSWITCH == 1)])  
*menuoption(DESIGN_VARIABLES,$Designvars)
*menucase(0)
*menuattributeset($ndesignvars,0) 
*menucase(1)
*menustring("DESVAR ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($ndesignvars                 )
*menufield(desvar,integer,$desvar,8)
*menuentitytype(designvars)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $ndesignvars])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuoption(TABLE_ENTRIES,$Tableentries)
*menucase(0)
*menuattributeset($ntableentries,0) 
*menucase(1)
*menustring("DTABLE ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($ntableentries)
*menufield(tableentr,integer,$tableentr,8)
*menuentitytype(tables)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $ntableentries])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuif([$ResponsesLoadstep==0])
*menuoption(RESPONSES,$Responses)
*menucase(0)
*menuattributeset($nresponses,0) 
*menucase(1)
*menustring("DRESP1/2")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($nresponses)
*menufield(response,integer,$resp,8)
*menuentitytype(optiresponses)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $nresponses])
  *menulineend()
  *menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()

*menuendif()
*menuif([$Responses==0])
*menuoption(RESPONSES_BY_LOADSTEP,$ResponsesLoadstep)
*menucase(0)
*menuattributeset($nresponsesl,0) 
*menucase(1)
*menustring("DRESP1/2L")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($nresponsesl)
*menufield(response,integer,$resp,8)
*menuentitytype(optiresponses)
*menufield(loadstep,integer,$lstep,8)
*menuentitytype(loadsteps)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+2])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $nresponsesl])
  *menulineend()
  *menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()

*menuendif()
*menuoption(NODES,$Nodes)
*menucase(0)
*menuattributeset($nnodes,0) 
*menucase(1)
*menustring("DGRID  ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($nnodes)
*menufield(node,integer,$nod,8)
*menuentitytype(nodes)
*menufield(,integer,$ncoord_type,8)
*menulegalvalue(1)
*menulegalvalue(2)
*menulegalvalue(3)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 3 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $nnodes])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menuoptionend()
*menulineend()
*menuendif()

/// end for dresp3..
*endmenu()
*format()
*if([response == 34])
*if([norm > 0.0])
*string("NORM =  ")
*fieldleft(real,norm,8)
*end()
*endif() 
*endif()
*output()



*text()
*if([#opticonstraintglobalcount > 0])
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*string("DESGLB ")
*field(integer,#dessubcounter,8)
*end()
*if([@writehmcomments()])
*string("$")
*end() 
*endif()
*endif()
*output()

*include(../../optistruct/include/cards_SubcaseInformation.tpl)

*include(../../optistruct/include/loadsteps.tpl)

*sets()
*before()
*counterset(counter3,0)
*format()
*if([@defined($MBDCRV)==0 && @defined($MBDSRF) == 0 && @defined($MBPCRV) == 0 && 
@defined($SET_DESVAR)==0 && @defined($SET_MODE)==0 && @defined($SET_FREQ)==0 &&
@defined($SET_TIME)==0 && @defined($SET_GRID)==0 && @defined($SET_ELEM)==0 &&
@defined($PLY)==0 && @defined($PANEL)==0 && @defined($SET1)==0 && @defined($SET_GRIDC)==0 &&
@defined($SET_PLOTEL)==0 && @defined($ERPPNL)==0 && @defined($SET_PLY)==0 && @defined($PANELG)==0 && 
@defined($PRETENS)==0 && @defined($RADSND)==0 && @defined($SET_RIGID)==0])
if([@defined($SET)==0 && @defined($PSET) == 0])
*if([style != 2])
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMSET ")
*field(integer,id,8)
*string(" ")
*field(integer,type,8)
*string(" ")
*quote()
*field(string,name,0)
*quote()
*end()
*endif()
*if([type == 10])
*counterset(counter1,0)
*loopif([counter1 < idsmax])
*if([counter1 % 8 == 0])
*if([counter1 != 0])
*end()
*endif()
*string("$HMSET_SET_ID   ")
*endif()
*pointerset(pointer1,ids,counter1)
*field(integer,pointer1.pointervalue,8)
*counterinc(counter1)
*endloop()
*end()
*endif()
*if([idsmax > 0])
*if([type != 10])
*if([type == 3 || type == 11])
*string("PSET ")
*counterinc(counter3)
*else()
*if([(type == 2) && (ordered == 1) && (idsmax == 1) && (@stringinstring(name,"~",0) == 1)])
*string("$HMPERTSET  ")
*else()
*string("SET ")
*endif()
*endif()
*fieldleft(integer,id,0)
*string(" = ")
*counterset(counter1,1)
*if([idsmax <= 7])
*loopif([counter1 <= idsmax ])
*pointerset(pointer1,ids,[counter1-1])
*fieldleft(integer,pointer1.pointervalue,0)
*if([counter1 < idsmax])
  *string(",")
*endif()
*counterinc(counter1)
*endloop()
*else()
*counterset(counter2,0)
*loopif([counter1 <= idsmax ])
*if([counter2 == 7])
  *end()
  *string("        ")
  *counterset(counter2,0)
*endif()
*pointerset(pointer1,ids,[counter1-1])
*fieldleft(integer,pointer1.pointervalue,0)
*if([counter1 != idsmax])
  *string(",")
*endif()
*counterinc(counter1)
*counterinc(counter2)
*endloop()
*endif()
*end()
*if([$SET_LINE_COUNT > 0])
*string("SET ")
*field(integer,id,0)
*string(" = ")
*counterset(counter11,1)
*if([$SET_LINE_COUNT > 0])
*loopif([counter11 <= $SET_LINE_COUNT])
  *if([counter11 != 1])
    *string(",")
    *end()
    *string("        ")
  *endif()
  *fieldleft(string,[@attributearrayvalue($SET_LINE,counter11)],0)
  *counterinc(counter11)
*endloop()
*endif()
*endif()
*if([$SET_LINE_COUNT > 0])
*end()
*endif()
*else() // code below is when set is of type 10 (sets)
*counterset(counter1,1)
*counterset(counter2,0)
*counterset(counter4,0)
*loopif(counter1<=idsmax)
*if([counter1 == 1])
*uservariableset(#psetwritten,0)
*endif()
*if([counter2 == 7])
*end()
*string("        ")
*counterset(counter2,0)
*endif()
*pointerset(pointer1,ids,[counter1-1])
*counterset(counter3,1)
*if([pointer1.set.type == 3 || pointer1.set.type == 11])
*loopif([counter3 <= pointer1.set.idsmax])
  *if([#psetwritten == 0])
    *string("PSET ")
    *fieldleft(integer,id,0)
    *string(" = ")
    *uservariableset(#psetwritten,1)
  *endif()
  *if([counter4 == 7])
    *end()
    *string("        ")
    *counterset(counter4,0)
  *endif()
  *pointerset(pointer2,pointer1.set.ids,[counter3-1])
  *field(integer,pointer2.pointervalue,0)
  *if([(counter1 != idsmax) || (counter3 != pointer1.set.idsmax)])
    *string(",")
  *endif()
  *counterset(counter3,[counter3+1])
  *counterset(counter4,[counter4+1])
*endloop()
*endif()
*counterset(counter1,[counter1+1])
*counterset(counter2,[counter2+1])
*endloop()  
*endif() 
*endif()
*end()
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*if([(type == 2) && (ordered == 1) && (idsmax == 1) && (@stringinstring(name,"~",0) == 1)])
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMSET ")
*field(integer,id,8)
*string(" ")
*field(integer,type,8)
*string(" ")
*quote()
*field(string,name,0)
*quote()
*end()
*endif()          
*string("$HMPERTSET  ")
*fieldleft(integer,id,0)
*string(" = ")
*pointerset(pointer1,ids,0)
*fieldleft(integer,pointer1.pointervalue,0)
*end()
*endif()
*else() // code below is when style == 2 (formula sets)
*if([@writehmcomments()])
*string("$HMSET ")
*field(integer,id,8)
*string(" ")
*field(integer,type,8)
*string(" ")
*quote()
*field(string,name,)
*quote()
*end()
*endif()
*counterset(counter2,1)
*counterset(counter5,0)
*counterset(counter10,1)
*counterset(counter1,1)
*counterset(counter7,0)
*counterset(counter11,1)
*string("SET ")
*field(integer,id,0)
*string(" = ")
*loopif([counter1 <= clausesmax])
*counterset(counter2,1)
*counterset(counter5,0)
*if([counter11 != 1])
*string(",")
*end()
*string("        ")
*endif()
*pointerset(pointer1,clauses,[counter1-1])
*if([pointer1.clausetype==1])
*field(integer,pointer1.start,0)
*string(" THRU ")
*field(integer,pointer1.end,0)
*counterset(counter11,2)
*if([pointer1.exceptidsmax>0])
*string(" EXCEPT ")
*loopif([counter2 <=pointer1.exceptidsmax])
*if([counter5>4])
  *string(",")
  *end()
  *string("        ")
  *counterset(counter5,0)
*endif()
*pointerset(pointer3,pointer1.exceptids,[counter2-1])
*if([counter2!=1 && counter5!=0])
  *string(",")
*endif()
*field(integer,pointer3.pointervalue,0)
*counterinc(counter2)
*counterinc(counter5)
*counterset(counter11,2)
*endloop()
*endif()
*endif()
*if([pointer1.clausetype==0])
*loopif([counter2 <=pointer1.idsmax])
*if([counter5>7])
*string(",")
*end()
*string("        ")
*counterset(counter5,0)
*endif() 
*pointerset(pointer2,pointer1.ids,[counter2-1])
*if([counter2!=1 && counter5!=0])
*string(",")
*endif()
*field(integer,pointer2.pointervalue,0)
*counterinc(counter2)
*counterinc(counter5)
*counterset(counter11,2)
*endloop()
*counterset(counter11,2)
*endif()
*counterinc(counter1)
*endloop()
*end() // end code for style == 2 (formula sets)
*endif()
endif()
*endif()
*output()

*includefiles(2,0)
*format()
*string("INCLUDE '")
*field(string,[@inclstrsplit(fullname,)],70)
*string("'")
field(string,fullname,0)
*end()
*output()

*tags()
*before()
end()
*if([@writehmcomments()])
*string("$$--------------------------------------------------------------")
*end()
*string("$$ HYPERMESH TAGS ")
*end()
*string("$$--------------------------------------------------------------")
*end()
*string("$$BEGIN TAGS")
*end()
*endif()  
*format()

*if([@writehmcomments()])
*string("$HMTAG(")
*field(integer,id,0)
*string(",")
*field(integer,entityid,0)
*string(",")
*field(integer,type,0)
*string(",")
*field(integer,color,0)
*string(",")
*field(quotedstring,label,0)
*string(",")
*field(quotedstring,body,0)
*string(")")
*end()
*endif()
*if([attributesmax > 0])
*string("  *attributesforentity(HM_TAG,")
*field(integer,id,0)
*string(",")
*field(integer,attributesmax,0)
*string(")")
*end()
*endif()
*after()
*if([@writehmcomments()])
*string("$$END TAGS")
*end()
*endif()  
*output()

*text()
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*if([@controlcardattributedefined(OMIT,$OMIT)])
*if([@getcontrolcardattribute(OMIT,$OMIT_BEGIN_BULK) == 0])
*string("BEGIN BULK")
*endif()
*else()
*if([@controlcardattributedefined(OMIT,$OMIT) == 0])
*string("BEGIN BULK")
*endif()    
*endif()
*end()
*output()

*cards("ACMODL")
*beginmenu()
*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()
*menustring("ACMODL  ")
*menufield(INTER,string,$ACMODL_INTER,8)
*menulegalvalue(IDENT)
*menulegalvalue(DIFF)
*menudefaultvalue("        ")
*menufield(INFOR,string,$ACMODL_INFOR,8)
*menulegalvalue(GRIDS)
*menulegalvalue(ELEMENTS)
*menulegalvalue(NONE)
*menulegalvalue(ALL)
*menudefaultvalue("        ")
*menufield(FSET,entity,$ACMODL_FSET,8)
*menuentitytype(sets)
*menudefaultvalue("        ")
*menufield(SSET,entity,$ACMODL_SSET,8)
*menuentitytype(sets)
*menudefaultvalue("        ")
*menufield(NORMAL,real,$ACMODL_NORMAL,8)
*menudefaultvalue("        ")
*menustring("        ")
*menufield(SHNEPS,real,$ACMODL_SKNEPS,8)
*menudefaultvalue("        ")
*menufield(DSKNEPS,real,$ACMODL_DSKNEPS,8)
*menudefaultvalue("        ")
*menustring("+       ")
*menulineend()
*menustring("+       ")
*menufield(INTOL,real,$ACMODL_INTOL,8)
*menudefaultvalue("        ")
*menustring("        ")
*menufield(SRCHUNIT,string,$ACMODL_SRCHUNIT,8)
*menulegalvalue(ABS)
*menulegalvalue(REL)
*menudefaultvalue("        ")
*menufield(MAXSGRID,integer,$ACMODL_MAXSGRID,8)
*menudefaultvalue("        ")
*menuinitialvalue(200)
*menurestrictedvalue(>,0)
*menulineend()
*endmenu()

if([@controlcardattributedefined(ACMODL,$ACMODL)!=0])
string("ACMODL")
endif()

*format()
*string("ACMODL  ")
*if([@defaultstatus($ACMODL_INTER)])
*string("        ")
*else()
*field(string,$ACMODL_INTER,8)
*endif()

*if([@defaultstatus($ACMODL_INFOR)])
*string("        ")
*else()
*field(string,$ACMODL_INFOR,8)
*endif()
*if([@defaultstatus($ACMODL_FSET)])
*string("        ")
*else()
*field(integer,$ACMODL_FSET,8)
*endif()
*if([@defaultstatus($ACMODL_SSET)])
*string("        ")
*else()
*field(integer,$ACMODL_SSET,8)
*endif()

*if([@defaultstatus($ACMODL_NORMAL)])
*string("        ")
*else()
*field(real,$ACMODL_NORMAL,8)
*endif()


*string("        ")


*if([@defaultstatus($ACMODL_SKNEPS)])
*string("        ")
*else()
*field(real,$ACMODL_SKNEPS,8)
*endif()

*if([@defaultstatus($ACMODL_DSKNEPS)])
*string("        ")
*else()
*field(real,$ACMODL_DSKNEPS,8)
*endif()

*if([ @defaultstatus($ACMODL_INTOL)==0 || @defaultstatus($ACMODL_SRCHUNIT)==0 || @defaultstatus($ACMODL_MAXSGRID)==0  ])
*string("+       ")
*end()
*string("+       ")

*if([@defaultstatus($ACMODL_INTOL)])
*string("        ")
*else()
*field(real,$ACMODL_INTOL,8)
*endif()


*string("        ")

*if([@defaultstatus($ACMODL_SRCHUNIT)])
*string("        ")
*else()
*field(string,$ACMODL_SRCHUNIT,8)
*endif()

*if([@defaultstatus($ACMODL_MAXSGRID)])
*string("        ")
*else()
*field(integer,$ACMODL_MAXSGRID,8)
*endif()

*endif()


*end()
*output()


*cards("DGLOBAL")
*beginmenu()
*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()

*menustring("DGLOBAL ")
*menufield(ID,integer,$DGLOBAL_ID,8)
*menuinitialvalue(id)
*menuoption(NGROUP_OPT,$DGLOBAL_NGROUP)
*menucase(0)
*menufield(NGROUP,string,$DGLOBAL_NGROUP_STR,8)
*menulegalvalue("AUTO    ")
*menulegalvalue("        ")
*menucase(1)
*menufield(NGROUP,integer,$DGLOBAL_NGROUP_INT,8)
*menurestrictedvalue(>,0)
*menuoptionend()
*menuoption(NPOINT_OPT,$DGLOBAL_NPOINT)
*menucase(0)
*menufield(NPOINT,string,$DGLOBAL_NPOINT_STR,8)
*menulegalvalue("AUTO    ")
*menulegalvalue("        ")
*menucase(1)
*menufield(NPOINT,integer,$DGLOBAL_NPOINT_INT,8)
*menurestrictedvalue(>,0)
*menuoptionend()  
*menufield(SPMETH,string,$DGLOBAL_SPMETH,8)
*menulegalvalue(OFFSET)
*menulegalvalue(EXTREME)
*menulegalvalue("        ")
*menuoption(NOUTDES_OPT,$DGLOBAL_NOUTDES)
*menucase(0)
*menufield(NOUTDES,string,$DGLOBAL_NOUTDES_STR,8)
*menulegalvalue("ALL     ")
*menulegalvalue("        ")
*menucase(1)
*menufield(NOUTDES,integer,$DGLOBAL_NOUTDES_INT,8)
*menurestrictedvalue(>,0)
*menuoptionend()    
*menufield(DESTOL,real,$DGLOBAL_DESTOL,8)
*menudefaultvalue("        ")
*menuinitialvalue(1)

*menulineend()
*menustring("        ")
*menustring("        ")

*menufield(MAXSP,integer,$DGLOBAL_MAXSP,8)
*menudefaultvalue("        ")
*menuinitialvalue(20)    
*menufield(MAXSUCC,integer,$DGLOBAL_MAXSUCC,8)
*menudefaultvalue("        ")
*menuinitialvalue(10)   
*menufield(MAXWALL,real,$DGLOBAL_MAXWALL,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)    
*menufield(MAXCPU,real,$DGLOBAL_MAXCPU,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)  

*menuattributecreate($DGLOBAL_NUM_GROUP,0)
*beginrepeat($DGLOBAL_NUM_GROUP)
*repeatcounter(1)
*menulineend()
*menustring("        ")
*menustring("GROUP   ")
*menufield(SID,integer,$DGLOBAL_SID,8)
*menuentitytype(sets)
*menuentitysubtype(designvars)
*menufield(NPOINT,string,$DGLOBAL_NPOINT_GROUP_AUTO,8)
*menulegalvalue(AUTO)
*menulegalvalue("        ")
*menulegalvalue(INT)

*menuif([@stringinstring(@attributearrayvalue($DGLOBAL_NPOINT_GROUP_AUTO,counter1),"INT",1)])
*menufield(NPOINT,integer,$DGLOBAL_NPOINT_GROUP,8)
*menurestrictedvalue(>,0)  
*menuendif()
*menufield(SPMETH,string,$DGLOBAL_SPMETH_GROUP,8)
*menulegalvalue("        ")
*menulegalvalue(EXTREME)
*menulegalvalue(OFFSET)
*menulineend()
*endrepeat()
*menuattributecreate($DGLOBAL_LOADCOL,1)
*menuoption(DGLOBAL_IO,$DGLOBAL_LOADCOL)
*menucase(0)
*menucase(1)
*menulineend()
*menustring("DGLOBAL ")
*menufield(ID,integer,[$DGLOBAL_ID],8)
*menuoptionend()
*menulineend()
*endmenu()
*format()
*if([$COMMENT_OPTION == 1])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 2])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 3])
*endif()

*string("DGLOBAL ")
*field(integer,$DGLOBAL_ID,8)
*if([$DGLOBAL_NGROUP == 0])
*field(string,$DGLOBAL_NGROUP_STR,8)
*endif()
*if([$DGLOBAL_NGROUP == 1])
*field(integer,$DGLOBAL_NGROUP_INT,8)
*endif()   
*if([$DGLOBAL_NPOINT == 0])
*field(string,$DGLOBAL_NPOINT_STR,8)
*endif()
*if([$DGLOBAL_NPOINT == 1])
*field(integer,$DGLOBAL_NPOINT_INT,8)
*endif() 
*field(string,$DGLOBAL_SPMETH,8)
*if([$DGLOBAL_NOUTDES == 0])
*field(string,$DGLOBAL_NOUTDES_STR,8)
*endif()
*if([$DGLOBAL_NOUTDES == 1])
*field(integer,$DGLOBAL_NOUTDES_INT,8)
*endif()   
*if([@defaultstatus($DGLOBAL_DESTOL)])
*string("        ")
*else()     
*field(real,$DGLOBAL_DESTOL,8)
*endif()

*end()
*string("+       ")
*string("        ")

*if([@defaultstatus($DGLOBAL_MAXSP)])
*string("        ")
*else()     
*field(integer,$DGLOBAL_MAXSP,8)
*endif()
*if([@defaultstatus($DGLOBAL_MAXSUCC)])
*string("        ")
*else()     
*field(integer,$DGLOBAL_MAXSUCC,8)
*endif()
*if([@defaultstatus($DGLOBAL_MAXWALL)])
*string("        ")
*else()     
*field(real,$DGLOBAL_MAXWALL,8)
*endif()
*if([@defaultstatus($DGLOBAL_MAXCPU)])
*string("        ")
*else()     
*field(real,$DGLOBAL_MAXCPU,8)
*endif()    

*counterset(counter2,1)

*loopif([counter2 <= $DGLOBAL_NUM_GROUP])  
*end()
*string("+       ")
*string("GROUP   ")
*field(integer,[@attributearrayvalue($DGLOBAL_SID,counter2)],8)
*if([@stringinstring(@attributearrayvalue($DGLOBAL_NPOINT_GROUP_AUTO,counter2),"INT",1) == 0])
*field(string,[@attributearrayvalue($DGLOBAL_NPOINT_GROUP_AUTO,counter2)],8)
*else()
*field(integer,[@attributearrayvalue($DGLOBAL_NPOINT_GROUP,counter2)],8)
*endif()
*field(string,[@attributearrayvalue($DGLOBAL_SPMETH_GROUP,counter2)],8)
*counterinc(counter2)
*endloop() 
*end()
*output()

*cards("DMIGMOD")
*beginmenu()
*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()

*beginrepeat($NUM_DMIGMOD)
*repeatcounter(2)
*menuif([counter2 == 100000])
*menulineend()
*menuendif()    
*menustring("DMIGMOD ")
*menufield(MTXNAME,string,$DMIGMOD_MTXNAME,8)  
*menufield(SHFGID,integer,$DMIGMOD_SHFGID,8)  
*menudefaultvalue("        ")
*menufield(SHFSPID,integer,$DMIGMOD_SHFSPID,8)  
*menudefaultvalue("        ")
*menufield(SHFSPID_F,integer,$DMIGMOD_SHFSPID_F,8)  
*menudefaultvalue("        ")
*menustring("  ")
*menufield(SHFCID,integer,$DMIGMOD_SHFCID,8)  
*menudefaultvalue("        ")
*menufield(SHFEID,integer,$DMIGMOD_SHFEID,8)  
*menudefaultvalue("        ")
*menufield(SHFRID,integer,$DMIGMOD_SHFRID,8)  
*menudefaultvalue("        ")
*menulineend()
	
	// HYBDAMP
	*menustring("        ")
*menufield(HYBDAMP,string,$DMIGMOD_HYBDAMP,8)  
*menulegalvalue("        ")
*menulegalvalue("HYBDAMP")
*menuif([@stringequal(@attributearrayvalue($DMIGMOD_HYBDAMP,counter2),"HYBDAMP")])
*menufield(METHOD,entity,$DMIGMOD_METHOD,8)  
*menudefaultvalue("        ")
*menuentitytype(LOADCOLS)  
*menufield(SDAMP,entity,$DMIGMOD_SDAMP,8) 
*menudefaultvalue("        ")			
*menuentitytype(LOADCOLS)  
*menufield(KDAMP,integer,$DMIGMOD_KDAMP,8)  
*menudefaultvalue("        ")
*menuinitialarrayvalue(1)
*menufield(METHOD_F,entity,$DMIGMOD_METHOD_F,8)  
*menudefaultvalue("        ")
			*menuentitytype(LOADCOLS)
*menufield(SDAMP_F,entity,$DMIGMOD_SDAMP_F,8)  
*menudefaultvalue("        ")
			*menuentitytype(LOADCOLS)
*menufield(KDAMP_F,integer,$DMIGMOD_KDAMP_F,8) 
*menudefaultvalue("        ")            
*menuinitialarrayvalue(1)
*menuendif()
*menulineend()

	// ORIGIN
*menustring("        ")
*menufield(ORIGIN,string,$DMIGMOD_ORIGIN,8)  
*menulegalvalue("        ")
*menulegalvalue("ORIGIN")
*menuif([@stringequal(@attributearrayvalue($DMIGMOD_ORIGIN,counter2),"ORIGIN")])
*menufield(A1,real,$DMIGMOD_A1,8)  
*menufield(A2,real,$DMIGMOD_A2,8)  
*menufield(A3,real,$DMIGMOD_A3,8)  
*menuendif()
*menulineend()

// GIDMAP
*menustring("        ")
*menufield(GIDMAP,string,$DMIGMOD_GIDMAP,8)  
*menulegalvalue("        ")
*menulegalvalue("GIDMAP")
*menuif([@stringequal(@attributearrayvalue($DMIGMOD_GIDMAP,counter2),"GIDMAP")])
*menufield(GID1,entity,$DMIGMOD_GID1,8)  
*menuentitytype(nodes)
*menufield(GID1A,entity,$DMIGMOD_GID1A,8)  
*menuentitytype(nodes)
*menufield(GID2,entity,$DMIGMOD_GID2,8)  
*menuentitytype(nodes)
*menufield(GID2A,entity,$DMIGMOD_GID2A,8)  
*menuentitytype(nodes)
*menufield(GID3,entity,$DMIGMOD_GID3,8)  
*menuentitytype(nodes)
*menufield(GID3A,entity,$DMIGMOD_GID3A,8)  
*menuentitytype(nodes)
*menuendif()
*menulineend()

// CIDMAP
*menustring("        ")
*menufield(CIDMAP,string,$DMIGMOD_CIDMAP,8)  
*menulegalvalue("        ")
*menulegalvalue("CIDMAP")
*menuif([@stringequal(@attributearrayvalue($DMIGMOD_CIDMAP,counter2),"CIDMAP")])
*menufield(CID1,entity,$DMIGMOD_CID1,8)  
*menuentitytype(systems)
*menufield(CID1A,entity,$DMIGMOD_CID1A,8)  
*menuentitytype(systems)
*menufield(CID2,entity,$DMIGMOD_CID2,8)  
*menuentitytype(systems)
*menufield(CID2A,entity,$DMIGMOD_CID2A,8)  
*menuentitytype(systems)
*menufield(CID3,entity,$DMIGMOD_CID3,8)  
*menuentitytype(systems)
*menufield(CID3A,entity,$DMIGMOD_CID3A,8)  
*menuentitytype(systems)
*menuendif()
*menulineend()

*endrepeat()
*endmenu()
*format()
*if([$COMMENT_OPTION == 1])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 2])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 3])
*endif()

*counterset(counter2,1)
*loopif([counter2 <= $NUM_DMIGMOD])  
*string("DMIGMOD ")
*field(string,[@attributearrayvalue($DMIGMOD_MTXNAME,counter2)],8)
*if([@defaultstatus($DMIGMOD_SHFGID)])
*string("        ")
*else()
*field(integer,[@attributearrayvalue($DMIGMOD_SHFGID,counter2)],8)
*endif()
*if([@defaultstatus($DMIGMOD_SHFSPID)])
*string("        ")
*else()  
*field(integer,[@attributearrayvalue($DMIGMOD_SHFSPID,counter2)],8)
*endif()
*if([@defaultstatus($DMIGMOD_SHFSPID_F)])
*string("        ")
*else()  
*field(integer,[@attributearrayvalue($DMIGMOD_SHFSPID_F,counter2)],8)
*endif()
*if([@defaultstatus($DMIGMOD_SHFCID)])
*string("        ")
*else()  
*field(integer,[@attributearrayvalue($DMIGMOD_SHFCID,counter2)],8)  
*endif()
*if([@defaultstatus($DMIGMOD_SHFEID)])
*string("        ")
*else()  
*field(integer,[@attributearrayvalue($DMIGMOD_SHFEID,counter2)],8)
*endif()
*if([@defaultstatus($DMIGMOD_SHFRID)])
*string("        ")
*else()  
*field(integer,[@attributearrayvalue($DMIGMOD_SHFRID,counter2)],8)
*endif()
*end()
	
	 ##START of HYBDAMP
*if([@stringequal(@attributearrayvalue($DMIGMOD_HYBDAMP,counter2),"HYBDAMP")])
*string("+       ")
*string("HYBDAMP ")
*if([@defaultstatus($DMIGMOD_METHOD)])
*string("        ")
*else()  
*if([@attributearrayvalue($DMIGMOD_METHOD,counter2) > 0])
*field(integer,[@attributearrayvalue($DMIGMOD_METHOD,counter2)],8)
*else()
*string("        ")
*endif()        
*endif()
*if([@defaultstatus($DMIGMOD_SDAMP)])
*string("        ")
*else()  
*if([@attributearrayvalue($DMIGMOD_SDAMP,counter2) > 0])
*field(integer,[@attributearrayvalue($DMIGMOD_SDAMP,counter2)],8)
*else()
*string("        ")
*endif()        
*endif()
*if([@defaultstatus($DMIGMOD_KDAMP)])
*string("        ")
*else()  
*if([@attributearrayvalue($DMIGMOD_KDAMP,counter2) > 0])
*field(integer,[@attributearrayvalue($DMIGMOD_KDAMP,counter2)],8)
*else()
*string("        ")
*endif()        
*endif()
*if([@defaultstatus($DMIGMOD_METHOD_F)])
*string("        ")
*else()  
*if([@attributearrayvalue($DMIGMOD_METHOD_F,counter2) > 0])
*field(integer,[@attributearrayvalue($DMIGMOD_METHOD_F,counter2)],8)
*else()
*string("        ")
*endif()        
*endif() 
*if([@defaultstatus($DMIGMOD_METHOD_F)])
*string("        ")
*else()        
*if([@attributearrayvalue($DMIGMOD_SDAMP_F,counter2) > 0])
*field(integer,[@attributearrayvalue($DMIGMOD_SDAMP_F,counter2)],8)
*else()
*string("        ")
*endif()  
*endif()          
*if([@defaultstatus($DMIGMOD_KDAMP_F)])
*string("        ")
*else()  
*if([@attributearrayvalue($DMIGMOD_KDAMP_F,counter2) > 0])
*field(integer,[@attributearrayvalue($DMIGMOD_KDAMP_F,counter2)],8)
*else()
*string("        ")
*endif()        
*endif()           

*end()
*endif()
##END of HYBDAMP

##START of ORIGIN
*if([@stringequal(@attributearrayvalue($DMIGMOD_ORIGIN,counter2),"ORIGIN")])
*string("+       ")
*string("ORIGIN  ")
*if([@defaultstatus($DMIGMOD_A1)])
*string("        ")
*else()  
*if([@attributearrayvalue($DMIGMOD_A1,counter2) > 0])
*field(real,[@attributearrayvalue($DMIGMOD_A1,counter2)],8)
*else()
*string("        ")
*endif()        
*endif()
*if([@defaultstatus($DMIGMOD_A2)])
*string("        ")
*else()  
*if([@attributearrayvalue($DMIGMOD_A2,counter2) > 0])
*field(real,[@attributearrayvalue($DMIGMOD_A2,counter2)],8)
*else()
*string("        ")
*endif()        
*endif()
*if([@defaultstatus($DMIGMOD_A3)])
*string("        ")
*else()  
*if([@attributearrayvalue($DMIGMOD_A3,counter2) > 0])
*field(real,[@attributearrayvalue($DMIGMOD_A3,counter2)],8)
*else()
*string("        ")
*endif()        
*endif()

*end()
*endif()
##END of ORIGIN

##START of GIDMAP
*if([@stringequal(@attributearrayvalue($DMIGMOD_GIDMAP,counter2),"GIDMAP")])
*string("+       ")
*string("GIDMAP  ")
*field(integer,[@attributearrayvalue($DMIGMOD_GID1,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_GID1A,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_GID2,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_GID2A,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_GID3,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_GID3A,counter2)],8)
*end()
*endif()
##END OF GIDMAP

##START OF CIDMAP
*if([@stringequal(@attributearrayvalue($DMIGMOD_CIDMAP,counter2),"CIDMAP")])
*string("+       ")
*string("CIDMAP  ")
*field(integer,[@attributearrayvalue($DMIGMOD_CID1,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_CID1A,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_CID2,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_CID2A,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_CID3,counter2)],8)
*field(integer,[@attributearrayvalue($DMIGMOD_CID3A,counter2)],8)      
*end()
*endif()
##END OF CIDMAP
	 
*counterinc(counter2)
*endloop()    
*output()

*plies("PLY")
*beginmenu()
*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()
*menuif([type != 4])
*menustring("PLY     ")
*menufield(ID,integer,id,8)
*menufield(MID,integer,materialid,8)
*menufield(T,real,thickness1,8)
*menufield(THETA,real,orientangle,8)
*menuif([resultrequest == 1])
*menuattributeset($blank,"YES")
*menuelse()
*menuattributeset($blank,"NO")
*menuendif()
*menufield(SOUT,string,[$blank],8)
*menufield(TMANUF,real,$PLY_TMANUF,8)
*menudefaultvalue("        ")
*menufield(DRAPE_ID,integer,tableid,8)

*menulineend()

*beginrepeat(entitylistmax)
*repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,entitylist,[counter1-1])
*menuif([((counter1-1) % 8) == 0])
*menustring("        ")
*menuendif()
*menufield(ESID,integer,pointer1.pointervalue,8)
*endrepeat()
*menuelse()
*menustring("dummy ply")
*menuendif()

*menulineend()
*endmenu()
*format()
*if([type != 4])
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME PLYS            ")
*field(integer,id,8)
*quote()
*fieldleft(string,name,0)
*quote()
*end()
*string("$HWCOLOR PLYS           ")
*field(integer,id,8)
*field(integer,color,8)
*end()    
*endif()    

*string("PLY     ")
*fieldleft(integer,id,8)
*fieldleft(integer,materialid,8)
*fieldleft(real,thickness1,8)
*fieldleft(real,orientangle,8)
*if([resultrequest == 1])
*string("YES     ")
*else()
*string("NO      ")
*endif()
*if([@defaultstatus($PLY_TMANUF)])
*string("        ")
*else()
*fieldleft(real,$PLY_TMANUF,8)
*endif()
*if([tableid == 0])
*string("        ")
*else()
*fieldleft(integer,tableid,8)
*endif()
*counterset(counter1,0)
*loopif([counter1 < entitylistmax])
*if([(counter1 % 8) == 0])
*end()
*string("+       ")
*endif()
*pointerset(pointer1,entitylist,counter1)
*fieldleft(integer,pointer1.pointervalue,8)
*counterinc(counter1)
*endloop()
*end()
*endif()
*output()

*laminates("STACK")
*beginmenu()
*menustring("STACK   ")
*menufield(ID,integer,id,8)

*menuattributeset($blank,"        ")

*menuif([laminateconvention == 0])
*menuattributeset($blank,"        ")
*menuendif()
*menuif([laminateconvention == 1])
*menuattributeset($blank,"MEM")
*menuendif()
*menuif([laminateconvention == 2])
*menuattributeset($blank,"BEND")
*menuendif()
*menuif([laminateconvention == 3])
*menuattributeset($blank,"SMEAR")
*menuendif()
*menuif([laminateconvention == 4])
*menuattributeset($blank,"SMCORE")
*menuendif()
*menuif([laminateconvention == 5])
*menuattributeset($blank,"SYM")
*menuendif()
*menuif([laminateconvention == 6])
*menuattributeset($blank,"SYMEM")
*menuendif()
*menuif([laminateconvention == 7])
*menuattributeset($blank,"SYBEND")
*menuendif()
*menuif([laminateconvention == 8])
*menuattributeset($blank,"SYSMEAR")
*menuendif()
*menuif([laminateconvention == 9])
*menuattributeset($blank,"SMEARZ0")
*menuendif()

*menufield(LAM,string,[$blank],8)

*menuvariableset(variable6,0)
*menuvariableset(variable6,id)

*menuif([laminateconfig == 0 || laminateconfig == 2])
*menucounterset(counter3,0)
*menucounterset(counter2,1)

*beginrepeat(plyidlistmax)
*repeatcounter(2)
*menuif([counter2 ==1000000000])
*menulineend()
*menuendif() 
*menupointerset(pointer1,plyidlist,[counter2-1])
	  *menuif([@getentityvalue(plies,pointer1.pointervalue,type) != 4])

*menufield(PLYID,integer,pointer1.pointervalue,8)
*menucounterset(counter3,[counter3+1])
*menuif([counter3 == 6])
*menuif([counter2 != plyidlistmax])
*menulineend()
*menustring("        ")
*menucounterset(counter3,-2)
*menuendif()
*menuendif()
*menuendif()
*endrepeat()
*menuendif()

*menuif([laminateconfig == 1])
*menuvariableset(variable2,0)
*menulineend()
*beginrepeat(sublaminateidlistmax)
*repeatcounter(4)
*menustring("        ")
*menustring("SUB     ")
menupointerset(pointer2,sublaminateidlist,[counter4 - 1])
*menuentitypointerset(laminates,id,pointer2,sublaminateidlist,[counter4 - 1])
*menufield(SUB_ID,integer,pointer2.pointervalue,8)
*menufield(SUB_NAME,string,[@getentityvalue(laminates,pointer2.pointervalue,name)],8)
*menuvariableset(variable3,0)
menuvariableset(variable3,[@getentityvalue(laminates,pointer2.pointervalue,plyidlistmax)])
*menuvariableset(variable3,pointer2.laminate.plyidlistmax)
*menuif([variable3 > 0])
*menucounterset(counter2,1)
*menucounterset(counter5,0)
*menuvariableset(variable4,pointer2.pointervalue)
*beginrepeat2d(variable3)
*repeatcounter(2)
*menuif([counter2 == 1000000000])
*menulineend()
*menuendif()            
menuentitypointerset(laminates,pointer2.pointervalue,pointer3,plyidlist,[counter2-1])
*menuentitypointerset(laminates,variable4,pointer3,plyidlist,[counter2-1])
*menuif([@getentityvalue(plies,pointer3.pointervalue,type) != 4])
*menufield(SUBPLYID,integer,pointer3.pointervalue,8)
*menucounterset(counter5,[counter5+1])
			*menuendif()
*menuif([counter5 == 5])
*menuif([counter2 != variable3])
*menulineend()
*menustring("        ")
*menustring("        ")
*menucounterset(counter5,-2)
*menuendif()
*menuendif()
*endrepeat2d()
*menulineend()
*menuendif()
*endrepeat()

*menucounterset(counter4,1)   

###Since we are not able to query the id of master laminate, I am not able to set the pointer to interface pair
menuvariableset(variable3,[@getentityvalue(laminates,variable6,interfacepair)])
menuvariableset(variable4,interfacepair)
*menuif([interfacepair > 0])
*menucounterset(counter5,interfacepair)
*beginrepeat(counter5)
*menustring("        ")
*menustring("INT     ")
menucounterset(counter2,1)
menuvariableset(variable4,2)
beginrepeat2d(variable4)
repeatcounter(2)
*menupointerset(pointer4,interfacepairplyids,[counter4-1])
*menufield(INTPLYID1,integer,pointer4.pointervalue,8)
*menupointerset(pointer4,interfacepairplyids,counter4)
*menufield(INTPLYID2,integer,pointer4.pointervalue,8)
*menucounterset(counter4,[counter4+2])
endrepeat2d()
*menulineend()
*endrepeat()
*menuendif()
##End interface plys code
*menuendif()
*menulineend()
*endmenu()
*before()
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  Stacking Information for Ply-Based Composite Definition")
*end()
*string("$$")
*end()
*endif()    
*format()
*if([laminateconfig == 0 || laminateconfig == 1])
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME LAMINATES       ")
*field(integer,id,8)
*quote()
*fieldleft(string,name,0)
*quote()
*end()
*string("$HWCOLOR LAMINATES      ")
*field(integer,id,8)
*field(integer,color,8)
*end()    
*endif()    

*string("STACK   ")
*fieldleft(integer,id,8)

*if([laminateconvention == 0])
*string("        ")
*endif()
*if([laminateconvention == 1])
*string("MEM     ")
*endif()
*if([laminateconvention == 2])
*string("BEND    ")
*endif()
*if([laminateconvention == 3])
*string("SMEAR   ")
*endif()
*if([laminateconvention == 4])
*string("SMCORE  ")
*endif()
*if([laminateconvention == 5])
*string("SYM     ")
*endif()
*if([laminateconvention == 6])
*string("SYMEM   ")
*endif()
*if([laminateconvention == 7])
*string("SYBEND  ")
*endif()
*if([laminateconvention == 8])
*string("SYSMEAR ")
*endif()
*if([laminateconvention == 9])
*string("SMEARZ0 ")
*endif()

*if([laminateconfig == 0])
*counterset(counter1,1)
*counterset(counter2,1)

*loopif([counter1 <= plyidlistmax])
*pointerset(pointer1,plyidlist,[counter1-1])
*if([@getentityvalue(plies,pointer1.pointervalue,type) != 4])
*fieldleft(integer,pointer1.pointervalue,8)
*if([counter2 == 6])
*if([counter1 != plyidlistmax])
*end()
*string("+       ")
*counterset(counter2,-2)
*endif()
*endif()
		*counterinc(counter2)
*endif()
*counterinc(counter1)
*endloop()
*endif()

*if([laminateconfig == 1])
*end()
*counterset(counter1,1)
*loopif([counter1 <= sublaminateidlistmax])
*string("+       ")
*string("SUB     ")
*pointerset(pointer2,sublaminateidlist,[counter1 - 1])
*fieldleft(integer,pointer2.pointervalue,8)
*fieldleft(string,[@getentityvalue(laminates,pointer2.pointervalue,name)],8)
*variableset(variable3,0)
*variableset(variable3,[@getentityvalue(laminates,pointer2.pointervalue,plyidlistmax)])
*counterset(counter2,1)
*counterset(counter3,0)
*if([variable3 > 0])
*loopif([counter2 <= variable3])
*entitypointerset(laminates,pointer2.pointervalue,pointer3,plyidlist,[counter2-1])
*if([pointer3.pointervalue > 0 && @getentityvalue(plies,pointer3.pointervalue,type) != 4])	
*fieldleft(integer,pointer3.pointervalue,8)
*counterinc(counter3)
*endif()
*if([counter3 == 5])
*if([counter2 != variable3])
*end()
*string("+       ")
*string("        ")
*counterset(counter3,-2)
*endif()
*endif()
*counterinc(counter2)
*endloop()
*counterinc(counter1)
*end()
*endif()
*endloop()

*if([interfacepair > 0])
*counterset(counter1,1)
*counterset(counter2,[interfacepair*2])
*loopif([counter1 <= counter2])
*string("+       ")
*string("INT     ")

*pointerset(pointer4,interfacepairplyids,[counter1-1])
*fieldleft(integer,pointer4.pointervalue,8)
*counterinc(counter1)

*pointerset(pointer4,interfacepairplyids,[counter1-1])
*fieldleft(integer,pointer4.pointervalue,8)

*counterinc(counter1)
*if([counter1 <= counter2])
*end()
*endif()
*endloop()
*endif()
*endif()
*if([@writehmcomments()])
*end()
*string("$$")
*endif()
*end()
*endif()
*output()

*include(../../optistruct/include/sets1.tpl)

*cards("DTI_UNITS")
*beginmenu()
*menustring("  DTI   ")
*menustring(" UNITS  ")
*menustring("   1    ")
*menufield(MASS,string,$DTI_UNITS_MASS,8)
*menulegalvalue(KG)
*menulegalvalue(LBM)
*menulegalvalue(SLUG)
*menulegalvalue(GRAM)
*menulegalvalue(OZM)
*menulegalvalue(KLBM)
*menulegalvalue(MGG)
*menufield(FORCE,string,$DTI_UNITS_FORCE,8)
*menulegalvalue(N)
*menulegalvalue(LBF)
*menulegalvalue(KGF)
*menulegalvalue(OZF)
*menulegalvalue(DYNE)
*menulegalvalue(KN)
*menulegalvalue(KLBF)
*menufield(LENGTH,string,$DTI_UNITS_LENGTH,8)
*menulegalvalue(MM)
*menulegalvalue(KM)
*menulegalvalue(M)
*menulegalvalue(CM)
*menulegalvalue(MI)
*menulegalvalue(FT)
*menulegalvalue(IN)
*menufield(TIME,string,$DTI_UNITS_TIME,8)
*menulegalvalue(S)
*menulegalvalue(H)
*menulegalvalue(MIN)
*menulegalvalue(MS)
*menulineend()
*endmenu()
*format()
*string("DTI     ")
*string("UNITS   ")
*string("1       ")
*fieldleft(string,$DTI_UNITS_MASS,8)
*fieldleft(string,$DTI_UNITS_FORCE,8)
*fieldleft(string,$DTI_UNITS_LENGTH,8)
*fieldleft(string,$DTI_UNITS_TIME,8)
*end()
*output()

*cards("ELEMQUAL")
*beginmenu()
*beginrepeat($number_of_elemquals)
*repeatcounter(1)
*menustring("ELEMQUAL")
*menuattributecreate($blank,0)  // to get rid of TCL window
*menufield(ETYPE,string,$ELEMQUAL_ETYPE,8)
*menulegalvalue(TRIA3)
*menulegalvalue(QUAD4)
*menulegalvalue(TETRA)
*menulegalvalue(TET10)
*menulegalvalue(PENTA)
*menulegalvalue(PENT15)
*menulegalvalue(HEXA)
*menulegalvalue(HEX20)
*menulegalvalue(PYRA)
*menulegalvalue(PYRA13)
*menufield(PTYPE,string,$ELEMQUAL_PTYPE,8)
*menulegalvalue(ARATIO)
*menulegalvalue(SKEW)
*menulegalvalue(TAPER)
*menulegalvalue(WARP)
*menulegalvalue(TWIST)
*menulegalvalue(EDGE)
*menulegalvalue(COLLAPSE)
*menulegalvalue(ANGLE)
*menulegalvalue(HOENOR)
*menulegalvalue(HOETAN)
*menufield(LTYPE,string,$ELEMQUAL_LTYPE,8)
*menulegalvalue(WARNING)
*menulegalvalue(ERROR)
*menufield(V1,string,$ELEMQUAL_V1,8)
*menufield(V2,string,$ELEMQUAL_V2,8)
*menulineend()
*endrepeat()
*menulineend()
*endmenu()
*format()
*counterset(counter1,1)
*loopif([counter1 <= $number_of_elemquals])
*string("ELEMQUAL")
*fieldright(string,[@attributearrayvalue($ELEMQUAL_ETYPE,counter1)],8)
*fieldright(string,[@attributearrayvalue($ELEMQUAL_PTYPE,counter1)],8)
*fieldright(string,[@attributearrayvalue($ELEMQUAL_LTYPE,counter1)],8)
*fieldright(string,[@attributearrayvalue($ELEMQUAL_V1,counter1)],8)
*fieldright(string,[@attributearrayvalue($ELEMQUAL_V2,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*output()

*includefiles(0,0)
*before()
*uservariableset(#flagforinclfiles,0)
*format()
*if([flag1==0 || flag1==3])
*string("INCLUDE '")
*field(string,[@inclstrsplit(fullname,)],70)
*string("'")
field(string,fullname,0)
*end()
*uservariableset(#flagforinclfiles,1)
*endif()
*output()

*include(../../optistruct/include/sets2.tpl)

*enumeration(COMMENT1_OPTION,"Hide In Menu/Export","Show In Menu/Export","Do Not Export")
*curves()
*beginmenu()
*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Entity_Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend() 
*menustring("MBCRV   ")
*menufield(ID,integer,id,8)
*menufield(TYPE,string,$MBCRV_TYPE,8)
*menulegalvalue("        ")
*menulegalvalue(LINEAR)
*menulineend()
*menucounterset(counter1,0)
*menustring("        ")
*beginrepeat(numberofpoints)
*menupointerset(pointer1,points,counter1)
*menufield(X,real,pointer1.pointervalue,8)
*menucounterset(counter1,[counter1+1])
*menupointerset(pointer1,points,counter1)
*menufield(Y,real,pointer1.pointervalue,8)
*menucounterset(counter1,[counter1+1])
*menuif([(counter1 % 8 == 0) || (counter1 == 2*numberofpoints)])
*menulineend()
*menuif([(counter1 != 2*numberofpoints)])
*menustring("        ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*endmenu()
*before()
*treataslocal(counter19)
*counterset(counter19,0)
*if([@count(curves,0,0)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  Multi-Body Curve Data")
*end()
*string("$$")
*end()
*endif()    
*endif()
*format()
*if([counter19==0])
*counterset(counter19,1)    
*endif()
*if([($COMMENT_OPTION == 1) || ($COMMENT_OPTION == 2)])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],0)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([numberofpoints > 0])
*if([@writehmcomments()])
*string("$HMNAME CURVES")
*field(integer,id,8)
*quote()
*fieldleft(string,name,0)
*quote()
*end()
*string("$HWCOLOR CURVES")
*field(integer,id,8)
*field(integer,color,8)
*end()
*string("$HMCURVE ")
*fieldright(integer,linetype,8)
*fieldright(integer,markertype,8)
*string(" ")
*fieldleft(quotedstring,title,0)
*end()
*endif()
*string("MBCRV   ")
*fieldleft(integer,id,8)
*fieldleft(string,$MBCRV_TYPE,8)
*end()
*counterset(counter1,0)
*string("+       ")
*loopif([counter1 < 2*numberofpoints])
*pointerset(pointer1,points,counter1)
*fieldleft(real,pointer1.pointervalue,8)
*counterset(counter1,[counter1+1])
*pointerset(pointer1,points,counter1)
*fieldleft(real,pointer1.pointervalue,8)
*counterset(counter1,[counter1+1])
*if([(counter1 % 8 == 0) || (counter1 == 2*numberofpoints)])
*end()
*if([(counter1 != 2*numberofpoints)])
*string("+       ")
*endif()
*endif()
*endloop()
*endif()
*output()

*opticontrols()
*beginmenu()
*menuvariableset(variable2,[desmaxtoggle+mindimtoggle+matinittoggle+mindenstoggle+discretetoggle+checkertoggle+mmchecktoggle+objtoltoggle+delsiztoggle])
*menuvariableset(variable2,[variable2+delshptoggle+deltoptoggle+gbucktoggle+maxbucktoggle+$DOPTPRM_DISCRT1D_TOGGLE+$DOPTPRM_DDVOPT_TOGGLE+$DOPTPRM_TMINPLY_TOGGLE])
*menuvariableset(variable2,[variable2+$DOPTPRM_ESLMAX_TOGGLE+$DOPTPRM_ESLOPT_TOGGLE+$DOPTPRM_ESLSTOL_TOGGLE+$DOPTPRM_SHAPEOPT_TOGGLE+$DOPTPRM_OPTMETH_TOGGLE])
*menuvariableset(variable2,[variable2+$DOPTPRM_NESLEXPD_TOGGLE+$DOPTPRM_NESLIMPD_TOGGLE+$DOPTPRM_NESLNLGM_TOGGLE+$DOPTPRM_REMESH_TOGGLE+$DOPTPRM_APPROX_TOGGLE])
*menuif([variable2 > 0])
*menustring("DOPTPRM ")
*menuvariableset(variable1,0)
*menuif([desmaxtoggle == 1])
*menustring("DESMAX  ")
*menufield(VALUE,integer,desmax,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([mindimtoggle == 1])
*menustring("MINDIM  ")
*menufield(VALUE,real,mindim,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([matinittoggle == 1])
*menustring("MATINIT ")
*menufield(VALUE,real,matinit,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([mindenstoggle == 1])
*menustring("MINDENS ")
*menufield(VALUE,real,mindens,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([discretetoggle == 1])
*menustring("DISCRETE")
*menufield(VALUE,real,discrete,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([checkertoggle == 1])
*menustring("CHECKER ")
*menufield(VALUE,integer,checker,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([mmchecktoggle == 1])
*menustring("MMCHECK ")
*menufield(VALUE,integer,mmcheck,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([objtoltoggle == 1])
*menustring("OBJTOL  ")
*menufield(VALUE,real,objtol,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([delsiztoggle == 1])
*menustring("DELSIZ  ")
*menufield(VALUE,real,delsiz,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([delshptoggle == 1])
*menustring("DELSHP  ")
*menufield(VALUE,real,delshp,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([deltoptoggle == 1])
*menustring("DELTOP  ")
*menufield(VALUE,real,deltop,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([gbucktoggle == 1])
*menustring("GBUCK   ")
*menufield(VALUE,integer,gbuck,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([maxbucktoggle == 1])
*menustring("MAX_BUCK")
*menufield(VALUE,integer,maxbuck,8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([$DOPTPRM_DISCRT1D_TOGGLE == 1])
*menustring("DISCRT1D")
*menufield(VALUE,real,[$DOPTPRM_DISCRT1D_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([$DOPTPRM_DDVOPT_TOGGLE == 1])
*menustring("DDVOPT  ")
*menufield(VALUE,integer,[$DOPTPRM_DDVOPT_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([$DOPTPRM_TMINPLY_TOGGLE == 1])
*menustring("TMINPLY ")
*menufield(VALUE,real,[$DOPTPRM_TMINPLY_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([$DOPTPRM_ESLMAX_TOGGLE == 1])
*menustring("ESLMAX  ")
*menufield(VALUE,integer,[$DOPTPRM_ESLMAX_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([$DOPTPRM_ESLOPT_TOGGLE == 1])
*menustring("ESLSOPT ")
*menufield(VALUE,integer,[$DOPTPRM_ESLOPT_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([$DOPTPRM_ESLSTOL_TOGGLE == 1])
*menustring("ESLSTOL ")
*menufield(VALUE,real,[$DOPTPRM_ESLSTOL_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()      
*menuendif()
*menuif([$DOPTPRM_SHAPEOPT_TOGGLE == 1])
*menustring("SHAPEOPT")
*menufield(VALUE,integer,[$DOPTPRM_SHAPEOPT_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()   
*menuif([$DOPTPRM_OPTMETH_TOGGLE == 1])
*menustring("OPTMETH ")
*menufield(VALUE,string,[$DOPTPRM_OPTMETH_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif() 
*menuif([$DOPTPRM_NESLEXPD_TOGGLE == 1])
*menustring("NESLEXPD")
*menufield(VALUE,integer,[$DOPTPRM_NESLEXPD_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()  
*menuif([$DOPTPRM_NESLIMPD_TOGGLE == 1])
*menustring("NESLIMPD")
*menufield(VALUE,integer,[$DOPTPRM_NESLIMPD_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([$DOPTPRM_NESLNLGM_TOGGLE == 1])
*menustring("NESLNLGM")
*menufield(VALUE,integer,[$DOPTPRM_NESLNLGM_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menuif([$DOPTPRM_REMESH_TOGGLE == 1])
*menustring("REMESH  ")
*menufield(VALUE,integer,[$DOPTPRM_REMESH_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()    
*menuendif()
*menuif([$DOPTPRM_APPROX_TOGGLE == 1])
*menustring("APPROX  ")
*menufield(VALUE,string,[$DOPTPRM_APPROX_VALUE],8)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable3,[variable2-variable1])
*menuif([variable1 % 4 == 0])
*menuif([variable3 > 0])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuendif()
*menulineend()
*menuattributecreate($UNSUPPORTED_DOPTPRMS,0)
*beginrepeat($UNSUPPORTED_DOPTPRMS)
*repeatcounter(1)
*menustring("DOPTPRM ")
*menufield(PARAM,string,$UNSUPPORTED_DOPTPRM_PARAM,8)
*menufield(VALUE,string,$UNSUPPORTED_DOPTPRM_VALUE,8)
*menulineend()
*endrepeat()
*endmenu()
*format()
*uservariableset(#opticontroltoggles,[desmaxtoggle+mindimtoggle+matinittoggle+mindenstoggle+discretetoggle+checkertoggle+mmchecktoggle+objtoltoggle+delsiztoggle])
*uservariableset(#opticontroltoggles,[#opticontroltoggles+delshptoggle+deltoptoggle+gbucktoggle+maxbucktoggle])
*uservariableset(#opticontroltoggles,[#opticontroltoggles+$DOPTPRM_DISCRT1D_TOGGLE+$DOPTPRM_DDVOPT_TOGGLE+$DOPTPRM_TMINPLY_TOGGLE])
*uservariableset(#opticontroltoggles,[#opticontroltoggles+$DOPTPRM_ESLMAX_TOGGLE+$DOPTPRM_ESLOPT_TOGGLE+$DOPTPRM_ESLSTOL_TOGGLE])
*uservariableset(#opticontroltoggles,[#opticontroltoggles+$DOPTPRM_SHAPEOPT_TOGGLE+$DOPTPRM_OPTMETH_TOGGLE])
*uservariableset(#opticontroltoggles,[#opticontroltoggles+$DOPTPRM_NESLEXPD_TOGGLE+$DOPTPRM_NESLIMPD_TOGGLE+$DOPTPRM_NESLNLGM_TOGGLE])
*uservariableset(#opticontroltoggles,[#opticontroltoggles+$DOPTPRM_REMESH_TOGGLE+$DOPTPRM_APPROX_TOGGLE])
*if([#opticontroltoggles > 0])
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME OPTICONTROLS")
*field(integer,id,8)
*fieldleft(quotedstring,name,0)
*end()
*string("$")
*end()
*endif()
*string("DOPTPRM ")
*uservariableset(#opticontrolcounter,0)
*if([desmaxtoggle == 1])
*string("DESMAX  ")
*fieldleft(integer,desmax,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([mindimtoggle == 1])
*string("MINDIM  ")
*fieldleft(real,mindim,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([matinittoggle == 1])
*string("MATINIT ")
*fieldleft(real,matinit,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([mindenstoggle == 1])
*string("MINDENS ")
*fieldleft(real,mindens,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([discretetoggle == 1])
*string("DISCRETE")
*fieldleft(real,discrete,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([checkertoggle == 1])
*string("CHECKER ")
*fieldleft(integer,checker,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([mmchecktoggle == 1])
*string("MMCHECK ")
*fieldleft(integer,mmcheck,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([objtoltoggle == 1])
*string("OBJTOL  ")
*fieldleft(real,objtol,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([delsiztoggle == 1])
*string("DELSIZ  ")
*fieldleft(real,delsiz,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([delshptoggle == 1])
*string("DELSHP  ")
*fieldleft(real,delshp,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([deltoptoggle == 1])
*string("DELTOP  ")
*fieldleft(real,deltop,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([gbucktoggle == 1])
*string("GBUCK   ")
*fieldleft(integer,gbuck,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([maxbucktoggle == 1])
*string("MAX_BUCK")
*fieldleft(integer,maxbuck,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_DISCRT1D_TOGGLE == 1])
*string("DISCRT1D")
*fieldleft(real,$DOPTPRM_DISCRT1D_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_DDVOPT_TOGGLE == 1])
*string("DDVOPT  ")
*fieldleft(integer,$DOPTPRM_DDVOPT_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_TMINPLY_TOGGLE == 1])
*string("TMINPLY ")
*fieldleft(real,$DOPTPRM_TMINPLY_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_ESLMAX_TOGGLE == 1])
*string("ESLMAX  ")
*fieldleft(integer,$DOPTPRM_ESLMAX_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_ESLOPT_TOGGLE == 1])
*string("ESLSOPT ")
*fieldleft(integer,$DOPTPRM_ESLOPT_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_ESLSTOL_TOGGLE == 1])
*string("ESLSTOL ")
*fieldleft(real,$DOPTPRM_ESLSTOL_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_SHAPEOPT_TOGGLE == 1])
*string("SHAPEOPT")
*fieldleft(integer,$DOPTPRM_SHAPEOPT_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()   
*if([$DOPTPRM_OPTMETH_TOGGLE == 1])
*string("OPTMETH ")
*fieldleft(string,$DOPTPRM_OPTMETH_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_NESLEXPD_TOGGLE == 1])
*string("NESLEXPD")
*fieldleft(integer,$DOPTPRM_NESLEXPD_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_NESLIMPD_TOGGLE == 1])
*string("NESLIMPD")
*fieldleft(integer,$DOPTPRM_NESLIMPD_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_NESLNLGM_TOGGLE == 1])
*string("NESLNLGM")
*fieldleft(integer,$DOPTPRM_NESLNLGM_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()  
*if([$DOPTPRM_REMESH_TOGGLE == 1])
*string("REMESH  ")
*fieldleft(integer,$DOPTPRM_REMESH_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*if([$DOPTPRM_APPROX_TOGGLE == 1])
*string("APPROX  ")
*fieldleft(string,$DOPTPRM_APPROX_VALUE,8)
*uservariableset(#opticontrolcounter,[#opticontrolcounter+1])
*uservariableset(#opticontrolleft,[#opticontroltoggles - #opticontrolcounter])
*if([#opticontrolcounter % 4 == 0])
*if([#opticontrolleft > 0])
*end()
*string("+       ")
*endif()
*endif()
*endif()
*endif()
*end()
*counterset(counter2,1)
*loopif([counter2 <= $UNSUPPORTED_DOPTPRMS])
*string("DOPTPRM ")
*fieldleft(string,[@attributearrayvalue($UNSUPPORTED_DOPTPRM_PARAM,counter2)],8)
*fieldleft(string,[@attributearrayvalue($UNSUPPORTED_DOPTPRM_VALUE,counter2)],0)
*end()
*counterinc(counter2)
*endloop()
*output()


*optidscreens()
*beginmenu()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,1) > 0])
*menustring("DSCREEN ")
*menustring("MASS    ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,1)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,1)],8)
*menulineend()
*menuendif()     
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,2) > 0])
*menustring("DSCREEN ")
*menustring("MASSFRAC")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,2)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,2)],8)
*menulineend()
*menuendif()        
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,3) > 0])
*menustring("DSCREEN ")
*menustring("VOLUME  ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,3)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,3)],8)
*menulineend()
*menuendif()        
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,4) > 0])
*menustring("DSCREEN ")
*menustring("VOLFRAC ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,4)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,4)],8)
*menulineend()
*menuendif()        
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,5) > 0])
*menustring("DSCREEN ")
*menustring("COG     ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,5)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,5)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,6) > 0])
*menustring("DSCREEN ")
*menustring("INERTIA ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,6)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,6)],8)
*menulineend()
*menuendif()                
*menuif([CompToggle > 0])
*menustring("DSCREEN ")
*menustring("COMP    ")
*menufield(Threshold,real,CompThreshold,8)
*menufield(Maxc,int,CompMaxc,8)
*menulineend()
*menuendif()   
*menuif([DispToggle > 0])
*menustring("DSCREEN ")
*menustring("DISP    ")
*menufield(Threshold,real,DispThreshold,8)
*menufield(Maxc,int,DispMaxc,8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,9) > 0])
*menustring("DSCREEN ")
*menustring("FREQ    ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,9)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,9)],8)
*menulineend()
*menuendif()                   
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,10) > 0])
*menustring("DSCREEN ")
*menustring("LAMA    ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,10)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,10)],8)
*menulineend()
*menuendif()                   
*menuif([StressToggle > 0])
*menustring("DSCREEN ")
*menustring("STRESS  ")
*menufield(Threshold,real,StressThreshold,8)
*menufield(Maxc,int,StressMaxc,8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,12) > 0])
*menustring("DSCREEN ")
*menustring("STRAIN  ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,12)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,12)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,13) > 0])
*menustring("DSCREEN ")
*menustring("CSTRESS ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,13)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,13)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,14) > 0])
*menustring("DSCREEN ")
*menustring("CSTRAIN ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,14)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,14)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,15) > 0])
*menustring("DSCREEN ")
*menustring("CFAILURE")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,15)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,15)],8)
*menulineend()
*menuendif()                                                                           
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,16) > 0])
*menustring("DSCREEN ")
*menustring("FORCE   ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,16)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,16)],8)
*menulineend()
*menuendif()                   
*menuif([EquaToggle > 0])
*menustring("DSCREEN ")
*menustring("EQUA    ")
*menufield(Threshold,real,EquaThreshold,8)
*menufield(Maxc,int,EquaMaxc,8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,18) > 0])
*menustring("DSCREEN ")
*menustring("FRDISP  ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,18)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,18)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,19) > 0])
*menustring("DSCREEN ")
*menustring("FRVELO  ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,19)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,19)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,20) > 0])
*menustring("DSCREEN ")
*menustring("FRACCL  ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,20)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,20)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,21) > 0])
*menustring("DSCREEN ")
*menustring("FRSTRS  ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,21)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,21)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,22) > 0])
*menustring("DSCREEN ")
*menustring("FRSTRN  ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,22)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,22)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,23) > 0])
*menustring("DSCREEN ")
*menustring("FRERP   ")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,23)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,23)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,24) > 0])
*menustring("DSCREEN ")
*menustring("EXTERNAL")
*menufield(Threshold,real,[@attributearrayvalue($DSCREEN_THRESHOLD,24)],8)
*menufield(Maxc,int,[@attributearrayvalue($DSCREEN_MAXC,24)],8)
*menulineend()
*menuendif()
*menuif([@attributearrayvalue($DSCREEN_TOGGLE,25) > 0])
*menustring("DSCREEN ")
*menustring("  AUTO  ")
*menuif([@attributearrayvalue($DSCREEN_MAXC,25) > 0])
*menufield(LEVEL,int,[@attributearrayvalue($DSCREEN_MAXC,25)],8)
*menuelse()
*menustring("  OFF   ")
*menuendif()
*menulineend()
*menuendif()
*menuattributecreate($UNSUPPORTED_DSCREENS,0)
*beginrepeat($UNSUPPORTED_DSCREENS)
*repeatcounter(1)
*menustring("DSCREEN ")
*menufield(RTYPE,string,$UNSUPPORTED_DSCREEN_RTYPE,8)
*menufield(THOLD,real,$UNSUPPORTED_DSCREEN_THOLD,8)
*menufield(MAXC,integer,$UNSUPPORTED_DSCREEN_MAXC,8)
*menulineend()
*endrepeat()
*endmenu()
*format()
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME OPTIDSCREENS")
*field(integer,id,8)
*fieldleft(string,name,0)
*end()
*string("$")
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,1) > 0])
*string("DSCREEN ")
*string("MASS    ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,1)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,1)],8)
*end()
*endif()     
*if([@attributearrayvalue($DSCREEN_TOGGLE,2) > 0])
*string("DSCREEN ")
*string("MASSFRAC")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,2)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,2)],8)
*end()
*endif()        
*if([@attributearrayvalue($DSCREEN_TOGGLE,3) > 0])
*string("DSCREEN ")
*string("VOLUME  ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,3)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,3)],8)
*end()
*endif()        
*if([@attributearrayvalue($DSCREEN_TOGGLE,4) > 0])
*string("DSCREEN ")
*string("VOLFRAC ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,4)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,4)],8)
*end()
*endif()        
*if([@attributearrayvalue($DSCREEN_TOGGLE,5) > 0])
*string("DSCREEN ")
*string("COG     ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,5)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,5)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,6) > 0])
*string("DSCREEN ")
*string("INERTIA ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,6)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,6)],8)
*end()
*endif()       
*if([CompToggle == 1])
*string("DSCREEN ")
*string("COMP    ")
*fieldleft(real,CompThreshold,8)
*fieldleft(integer,CompMaxc,8)
*end()
*endif()  
*if([DispToggle == 1])
*string("DSCREEN ")
*string("DISP    ")
*fieldleft(real,DispThreshold,8)
*fieldleft(integer,DispMaxc,8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,9) > 0])
*string("DSCREEN ")
*string("FREQ    ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,9)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,9)],8)
*end()
*endif()                   
*if([@attributearrayvalue($DSCREEN_TOGGLE,10) > 0])
*string("DSCREEN ")
*string("LAMA    ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,10)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,10)],8)
*end()
*endif()  
*if([StressToggle == 1])
*string("DSCREEN ")
*string("STRESS  ")
*fieldleft(real,StressThreshold,8)
*fieldleft(integer,StressMaxc,8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,12) > 0])
*string("DSCREEN ")
*string("STRAIN  ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,12)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,12)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,13) > 0])
*string("DSCREEN ")
*string("CSTRESS ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,13)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,13)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,14) > 0])
*string("DSCREEN ")
*string("CSTRAIN ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,14)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,14)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,15) > 0])
*string("DSCREEN ")
*string("CFAILURE")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,15)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,15)],8)
*end()
*endif()                                                                           
*if([@attributearrayvalue($DSCREEN_TOGGLE,16) > 0])
*string("DSCREEN ")
*string("FORCE   ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,16)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,16)],8)
*end()
*endif()  
*if([EquaToggle == 1])
*string("DSCREEN ")
*string("EQUA    ")
*fieldleft(real,EquaThreshold,8)
*fieldleft(integer,EquaMaxc,8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,18) > 0])
*string("DSCREEN ")
*string("FRDISP  ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,18)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,18)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,19) > 0])
*string("DSCREEN ")
*string("FRVELO  ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,19)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,19)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,20) > 0])
*string("DSCREEN ")
*string("FRACCL  ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,20)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,20)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,21) > 0])
*string("DSCREEN ")
*string("FRSTRS  ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,21)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,21)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,22) > 0])
*string("DSCREEN ")
*string("FRSTRN  ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,22)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,22)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,23) > 0])
*string("DSCREEN ")
*string("FRERP   ")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,23)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,23)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,24) > 0])
*string("DSCREEN ")
*string("EXTERNAL")
*fieldleft(real,[@attributearrayvalue($DSCREEN_THRESHOLD,24)],8)
*fieldleft(int,[@attributearrayvalue($DSCREEN_MAXC,24)],8)
*end()
*endif()
*if([@attributearrayvalue($DSCREEN_TOGGLE,25) > 0])
*string("DSCREEN ")
*string("  AUTO  ")
*if([@attributearrayvalue($DSCREEN_MAXC,25) > 0])
*field(int,[@attributearrayvalue($DSCREEN_MAXC,25)],8)
*else()
*string("  OFF   ")
*endif()
*end()
*endif() 
*counterset(counter2,1)
*loopif([counter2 <= $UNSUPPORTED_DSCREENS])
*string("DSCREEN ")
*fieldleft(string,[@attributearrayvalue($UNSUPPORTED_DSCREEN_RTYPE,counter2)],8)
*if([@stringinstring(@attributearrayvalue($UNSUPPORTED_DSCREEN_RTYPE,counter2),"AUTO",0) == 0])
*fieldleft(real,[@attributearrayvalue($UNSUPPORTED_DSCREEN_THOLD,counter2)],8)
*fieldleft(integer,[@attributearrayvalue($UNSUPPORTED_DSCREEN_MAXC,counter2)],8)
*endif()
*end()
*counterinc(counter2)
*endloop()
*output()

*tables("DTABLE","DTABLE_IDPOOL")
*beginmenu()
*menustring("DTABLE  ")
*menufield(LABEL,string,name,8) 
menufield(VALUE,real,value,8) 
*menufield(VALUE,real,[@getcellvalue(0,0)],8)
*menulineend()
*endmenu()
*before()
*treataslocal(counter19)
*counterset(counter19,0)  
*format()
*if([counter19==0])
*uservariableset(#optitablecounter,0)
*uservariableset(#noptitablerecords,[@count(tables,0,0)])    
*counterset(counter19,1)    
*endif()  
*if([#noptitablerecords && #optitablecounter == 0])
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME OPTITABLEENTRS")
*field(integer,id,8)
*quote()
*string("optistruct_tableentries")
*quote()
*string(" 14")
*end()
*string("$")
*end()
*endif()
*string("DTABLE  ")  
*uservariableset(#optitablecounter,[#optitablecounter+1])
*endif()
*field(string,name,8)
fieldright(real,value,8)
*fieldright(real,[@getcellvalue(0,0)],8)
*if([#optitablecounter % 4 == 0 && #optitablecounter < #noptitablerecords])
*end()
*string("+       ") 
*endif()
*uservariableset(#optitablecounter,[#optitablecounter+1])
*after()
*end()
*output()

*tables("DRAPE","DRAPE_IDPOOL")
*beginmenu()

*menuvariableset(variable2,0)
*menuvariableset(variable3,[@getinternalid(15,id)])
*menuvariableset(variable2,[@gettablecolumnsize(variable3,0)])

*menuif([variable2 > 0])
*menustring("DRAPE   ")
*menufield(ID,integer,id,8) 
*menulineend()

*menuif([variable2 > 500])
*menustring("Note: The number of ids shown here is limited to 500. However all the")
*menulineend()
*menustring("       ids will be exported.")
*menulineend()
*menuvariableset(variable2,500)
*menuendif()

*beginrepeat(variable2)
*repeatcounter(1)

*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()      

*menuvariableset(variable4,0)
*menuvariableset(variable4,[counter1 - 1])

*menustring("        ")
*menufield(DTYPE,string,[@getcellvalue(variable4,0)],8)

*menuif([@getcellvalue(variable4,1) == 2147483647])
*menuattributecreate($blank,"        ")
*menufield(DID,string,[$blank],8)  
*menuelse()
*menufield(DID,integer,[@getcellvalue(variable4,1)],8)
*menuendif()

*menuif([@getcellvalue(variable4,2) == 1.7976931348623158e+308])
*menuattributecreate($blank,"        ")
*menufield(T,string,[$blank],8) 
*menuelse()
*menufield(T,real,[@getcellvalue(variable4,2)],8)
*menuendif()

*menuif([@getcellvalue(variable4,3) == 1.7976931348623158e+308])
*menuattributecreate($blank,"        ")
*menufield(THETA,string,[$blank],8) 
*menuelse()      
*menufield(THETA,real,[@getcellvalue(variable4,3)],8)
*menuendif()

*menulineend()
*endrepeat()
*menuelse()
*menulineend()
*menuendif()
*endmenu()
*before()
*treataslocal(counter19)
*counterset(counter19,0)  
*format()
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME OPTITABLEENTRS")
*field(integer,id,8)
*quote()
*field(string,name,0)
*quote()
*string(" 15")
*end()
*string("$")
*end()
*endif()

*variableset(variable2,0)
*variableset(variable3,[@getinternalid(15,id)])
*variableset(variable2,[@gettablecolumnsize(variable3,0)])
*counterset(counter1,0) 

*if([variable2 > 0])
*string("DRAPE   ")
*fieldright(integer,id,8)
*end()
*loopif([counter1 < variable2])

*string("+       ")
*fieldleft(string,[@getcellvalue(counter1,0)],8)

*if([@getcellvalue(counter1,1) == 2147483647])
*string("        ")
*else()
*fieldright(integer,[@getcellvalue(counter1,1)],8)
*endif()

*if([@getcellvalue(counter1,2) == 1.7976931348623158e+308])
*string("        ") 
*else()
*fieldright(real,[@getcellvalue(counter1,2)],8)
*endif()

*if([@getcellvalue(counter1,3) == 1.7976931348623158e+308])
*string("        ")
*else()      
*fieldright(real,[@getcellvalue(counter1,3)],8)
*endif()        
*end()
*counterinc(counter1)
*endloop()
*endif()
*after()
*end()
*output()

*enumeration(COMMENT1_OPTION,"Hide In Menu/Export","Show In Menu/Export","Do Not Export")
*ddvals()
*beginmenu()
*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Entity_Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend() 
*menustring("DDVAL   ")
*menufield(ID,integer,id,8)
*menucounterset(counter1,0)
*menuvariableset(variable1,16)
*beginrepeat(valuesmax)
*menuif([counter1 < valuesmax])
*menupointerset(pointer1,values,counter1)
*menuif([variable1 == 0])
*menustring("        ")
*menuvariableset(variable1,8)
*menuendif()
*menuif([@indexbelongstoddvalrange(id,counter1)])
*menuif([variable1 != 8 && counter1 != 0])
*menulineend()
*menustring("        ")
*menuendif()
*menufield(FROM_DVL,real,pointer1.pointervalue,8)
*menustring("  THRU  ")
*menucounterset(counter1,[counter1+1])
*menupointerset(pointer1,values,counter1)
*menufield(TO_DVAL,real,pointer1.pointervalue,8)
*menustring("   BY   ")
*menucounterset(counter1,[counter1+1])
*menupointerset(pointer1,values,counter1)
*menufield(INC,real,pointer1.pointervalue,8)
*menuvariableset(variable1,72)
*menuelse()
*menufield(DVAL,real,pointer1.pointervalue,8)
*menuvariableset(variable1,[variable1+8])
*menuif([counter1 == (valuesmax-1)])
*menuvariableset(variable1,72)
*menuendif()
*menuendif()
*menuif([variable1 == 72])
*menulineend()
*menuvariableset(variable1,0)
*menuendif()
*menucounterset(counter1,[counter1+1])
*menuendif()
*endrepeat()
*menulineend()
*endmenu()
*before()
*treataslocal(counter19)
*counterset(counter19,0)
*if([@count(ddvals,0,0)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  Discrete Design Variable Data")
*end()
*string("$$")
*end()
*endif()    
*endif()
*format()
*if([counter19==0])
*counterset(counter19,1)    
*endif()
*if([($COMMENT_OPTION == 1) || ($COMMENT_OPTION == 2)])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],0)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([(valuesmax > 0) || (rangeindexmax > 0)])
*if([@writehmcomments()])
*string("$HMNAME DDVAL           ")
*field(integer,id,8)
*quote()
*field(string,name,0)
*quote()
*end()
*endif()
*string("DDVAL   ")
*fieldleft(integer,id,8)
*counterset(counter1,0)
*variableset(variable1,16)
*loopif([counter1 < valuesmax])
*pointerset(pointer1,values,counter1)
*if([variable1 == 0])
*string("+       ")
*variableset(variable1,8)
*endif()
*if([@indexbelongstoddvalrange(id,counter1)])
*if([variable1 != 8 && counter1 != 0])
*end()
*string("+       ")
*endif()
*fieldleft(real,pointer1.pointervalue,8)
*string("THRU    ")
*counterset(counter1,[counter1+1])
*pointerset(pointer1,values,counter1)
*fieldleft(real,pointer1.pointervalue,8)
*string("BY      ")
*counterset(counter1,[counter1+1])
*pointerset(pointer1,values,counter1)
*fieldleft(real,pointer1.pointervalue,8)
*variableset(variable1,72)
*else()
*fieldleft(real,pointer1.pointervalue,8)
*variableset(variable1,[variable1+8])
*if([counter1 == (valuesmax-1)])
*variableset(variable1,72)
*endif()
*endif()
*if([variable1 == 72])
*end()
*variableset(variable1,0)
*endif()
*counterset(counter1,[counter1+1])
*endloop() 
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*endif()
*output()


*enumeration(DSIZE_PLYTHK_OPTIONS,"All","BYANG","BYSET","BYPLY")
*enumeration(DSIZE_PLYPCT_OPTIONS,"All","BYANG","BYSET","BYPLY")
*enumeration(DSIZE_PLYMAN_OPTIONS,"All","BYANG","BYSET","BYPLY")
*enumeration(DSIZE_BALANCE_OPTIONS,"BYANG","BYSET","BYPLY")
*enumeration(DSIZE_CONST_OPTIONS,"BYANG","BYSET","BYPLY")
*enumeration(DSIZE_PLYDRP_OPTIONS,"All","BYANG","BYSET","BYPLY")
*enumeration(DSHUFFLE_MAXSUCC_OPTIONS,"All","Specify Number")
*designvars()
*beginmenu()
*menuif([config == 103])
*menustring("DESVAR  ") 
*menufield(ID,integer,id,8)
*menuif([@stringstartswithnumericcharacter(name)])
*menustring("g")
*menufield(,string,name,7)
*menuelse()
*menufield(NAME,string,name,8)
*menuendif()
*menufield(INIT,real,initialvalue,8)
*menufield(LB,real,lowerbound,8)
*menufield(UB,real,upperbound,8)
*menuif([delxv == -1.0])
*menustring("        ")
*menuelse()
*menufield(DELXV,real,delxv,8)
*menuendif()
*menuif([type > 0])
*menufield(DDVAL,integer,type,8)
*menuendif()  
*menulineend()
*menuendif()
// topology vars
*menuif([config == 108])
*menustring("DTPL    ") 
*menufield(ID,integer,id,8)
*menuif([designable == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([designable == 2])
*menustring("PSOLID  ")
*menuendif()
*menuif([designable == 3])
*menustring("PCOMP   ")
*menuendif()
*menuif([designable == 4])
*menustring("PBAR    ")
*menuendif()
*menuif([designable == 5])
*menustring("PROD    ")
*menuendif()
*menuif([designable == 6])
*menustring("PWELD   ")
*menuendif()
*menuif([designable == 7])
*menustring("PBUSH   ")
*menuendif()
*menuif([designable == 8])
*menustring("PBARL   ")
*menuendif()  
*menuif([designable == 9])
*menustring("PBEAM   ")
*menuendif()
*menuif([designable == 10])
*menustring("PBEAML  ")
*menuendif()  
*menuif([componentlistmax > 0])
*menuvariableset(variable1,1)
*beginrepeat(componentlistmax)
*repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,componentlist,counter1-1)
*menufield(PID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==6])
menuif([variable1 <= componentlistmax])
menulineend()
*menuif([variable1 != componentlistmax])
*menustring("        ")
*menustring("        ")
*menuendif()
menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuendif()
*menuif([boundaryskip != 2])
*menuif([lowerbound > 0.0])
*menustring("        ")
*menustring("MEMBSIZ ")
*menufield(MINDIM,real,lowerbound,8)
*menuif([upperbound > 0.0])
*menufield(MAXDIM,real,upperbound,8)
*menuif([mingap > 0.0])
*menufield(MINGAP,real,mingap,8)
*menuelse()
*menustring("        ")
*menuendif()
*menuendif()  
*menulineend()
*menuendif()
*menuif([initialvalue > 0.0])
*menustring("        ")
*menustring("STRESS  ")
*menufield(UBOUND,real,initialvalue,8)
*menulineend()
*menuendif()
*menuif([ytype > 0])
*menustring("        ")
*menustring("MESHTYP ")
*menuif([ytype == 2])
*menustring("ALIGN   ")
*menuendif()
*menulineend()
*menuendif()    
*menuendif()
*menuif([minimumwidth == 1.0 || minimumwidth == 2.0])
*menustring("        ")
*menustring("FATIGUE ")
*menuif([minimumwidth == 1.0])
*menustring("DAMAGE  ")
*menuendif()
*menuif([minimumwidth == 2.0])
*menustring("LIFE    ")
*menuendif()
*menufield(FBOUND,real,drawangle,8)
*menulineend()
*menuendif()
*menuif([boundaryskip != 2])
*menuif([basethickness > 0.0])
*menustring("        ")
*menustring("TMIN    ")
*menufield(T0,real,basethickness,8)
*menulineend()
*menuendif()
*menuif([type > 0])
*menustring("        ")
*menustring("PATRN   ")
*menufield(TYP,integer,type,8)
*menuif([type != 9])
*menuif([anchorpointid != 0])
*menufield(AID,integer,anchorpointid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XA,real,[$TPL_SymmetryAnchorX],8)
*menufield(YA,real,[$TPL_SymmetryAnchorY],8)
*menufield(ZA,real,[$TPL_SymmetryAnchorZ],8)
*menuendif()
*menuif([firstgridid != 0])
*menufield(FID,integer,firstgridid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XF,real,[$TPL_SymmetryFirstGridX],8)
*menufield(YF,real,[$TPL_SymmetryFirstGridY],8)
*menufield(ZF,real,[$TPL_SymmetryFirstGridZ],8)
*menuendif()
*menulineend()
*menustring("        ")
*menuif([((type > 1) && (type != 10)) || ((type == 10) && (bufferzone > 0))])
*menuif([bufferzone > 0])
*menufield(UCYC,integer,bufferzone,8)
*menuelse()
*menustring("        ") 
*menuendif()  
*menuif([type != 10])
*menuif([secondgridid != 0])
*menufield(SID,integer,secondgridid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XS,real,[$TPL_SymmetrySecondGridX],8)
*menufield(YS,real,[$TPL_SymmetrySecondGridY],8)
*menufield(ZS,real,[$TPL_SymmetrySecondGridZ],8)
*menuendif()
*menuendif()
*menulineend()
*menuendif()
*menuendif()
*menuendif()
*menuif([xorder > 0])
*menustring("        ")
*menustring("DRAW    ")
*menuif([xorder == 1])
*menustring("SINGLE  ")
*menuelse()
*menustring("SPLIT   ")
*menuendif()                 
*menuif([$TPL_DrawAnchorNodeId != 0])
*menufield(DAID,integer,[$TPL_DrawAnchorNodeId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XDA,real,[$TPL_DrawAnchorX],8)
*menufield(YDA,real,[$TPL_DrawAnchorY],8)
*menufield(ZDA,real,[$TPL_DrawAnchorZ],8)
*menuendif()
*menuif([$TPL_DrawFirstGridId != 0])
*menufield(DFID,integer,[$TPL_DrawFirstGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XDF,real,[$TPL_DrawFirstGridX],8)
*menufield(YDF,real,[$TPL_DrawFirstGridY],8)
*menufield(ZDF,real,[$TPL_DrawFirstGridZ],8)
*menuendif()
*menulineend()
*menuif([drawheight > 0.0])
*menustring("        ")
*menustring("NOHOLE  ")
menufield(MinT,real,drawheight,8)
menustring("       1")
*menulineend()
*menuendif()
*menuif([(delxv > 0.0) && (xorder == 1)])      
*menustring("        ")
*menustring("STAMP   ")
*menufield(TSTAMP,real,delxv,8) 
*menulineend()   
*menuendif()
*menuendif()
*menuvariableset(variable2,[@attributearraylength($TPL_ObstComponentList)])
*menuif([variable2 > 0])
*menuvariableset(variable1,1)
*menuvariableset(variable4,0)
*beginrepeat(variable2)
repeatwrap(72)
*repeatcounter(1)
*menuvariableset(variable3,[@attributearrayvalue($TPL_ObstComponentList,counter1)])
*menuif([variable3 > 0])
*menuif([variable4 == 0])
*menustring("        ")
*menustring("OBST    ")
*menuendif()
*menufield(OPID,integer,[@attributearrayvalue($TPL_ObstComponentList,counter1)],8)
*menuvariableset(variable4,[variable4+1])
*menuendif()
*menuif([(variable4 % 7)==0])
*menuif([variable4 < variable2])
*menulineend()
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menuif([(variable4%7)!=0])
*menulineend()
*menuendif()
*menuendif()
*menuif([xtype > 0])
*menustring("        ")
*menustring("EXTR    ")
*menuif([xtype == 1])
*menustring("NOTWIST ")
*menuendif()
*menuif([xtype == 2])
*menustring("TWIST   ")
*menuendif()
*menuvariableset(variable2,[@attributearraylength($TPL_PrimaryNodeList)])
*menuif([variable2 > 0])
*menulineend()
*menustring("        ")
*menustring("EPATH1  ")
*menuvariableset(variable1,1)
*beginrepeat(variable2)
repeatwrap(72)
*repeatcounter(1)
*menufield(EP1_ID,integer,[@attributearrayvalue($TPL_PrimaryNodeList,counter1)],8)
*menuif([(variable1%7)==0])
*menuif([variable1 < variable2])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menuif([(variable1%7)!=0])
*menulineend()
*menuendif()
*menuendif()
*menuvariableset(variable2,[@attributearraylength($TPL_SecondaryNodeList)])
*menuif([variable2 > 0])
*menustring("        ")
*menustring("EPATH2  ")
*menuvariableset(variable1,1)
*beginrepeat(variable2)
repeatwrap(72)
*repeatcounter(1)
*menufield(EP2_ID,integer,[@attributearrayvalue($TPL_SecondaryNodeList,counter1)],8)
*menuif([(variable1%7)==0])
*menuif([variable1 < variable2])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menuif([(variable1%7)!=0])
*menulineend()
*menuendif()
*menuendif()
*menulineend()
*menuendif()
*menuendif()
*menuif([boundaryskip == 1])
*menustring("        ")
*menustring("MASTER  ")
*menulineend()
*menuendif()  
*menuif([boundaryskip == 2])
*menustring("        ")
*menustring("SLAVE   ")
*menufield(DTPL_ID,integer,shapedesignvariable,8)
*menufield(SX,real,[$TPL_RptnScaleX],8)
*menufield(SY,real,[$TPL_RptnScaleY],8)
*menufield(SZ,real,[$TPL_RptnScaleZ],8)
*menulineend()
*menuendif()
*menuif([boundaryskip > 0])
*menustring("        ")
*menustring("COORD   ")
*menuif([$TPL_RptnSysFlag == 0])  
*menufield(CID,integer,0,8)
*menuelse()
*menufield(CID,integer,[$TPL_RptnSysId],8)
*menuendif()  
*menuif([$TPL_RptnAnchorNodeId != 0])
*menufield(CAID,integer,[$TPL_RptnAnchorNodeId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCA,real,[$TPL_RptnAnchorX],8)
*menufield(YCA,real,[$TPL_RptnAnchorY],8)
*menufield(ZCA,real,[$TPL_RptnAnchorZ],8)
*menuendif()
*menuif([$TPL_RptnSysFlag != 0])
*menulineend()  
*menuendif()
*menuif([$TPL_RptnSysFlag == 0])
*menuif([$TPL_RptnFirstGridId != 0])
*menufield(CFID,integer,[$TPL_RptnFirstGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCF,real,[$TPL_RptnFirstGridX],8)
*menufield(YCF,real,[$TPL_RptnFirstGridY],8)
*menufield(ZCF,real,[$TPL_RptnFirstGridZ],8)
*menuendif()
*menulineend()    
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menuif([$TPL_RptnSecondGridId != 0])
*menufield(CFID,integer,[$TPL_RptnSecondGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCS,real,[$TPL_RptnSecondGridX],8)
*menufield(YCS,real,[$TPL_RptnSecondGridY],8)
*menufield(ZCS,real,[$TPL_RptnSecondGridZ],8)
*menuendif()
*menuif([$TPL_RptnThirdGridId != 0])
*menufield(CTID,integer,[$TPL_RptnThirdGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCT,real,[$TPL_RptnThirdGridX],8)
*menufield(YCT,real,[$TPL_RptnThirdGridY],8)
*menufield(ZCT,real,[$TPL_RptnThirdGridZ],8)
*menuendif()  
*menulineend()
*menuendif()
*menuendif()
*menulineend()
*menuendif()
// free shape vars
*menuif([config == 112])
*menustring("DSHAPE  ") 
*menufield(ID,integer,id,8)
*menulineend()
*menuif([(xtype > 0) && (xtype < 4)])
*menustring("        ")
*menustring("PERT    ")
*menuif([xtype == 1])
*menustring("BOTH    ")
*menuendif()
*menuif([xtype == 2])
*menustring("GROW    ")
*menuendif()
*menuif([xtype == 3])
*menustring("SHRINK  ")
*menuendif()
*menufield(MVFACTOR,real,initialvalue,8)
*menufield(NSMOOTH,integer,xorder,8)
*menuif([@defined($DSHP_MAXSHRINK)])
*menufield(MXSHRK,real,[$DSHP_MAXSHRINK],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([@defined($DSHP_MAXGROW)])
*menufield(MXGROW,real,[$DSHP_MAXGROW],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([(designable == 1) || (designable == 2)])
*menufield(SMETHOD,integer,designable,8)
*menuelse()
*menustring("        ")
*menuendif()
*menufield(NTRANS,integer,[$DSHP_NTRANS],8)
*menulineend()
*menuendif()
*menuvariableset(variable2,[@attributearraylength($DSHP_GRIDS)])
*menuif([variable2 > 0])
*menustring("        ")
*menustring("GRID    ")
*menustring("ID      ")
*menuvariableset(variable1,1)
*beginrepeat(variable2)
repeatwrap(72)
*repeatcounter(1)
*menufield(GID,integer,[@attributearrayvalue($DSHP_GRIDS,counter1)],8)
*menuif([((variable1+1)%7)==0])
*menuif([variable1 < variable2])
*menulineend()
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuelse()
*menuif([$DSHP_GSETID > 0])
*menustring("        ")
*menustring("GRID    ")
*menustring("SET    ")
*menufield(GSETID,integer,[$DSHP_GSETID],8)
*menulineend()
*menuendif()
*menuendif()
*menuif([type > 0])
*menustring("        ")
*menustring("PATRN   ")
*menufield(TYP,integer,type,8)
*menuif([type == 10])
*menuif([anchorpointid != 0])
*menufield(AID,integer,anchorpointid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XA,real,[$TPL_SymmetryAnchorX],8)
*menufield(YA,real,[$TPL_SymmetryAnchorY],8)
*menufield(ZA,real,[$TPL_SymmetryAnchorZ],8)
*menuendif()
*menuif([firstgridid != 0])
*menufield(FID,integer,firstgridid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XF,real,[$TPL_SymmetryFirstGridX],8)
*menufield(YF,real,[$TPL_SymmetryFirstGridY],8)
*menufield(ZF,real,[$TPL_SymmetryFirstGridZ],8)
*menuendif()
*menuendif()
*menulineend()
*menuendif()
*menuif([yorder > 0])
*menustring("        ")
*menustring("DRAW    ")
*menuif([yorder == 1])
*menustring("SINGLE  ")
*menuendif()                 
*menuif([$TPL_DrawAnchorNodeId != 0])
*menufield(DAID,integer,[$TPL_DrawAnchorNodeId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XDA,real,[$TPL_DrawAnchorX],8)
*menufield(YDA,real,[$TPL_DrawAnchorY],8)
*menufield(ZDA,real,[$TPL_DrawAnchorZ],8)
*menuendif()
*menuif([$TPL_DrawFirstGridId != 0])
*menufield(DFID,integer,[$TPL_DrawFirstGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XDF,real,[$TPL_DrawFirstGridX],8)
*menufield(YDF,real,[$TPL_DrawFirstGridY],8)
*menufield(ZDF,real,[$TPL_DrawFirstGridZ],8)
*menuendif()
*menulineend()
*menuendif()
*menuif([ytype > 0])
*menustring("        ")
*menustring("EXTR    ")
*menuvariableset(variable4,[$DSHP_EXTRUSION_CID])
*menuvariableset(variable5,[$DSHP_EXTRUSION_XE])
*menuvariableset(variable6,[$DSHP_EXTRUSION_YE])
*menuvariableset(variable7,[$DSHP_EXTRUSION_ZE])
*menufield(CID,integer,[variable4],8)
*menuif([variable4 == 0])
*menufield(X,real,[variable5],8)
*menufield(Y,real,[variable6],8)
*menufield(Z,real,[variable7],8)
*menuelse()
*menuvariableset(variable8,[@getentityvalue(systems,variable4,type)])
*menuvariableset(variable10,[@getentityvalue(systems,variable4,globaloriginx)])
*menuvariableset(variable11,[@getentityvalue(systems,variable4,globaloriginy)])
*menuvariableset(variable12,[@getentityvalue(systems,variable4,globaloriginz)])
*menuif([variable8 == 2])
*menufield(X,real,[@xpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Y,real,[-1.0*@zpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Z,real,[@ypointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menuendif()
*menuif([variable8 != 2])
*menufield(X,real,[@xpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Y,real,[@ypointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Z,real,[@zpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menuendif()
*menuendif()
*menulineend()
*menuendif()
*menuvariableset(variable2,[@attributearraylength($DSHP_GRIDCON_NODES)])
*menuif([variable2 > 0])
*menustring("        ")
*menustring("GRIDCON ")
*menuvariableset(variable1,1)
*beginrepeat(variable2)
repeatwrap(72)
*repeatcounter(1)
*menuif([counter1 != 1])
*menustring("        ")
*menustring("        ")
*menuendif()
*menustring("ID      ")
*menufield(GDID,integer,[@attributearrayvalue($DSHP_GRIDCON_NODES,counter1)],8)
*menuvariableset(variable3,[@attributearrayvalue($DSHP_GRIDCON_CTYPE,counter1)])
*menuif([variable3 == 1])
*menustring("   FIXED")
*menuendif()
*menuif([variable3 == 2])
*menustring("  VECTOR")
*menuendif()
*menuif([variable3 == 3])
*menustring("  PLANAR")
*menuendif()
*menuif([variable3 != 1])
*menuvariableset(variable4,[@attributearrayvalue($DSHP_GRIDCON_CID,counter1)])
*menuvariableset(variable5,[@attributearrayvalue($DSHP_GRIDCON_XCOMP,counter1)])
*menuvariableset(variable6,[@attributearrayvalue($DSHP_GRIDCON_YCOMP,counter1)])
*menuvariableset(variable7,[@attributearrayvalue($DSHP_GRIDCON_ZCOMP,counter1)])
*menufield(CID,integer,[variable4],8)
*menuif([variable4 == 0])
*menufield(X,real,[variable5],8)
*menufield(Y,real,[variable6],8)
*menufield(Z,real,[variable7],8)
*menuelse()
*menuvariableset(variable8,[@getentityvalue(systems,variable4,type)])
menuvariableset(variable9,[@attributearrayvalue($DSHP_GRIDCON_NODES,counter1)])
*menuvariableset(variable10,[@getentityvalue(systems,variable4,globaloriginx)])
*menuvariableset(variable11,[@getentityvalue(systems,variable4,globaloriginy)])
*menuvariableset(variable12,[@getentityvalue(systems,variable4,globaloriginz)])
*menuif([variable8 == 2])
*menufield(X,real,[@xpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Y,real,[-1.0*@zpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Z,real,[@ypointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menuendif()
*menuif([variable8 != 2])
*menufield(X,real,[@xpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Y,real,[@ypointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Z,real,[@zpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menuendif()
*menuendif()
*menuendif()
*menulineend()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menuendif()
*menuvariableset(variable13,[@attributearraylength($DSHP_GRIDCON_SETS)])
*menuif([variable13 > 0])
*menuif([variable2 == 0])
*menustring("        ")
*menustring("GRIDCON ")
*menuelse()
*menustring("        ")
*menustring("        ")
*menuendif()
*menuvariableset(variable1,1)
*beginrepeat(variable13)
repeatwrap(72)
*repeatcounter(1)
*menuif([counter1 != 1])
*menustring("        ")
*menustring("        ")
*menuendif()
*menustring("SET     ")
*menufield(GCSETID,integer,[@attributearrayvalue($DSHP_GRIDCON_SETS,counter1)],8)
*menuvariableset(variable3,[@attributearrayvalue($DSHP_SET_GRIDCON_CTYPE,counter1)])
*menuif([variable3 == 1])
*menustring("   FIXED")
*menuendif()
*menuif([variable3 == 2])
*menustring("  VECTOR")
*menuendif()
*menuif([variable3 == 3])
*menustring("  PLANAR")
*menuendif()
*menuif([variable3 != 1])
*menuvariableset(variable4,[@attributearrayvalue($DSHP_SET_GRIDCON_CID,counter1)])
*menuvariableset(variable5,[@attributearrayvalue($DSHP_SET_GRIDCON_XCOMP,counter1)])
*menuvariableset(variable6,[@attributearrayvalue($DSHP_SET_GRIDCON_YCOMP,counter1)])
*menuvariableset(variable7,[@attributearrayvalue($DSHP_SET_GRIDCON_ZCOMP,counter1)])
*menufield(CID,integer,[variable4],8)
*menuif([variable4 == 0])
*menufield(X,real,[variable5],8)
*menufield(Y,real,[variable6],8)
*menufield(Z,real,[variable7],8)
*menuelse()
*menuvariableset(variable8,[@getentityvalue(systems,variable4,type)])
*menuvariableset(variable10,[@getentityvalue(systems,variable4,globaloriginx)])
*menuvariableset(variable11,[@getentityvalue(systems,variable4,globaloriginy)])
*menuvariableset(variable12,[@getentityvalue(systems,variable4,globaloriginz)])
*menuif([variable8 == 2])
*menufield(X,real,[@xpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Y,real,[-1.0*@zpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Z,real,[@ypointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menuendif()
*menuif([variable8 != 2])
*menufield(X,real,[@xpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Y,real,[@ypointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menufield(Z,real,[@zpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*menuendif()
*menuendif()
*menuendif()
*menulineend()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menuendif()
*menuvariableset(variable2,[@attributearraylength($DSHP_SIDECON_BLOCKS)])
*menuif([variable2 > 0])
*menustring("        ")
*menustring("SDCON   ")
*beginrepeat(variable2)
repeatwrap(72)
*menuif([variable2 != 1])
*menustring("        ")
*menustring("        ")
*menuendif()
*repeatcounter(1)
*menuvariableset(variable3,[@attributearrayvalue($DSHP_SIDECON_BLOCKS,counter1)])
*menustring("        ")
*menufield(XL1,real,[@getentityvalue(blocks,variable3,mini)],8)
*menufield(XU1,real,[@getentityvalue(blocks,variable3,maxi)],8)
*menufield(YL1,real,[@getentityvalue(blocks,variable3,minj)],8)
*menufield(YU1,real,[@getentityvalue(blocks,variable3,maxj)],8)
*menufield(ZL1,real,[@getentityvalue(blocks,variable3,mink)],8)
*menufield(ZU1,real,[@getentityvalue(blocks,variable3,maxk)],8)
*menulineend()
*endrepeat()
*menuelse()
*menuif([@defined($DSHP_SIDECON_CID)])
*menuif([@defined($DSHP_SIDECON_LB_X) || @defined($DSHP_SIDECON_UB_X) || @defined($DSHP_SIDECON_LB_Y) ||
@defined($DSHP_SIDECON_UB_Y) || @defined($DSHP_SIDECON_LB_Z) || @defined($DSHP_SIDECON_UB_Z)])
*menustring("        ")
*menustring("SDCON   ")
*menuif([$DSHP_SIDECON_CID > 0])
*menufield(SDCID,integer,[$DSHP_SIDECON_CID],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([@defined($DSHP_SIDECON_LB_X)])
*menufield(XL1,real,[$DSHP_SIDECON_LB_X],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([@defined($DSHP_SIDECON_UB_X)])
*menufield(XU1,real,[$DSHP_SIDECON_UB_X],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([@defined($DSHP_SIDECON_LB_Y)])
*menufield(YL1,real,[$DSHP_SIDECON_LB_Y],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([@defined($DSHP_SIDECON_UB_Y)])
*menufield(YU1,real,[$DSHP_SIDECON_UB_Y],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([@defined($DSHP_SIDECON_LB_Z)])
*menufield(ZL1,real,[$DSHP_SIDECON_LB_Z],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([@defined($DSHP_SIDECON_UB_Z)])
*menufield(ZU1,real,[$DSHP_SIDECON_UB_Z],8)
*menuelse()
*menustring("        ")
*menuendif()
*menulineend()
*menuendif()
*menuendif()
*menuendif()
*menuif([$DSHP_BARRIER_COMPONENTID > 0])
*menustring("        ")
*menustring("BMESH   ")
*menufield(BMID,integer,[$DSHP_BARRIER_COMPONENTID],8)
*menulineend()
*menuendif()
*menuendif()
*menuif([config == 115])
*menustring("DESVAR  ") 
*menufield(ID,integer,id,8)
*menuif([@stringstartswithnumericcharacter(name)])
*menustring("s")
*menufield(,string,name,7)
*menuelse()
*menufield(NAME,string,name,8)
*menuendif()
*menufield(INIT,real,initialvalue,8)
*menufield(LB,real,lowerbound,8)
*menufield(UB,real,upperbound,8)
*menuif([delxv == -1.0])
*menustring("        ")
*menuelse()
*menufield(DELXV,real,delxv,8)
*menuendif()
*menuif([type > 0])
*menufield(DDVAL,integer,type,8)
*menuendif()
*menulineend()
*menuif([designable!=0])
*menustring("$DVARCNT") 
*menufield(DVID,integer,id,8)
*menufield(NAME,string,name,8)
*menufield(VID,integer,designable,8)
*menufield(INIT,real,initialvalue,8)
*menufield(LB,real,lowerbound,8)
*menufield(UB,real,upperbound,8)
*menuif([delxv == -1.0])
*menustring("        ")
*menuelse()
*menufield(DELXV,real,delxv,8)
*menuendif()
*menulineend()
*menustring("$ORDER  ") 
*menufield(DVID,integer,id,8)
*menulineend()
*menuendif()
*menuendif()
*menuif([config == 116])
*menustring("DTPG    ")
*menufield(ID,integer,id,8)
*menuattributecreate($TPG_BeadString,"")
*menuif([shapedesignvariable != 0])
*menuattributeset($TPG_BeadString,"DVGRID")
*menuelse()
*menupointerset(pointer1,componentlist,0)
*menuif([property == 1])
*menuattributeset($TPG_BeadString,"PSHELL")
*menuelse()
*menuif([property == 2])
*menuattributeset($TPG_BeadString,"PCOMP")
*menuendif()
*menuendif()
*menuendif()
*menufield(TYPE,string,[$TPG_BeadString],8)
*menuif([shapedesignvariable != 0])
*menufield(DID,integer,shapedesignvariable,8)
*menulineend()
*menuelse()
*menuif([componentlistmax > 0])
*menuvariableset(variable1,1)
*beginrepeat(componentlistmax)
*repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,componentlist,counter1-1)
*menufield(PID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==6])
*menuif([variable1 != componentlistmax])
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuendif()
*menuendif()
*menuif([(shapedesignvariable == 0) && (componentlistmax == 0)])
*menulineend()
*menuendif()
*menuif([ytype != 2])       
*menuif([minimumwidth > 0.0])
*menustring("        ")
*menufield(WIDTH,real,minimumwidth,8)
*menufield(ANGLE,real,drawangle,8)
*menuattributecreate($TPG_BeadBufferZone,"YES")
*menuif([bufferzone == 0])
*menuattributeset($TPG_BeadBufferZone,"NO")
*menufield(BUF_ZONE,string,$TPG_BeadBufferZone,8)
*menulegalvalue("   NO   ")
*menuelse()
*menuattributeset($TPG_BeadBufferZone,"YES")
*menufield(BUF_ZONE,string,$TPG_BeadBufferZone,8)
*menulegalvalue("  YES   ")
*menuendif()
*menuif([shapedesignvariable == 0])
*menufield(HEIGHT,real,drawheight,8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([shapedesignvariable == 0])
*menuif([designable==0])
*menufield(DRAW_DIR,string,$TPG_DRAW_DIR,8)
*menulegalvalue("    NORM")
*menustring("        ")
*menustring("        ")
*menuendif()
*menuif([designable==1])
*menufield(DRAW_X,real,basethickness,8)
*menufield(DRAW_Y,real,designthickness,8)
*menufield(DRAW_Z,real,delxv,8)
*menuendif()
*menuelse()
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menuendif()
*menuif([shapedesignvariable == 0])
*menuattributecreate($TPG_BeadBoundarySkip,"BOTH")
*menuif([(boundaryskip == 3) || (boundaryskip == 121)])
*menuattributeset($TPG_BeadBoundarySkip,"BOTH")
*menufield(SKIP,string,$TPG_BeadBoundarySkip,8)
*menulegalvalue("  BOTH  ")
*menuendif()
*menuif([(boundaryskip == 2) || (boundaryskip == 122)])
*menuattributeset($TPG_BeadBoundarySkip,"LOAD")
*menufield(SKIP,string,$TPG_BeadBoundarySkip,8)
*menulegalvalue("  LOAD  ")
*menuendif()
*menuif([(boundaryskip == 1) || (boundaryskip == 123)])
*menuattributeset($TPG_BeadBoundarySkip,"SPC")
*menufield(SKIP,string,$TPG_BeadBoundarySkip,8)
*menulegalvalue("  SPC   ")
*menuendif()
*menuif([(boundaryskip == 0) || (boundaryskip == 124)])
*menuattributeset($TPG_BeadBoundarySkip,"NONE")
*menufield(SKIP,string,$TPG_BeadBoundarySkip,8)
*menulegalvalue("  NONE  ")
*menuendif()
*menuelse()
*menustring("        ")
*menuendif()
*menulineend()
*menuendif()
*menuif([type > 0])
*menustring("        ")
*menustring("PATRN   ")
*menufield(TYP,integer,type,8)
*menuif([anchorpointid != 0])
*menufield(AID,integer,anchorpointid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XA,real,[$TPG_SymmetryAnchorX],8)
*menufield(YA,real,[$TPG_SymmetryAnchorY],8)
*menufield(ZA,real,[$TPG_SymmetryAnchorZ],8)
*menuendif()
*menuif([firstgridid != 0])
*menufield(FID,integer,firstgridid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menuif([type != 7])
*menufield(XF,real,[$TPG_SymmetryNormalX],8)
*menufield(YF,real,[$TPG_SymmetryNormalY],8)
*menufield(ZF,real,[$TPG_SymmetryNormalZ],8)
*menuendif()
*menuendif()
*menulineend()
*menuendif()
*menuif([type >= 20])
*menustring("        ")
*menustring("PATRN2  ")
*menufield(UCYC,integer,xorder,8)
*menuif([secondgridid != 0])
*menufield(SID,integer,secondgridid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XS,real,[$TPG_SecondGridX],8)
*menufield(YS,real,[$TPG_SecondGridY],8)
*menufield(ZS,real,[$TPG_SecondGridZ],8)
*menuendif()
*menulineend()
*menuendif()
*menuif([yorder > 0])
*menustring("        ")
*menustring("BOUNDS  ")
*menufield(LB,real,lowerbound,8)
*menufield(UB,real,upperbound,8)
*menuif([yorder == 2])
*menufield(INIT,real,initialvalue,8)
*menuendif()
*menulineend()
*menuendif()
*menuendif()
*menuif([ytype == 1])
*menustring("        ")
*menustring("MASTER  ")
*menulineend()
*menuendif()  
*menuif([ytype == 2])
*menustring("        ")
*menustring("SLAVE   ")
*menufield(DTPG_ID,integer,[$TPG_MasterDesvar],8)
*menufield(SX,real,[$TPL_RptnScaleX],8)
*menufield(SY,real,[$TPL_RptnScaleY],8)
*menufield(SZ,real,[$TPL_RptnScaleZ],8)
*menulineend()
*menuendif()
*menuif([ytype > 0])
*menustring("        ")
*menustring("COORD   ")
*menuif([$TPL_RptnSysFlag == 0])  
*menufield(CID,integer,0,8)
*menuelse()
*menufield(CID,integer,[$TPL_RptnSysId],8)
*menuendif()  
*menuif([$TPL_RptnAnchorNodeId != 0])
*menufield(CAID,integer,[$TPL_RptnAnchorNodeId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCA,real,[$TPL_RptnAnchorX],8)
*menufield(YCA,real,[$TPL_RptnAnchorY],8)
*menufield(ZCA,real,[$TPL_RptnAnchorZ],8)
*menuendif()
*menuif([$TPL_RptnSysFlag != 0])
*menulineend()  
*menuendif()
*menuif([$TPL_RptnSysFlag == 0])
*menuif([$TPL_RptnFirstGridId != 0])
*menufield(CFID,integer,[$TPL_RptnFirstGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCF,real,[$TPL_RptnFirstGridX],8)
*menufield(YCF,real,[$TPL_RptnFirstGridY],8)
*menufield(ZCF,real,[$TPL_RptnFirstGridZ],8)
*menuendif()
*menulineend()    
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menuif([$TPL_RptnSecondGridId != 0])
*menufield(CFID,integer,[$TPL_RptnSecondGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCS,real,[$TPL_RptnSecondGridX],8)
*menufield(YCS,real,[$TPL_RptnSecondGridY],8)
*menufield(ZCS,real,[$TPL_RptnSecondGridZ],8)
*menuendif()
*menuif([$TPL_RptnThirdGridId != 0])
*menufield(CTID,integer,[$TPL_RptnThirdGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCT,real,[$TPL_RptnThirdGridX],8)
*menufield(YCT,real,[$TPL_RptnThirdGridY],8)
*menufield(ZCT,real,[$TPL_RptnThirdGridZ],8)
*menuendif()  
*menulineend()
*menuendif()
*menuendif()
*menuendif()
// free size vars
*menuif([config == 122])
*menustring("DSIZE   ") 
*menufield(ID,integer,id,8)
*menuif([designable == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([designable == 3])
*menustring("PCOMP   ")
*menuendif()
*menuif([designable == 4])
*menustring("STACK  ")
*menuendif()

*menuif([designable == 4])
*menuif([componentlistmax > 0])
*menuvariableset(variable1,1)
*beginrepeat(componentlistmax)
*repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,componentlist,counter1-1)
*menufield(EID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==6])
*menuif([variable1 != componentlistmax])
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuendif()
*menuendif()
*menuif([designable == 1 || designable == 3])
*menuif([componentlistmax > 0])
*menuvariableset(variable1,1)
*beginrepeat(componentlistmax)
*repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,componentlist,counter1-1)
*menufield(PID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==6])
menuif([variable1 <= componentlistmax])
menulineend()
*menuif([variable1 != componentlistmax])
*menustring("        ")
*menustring("        ")
*menuendif()
menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuendif()
*menuendif()
*menuif([boundaryskip != 2])
*menuif([lowerbound > 0.0])
*menustring("        ")
*menustring("MEMBSIZ ")
*menufield(MINDIM,real,lowerbound,8)
*menuif([upperbound > 0.0])
*menufield(MAXDIM,real,upperbound,8)
*menuendif()  
*menulineend()
*menuendif()
*menuif([initialvalue > 0.0])
*menustring("        ")
*menustring("STRESS  ")
*menufield(UBOUND,real,initialvalue,8)
*menulineend()
*menuendif()
*menuendif()
*menuif([minimumwidth == 1.0 || minimumwidth == 2.0])
*menustring("        ")
*menustring("FATIGUE ")
*menuif([minimumwidth == 1.0])
*menustring("DAMAGE  ")
*menuendif()
*menuif([minimumwidth == 2.0])
*menustring("LIFE    ")
*menuendif()
*menufield(FBOUND,real,drawangle,8)
*menulineend()
*menuendif()
*menuif([type > 0])
*menustring("        ")
*menustring("PATRN   ")
*menufield(TYP,integer,type,8)
*menuif([anchorpointid != 0])
*menufield(AID,integer,anchorpointid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XA,real,[$TPL_SymmetryAnchorX],8)
*menufield(YA,real,[$TPL_SymmetryAnchorY],8)
*menufield(ZA,real,[$TPL_SymmetryAnchorZ],8)
*menuendif()
*menuif([firstgridid != 0])
*menufield(FID,integer,firstgridid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XF,real,[$TPL_SymmetryFirstGridX],8)
*menufield(YF,real,[$TPL_SymmetryFirstGridY],8)
*menufield(ZF,real,[$TPL_SymmetryFirstGridZ],8)
*menuendif()
*menulineend()
*menuif([((type > 1) && (type != 10)) || ((type == 10) && (bufferzone > 0))])
*menustring("        ")
*menuif([bufferzone > 0])
*menufield(UCYC,integer,bufferzone,8)
*menuelse()
*menustring("        ") 
*menuendif()  
*menuif([type != 10])
*menuif([secondgridid != 0])
*menufield(SID,integer,secondgridid,8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XS,real,[$TPL_SymmetrySecondGridX],8)
*menufield(YS,real,[$TPL_SymmetrySecondGridY],8)
*menufield(ZS,real,[$TPL_SymmetrySecondGridZ],8)
*menuendif()
*menuendif()
*menulineend()
*menuendif()  
*menuendif()
*menuif([designable == 1])
*menuif([(basethickness > 0.0) || (designthickness > 0.0)])
*menustring("        ")
*menustring("THICK   ")
*menuif([basethickness > 0.0])
*menufield(T0,real,basethickness,8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([designthickness > 0.0])
*menufield(T1,real,designthickness,8)
*menuendif()
*menulineend()
*menuendif()
*menuendif()
*menuif([boundaryskip == 1])
*menustring("        ")
*menustring("MASTER  ")
*menulineend()
*menuendif()  
*menuif([boundaryskip == 2])
*menustring("        ")
*menustring("SLAVE   ")
*menufield(DSIZE_ID,integer,shapedesignvariable,8)
*menufield(SX,real,[$TPL_RptnScaleX],8)
*menufield(SY,real,[$TPL_RptnScaleY],8)
*menufield(SZ,real,[$TPL_RptnScaleZ],8)
*menulineend()
*menuendif()
*menuif([boundaryskip > 0])
*menustring("        ")
*menustring("COORD   ")
*menuif([$TPL_RptnSysFlag == 0])  
*menufield(CID,integer,0,8)
*menuelse()
*menufield(CID,integer,[$TPL_RptnSysId],8)
*menuendif()  
*menuif([$TPL_RptnAnchorNodeId != 0])
*menufield(CAID,integer,[$TPL_RptnAnchorNodeId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCA,real,[$TPL_RptnAnchorX],8)
*menufield(YCA,real,[$TPL_RptnAnchorY],8)
*menufield(ZCA,real,[$TPL_RptnAnchorZ],8)
*menuendif()
*menuif([$TPL_RptnSysFlag != 0])
*menulineend()  
*menuendif()
*menuif([$TPL_RptnSysFlag == 0])
*menuif([$TPL_RptnFirstGridId != 0])
*menufield(CFID,integer,[$TPL_RptnFirstGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCF,real,[$TPL_RptnFirstGridX],8)
*menufield(YCF,real,[$TPL_RptnFirstGridY],8)
*menufield(ZCF,real,[$TPL_RptnFirstGridZ],8)
*menuendif()
*menulineend()    
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menuif([$TPL_RptnSecondGridId != 0])
*menufield(CFID,integer,[$TPL_RptnSecondGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCS,real,[$TPL_RptnSecondGridX],8)
*menufield(YCS,real,[$TPL_RptnSecondGridY],8)
*menufield(ZCS,real,[$TPL_RptnSecondGridZ],8)
*menuendif()
*menuif([$TPL_RptnThirdGridId != 0])
*menufield(CTID,integer,[$TPL_RptnThirdGridId],8)
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(XCT,real,[$TPL_RptnThirdGridX],8)
*menufield(YCT,real,[$TPL_RptnThirdGridY],8)
*menufield(ZCT,real,[$TPL_RptnThirdGridZ],8)
*menuendif()  
*menulineend()
*menuendif()
*menuendif()
*menuif([designable == 3 || designable == 4])
*menuif([$DSIZE_LAMINATE_MINTHICK > 0.0 || $DSIZE_LAMINATE_MAXTHICK > 0.0])
*menustring("        ")
*menustring("COMP    ")
*menustring("LAMTHK  ")
*menuif([$DSIZE_LAMINATE_MINTHICK > 0.0])
*menufield(LTMIN,real,[$DSIZE_LAMINATE_MINTHICK],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([$DSIZE_LAMINATE_MAXTHICK > 0.0])
*menufield(LTMAX,real,[$DSIZE_LAMINATE_MAXTHICK],8)
*menuelse()
*menustring("        ")
*menuendif()
*menufield(LTSET,entity,$DSIZE_LAMINATE_LTSET,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(LTEXC,string,$DSIZE_LAMINATE_LTEXC,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)        
*menulineend()
*menuendif()
*menuoption(PLYTHK,$DSIZE_PLYTHK)
*menucase(0)
*menucase(1)
*menuoptionenum("Ply Thickness Options",$DSIZE_PLYTHK_OPT,DSIZE_PLYTHK_OPTIONS)
*menucase(1)
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYTHK  ")
*menustring("ALL     ")
*menufield(PTMIN,real,$DSIZE_PLYTHK_PTMIN,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)
*menufield(PTMAX,real,$DSIZE_PLYTHK_PTMAX,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)
*menufield(PTOPT,string,$DSIZE_PLYTHK_PTOPT,8)
*menulegalvalue("        ") 
*menulegalvalue(BYANG)
*menulegalvalue(BYSET)
*menulegalvalue(BYPLY)
*menufield(PTSET,entity,$DSIZE_PLYTHK_PTSET,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PTEXC,string,$DSIZE_PLYTHK_PTEXC,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)
*menulineend()              
*menucase(2)
*beginrepeat($DSIZE_NUMBER_OF_PLYTHK)
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYTHK  ")
*menufield(TANGLE,arrayofstring,$DSIZE_PLYTHK_TANGLE_ARRAY,8)
*menufield(PTMIN,arrayofstring,$DSIZE_PLYTHK_PTMIN_ARRAY,8)
*menufield(PTMAX,arrayofstring,$DSIZE_PLYTHK_PTMAX_ARRAY,8)
*menustring("BYANG   ")
*menufield(PTSET,arrayofentity,$DSIZE_PLYTHK_PTSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PTEXC,arrayofstring,$DSIZE_PLYTHK_PTEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)
*menulineend()
*endrepeat()
*menucase(3)
*beginrepeat($DSIZE_NUMBER_OF_PLYTHK)
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYTHK  ")
*menufield(TSET,arrayofentity,$DSIZE_PLYTHK_PLYSET_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)            
*menufield(PTMIN,arrayofstring,$DSIZE_PLYTHK_PTMIN_ARRAY,8)
*menufield(PTMAX,arrayofstring,$DSIZE_PLYTHK_PTMAX_ARRAY,8)
*menustring("BYSET   ")
*menufield(PTSET,arrayofentity,$DSIZE_PLYTHK_PTSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PTEXC,arrayofstring,$DSIZE_PLYTHK_PTEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)              
*menulineend()
*endrepeat()
*menucase(4)
*beginrepeat($DSIZE_NUMBER_OF_PLYTHK)
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYTHK  ")
*menufield(TPLYID,arrayofentity,$DSIZE_PLYTHK_PLYID_ARRAY,8)
*menuentitytype(plies)
*menufield(PTMIN,arrayofstring,$DSIZE_PLYTHK_PTMIN_ARRAY,8)
*menufield(PTMAX,arrayofstring,$DSIZE_PLYTHK_PTMAX_ARRAY,8)
*menustring("BYPLY   ")
*menufield(PTSET,arrayofentity,$DSIZE_PLYTHK_PTSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PTEXC,arrayofstring,$DSIZE_PLYTHK_PTEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)              
*menulineend()             
*endrepeat()            
*menuoptionend()
*menuoptionend()
*menuoption(PLYPCT,$DSIZE_PLYPCT)
*menucase(0)
*menucase(1)
*menuoptionenum("Ply Percentage Options",$DSIZE_PLYPCT_OPT,DSIZE_PLYPCT_OPTIONS)
*menucase(1)
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYPCT  ")
*menustring("ALL     ")
*menufield(PPMIN,real,$DSIZE_PLYPCT_PPMIN,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)
*menurestrictedvalue(<,1.0)
*menufield(PPMAX,real,$DSIZE_PLYPCT_PPMAX,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)
*menurestrictedvalue(<,1.0)
*menufield(PPOPT,string,$DSIZE_PLYPCT_PPOPT,8)
*menulegalvalue("        ") 
*menulegalvalue(BYANG)
*menulegalvalue(BYSET)
*menulegalvalue(BYPLY)
*menufield(PPSET,entity,$DSIZE_PLYPCT_PPSET,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PPEXC,string,$DSIZE_PLYPCT_PPEXC,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH) 
*menulineend()
*menucase(2)
*beginrepeat($DSIZE_NUMBER_OF_PLYPCT)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()   
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYPCT  ")
*menufield(PANGLE,arrayofstring,$DSIZE_PLYPCT_PANGLE_ARRAY,8)
*menufield(PPMIN,arrayofstring,$DSIZE_PLYPCT_PPMIN_ARRAY,8)
*menufield(PPMAX,arrayofstring,$DSIZE_PLYPCT_PPMAX_ARRAY,8)
*menustring("BYANG   ")
*menufield(PPSET,arrayofentity,$DSIZE_PLYPCT_PPSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PPEXC,arrayofstring,$DSIZE_PLYPCT_PPEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)
*menulineend()
*endrepeat()
*menucase(3)
*beginrepeat($DSIZE_NUMBER_OF_PLYPCT)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()     
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYPCT  ")
*menufield(PSET,arrayofentity,$DSIZE_PLYPCT_PLYSET_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)            
*menufield(PPMIN,arrayofstring,$DSIZE_PLYPCT_PPMIN_ARRAY,8)
*menufield(PPMAX,arrayofstring,$DSIZE_PLYPCT_PPMAX_ARRAY,8)
*menustring("BYSET   ")            
*menufield(PPSET,arrayofentity,$DSIZE_PLYPCT_PPSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PPEXC,arrayofstring,$DSIZE_PLYPCT_PPEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)               
*menulineend()            
*endrepeat()
*menucase(4)
*beginrepeat($DSIZE_NUMBER_OF_PLYPCT)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()     
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYPCT  ")
*menufield(PPLYID,arrayofentity,$DSIZE_PLYPCT_PLYID_ARRAY,8)
*menuentitytype(plies)
*menufield(PPMIN,arrayofstring,$DSIZE_PLYPCT_PPMIN_ARRAY,8)
*menufield(PPMAX,arrayofstring,$DSIZE_PLYPCT_PPMAX_ARRAY,8)
*menustring("BYPLY   ")            
*menufield(PPSET,arrayofentity,$DSIZE_PLYPCT_PPSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PPEXC,arrayofstring,$DSIZE_PLYPCT_PPEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)               
*menulineend()            
*endrepeat()             
*menuoptionend()
*menuoptionend()
*menuoption(PLYMAN,$DSIZE_PLYMAN)
*menucase(0)
*menucase(1)
*menuoptionenum("Ply Constraints  Options",$DSIZE_PLYMAN_OPT,DSIZE_PLYMAN_OPTIONS)
*menucase(1)
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYMAN  ")
*menustring("ALL     ")
*menufield(PMMAN,real,$DSIZE_PLYMAN_PMMAN,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)
*menustring("        ")
*menufield(PMOPT,string,$DSIZE_PLYMAN_PMOPT,8)
*menulegalvalue("        ") 
*menulegalvalue(BYANG)
*menulegalvalue(BYSET)
*menulegalvalue(BYPLY)
*menufield(PMSET,entity,$DSIZE_PLYMAN_PMSET,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PMEXC,string,$DSIZE_PLYMAN_PMEXC,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH) 
*menulineend()
*menucase(2)
*beginrepeat($DSIZE_NUMBER_OF_PLYMAN)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()   
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYMAN  ")
*menufield(PANGLE,arrayofstring,$DSIZE_PLYMAN_PANGLE_ARRAY,8)
*menufield(PMMAN,arrayofstring,$DSIZE_PLYMAN_PMMAN_ARRAY,8)
*menustring("        ")
*menustring("BYANG   ")
*menufield(PMSET,arrayofentity,$DSIZE_PLYMAN_PMSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PMEXC,arrayofstring,$DSIZE_PLYMAN_PMEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)
*menulineend()
*endrepeat()
*menucase(3)
*beginrepeat($DSIZE_NUMBER_OF_PLYMAN)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()   
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYMAN  ")
*menufield(PSET,arrayofentity,$DSIZE_PLYMAN_PLYSET_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)
*menufield(PMMAN,arrayofstring,$DSIZE_PLYMAN_PMMAN_ARRAY,8)
*menustring("        ")
*menustring("BYSET   ")
*menufield(PMSET,arrayofentity,$DSIZE_PLYMAN_PMSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PMEXC,arrayofstring,$DSIZE_PLYMAN_PMEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)
*menulineend()
*endrepeat()
*menucase(4)
*beginrepeat($DSIZE_NUMBER_OF_PLYMAN)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()   
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYMAN  ")
*menufield(PPLYID,arrayofentity,$DSIZE_PLYMAN_PLYID_ARRAY,8)
*menuentitytype(plies)
*menufield(PMMAN,arrayofstring,$DSIZE_PLYMAN_PMMAN_ARRAY,8)
*menustring("        ")
*menustring("BYPLY   ")
*menufield(PMSET,arrayofentity,$DSIZE_PLYMAN_PMSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PMEXC,arrayofstring,$DSIZE_PLYMAN_PMEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)
*menulineend()
*endrepeat()            
*menuoptionend()
*menuoptionend()
*menuoption(BALANCE,$DSIZE_BALANCE)
*menucase(0)
*menucase(1)
*menuoptionenum("Balance Constraints Options",$DSIZE_BALANCE_OPT,DSIZE_BALANCE_OPTIONS)
*menucase(1)       
*beginrepeat($DSIZE_NUMBER_OF_BALANCE)
*menustring("        ")
*menustring("COMP    ")
*menustring("BALANCE ")
*menufield(BANGLE1,arrayofreal,$DSIZE_BALANCE_BANGLE1,8)
*menufield(BANGLE2,arrayofreal,$DSIZE_BALANCE_BANGLE2,8)
*menustring("        ")
*menustring("BYANG   ")     
*menulineend()
*endrepeat()
*menucase(2)    
*beginrepeat($DSIZE_NUMBER_OF_BALANCE)
*menustring("        ")
*menustring("COMP    ")
*menustring("BALANCE ")
*menufield(BSET1,arrayofentity,$DSIZE_BALANCE_PLYSET1_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)             
*menufield(BSET2,arrayofentity,$DSIZE_BALANCE_PLYSET2_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)             
*menustring("        ")
*menustring("BYSET   ")            
*menulineend()
*endrepeat()
*menucase(3)    
*beginrepeat($DSIZE_NUMBER_OF_BALANCE)
*menustring("        ")
*menustring("COMP    ")
*menustring("BALANCE ")
*menufield(BPLYID1,arrayofentity,$DSIZE_BALANCE_PLYID1_ARRAY,8)
*menuentitytype(plies)
*menufield(BPLYID2,arrayofentity,$DSIZE_BALANCE_PLYID2_ARRAY,8)
*menuentitytype(plies)
*menustring("        ")
*menustring("BYPLY   ")            
*menulineend()
*endrepeat()
*menuoptionend()
*menuoptionend()
*menuoption(CONST,$DSIZE_CONST)
*menucase(0)
*menucase(1)
*menuoptionenum("Constant Constraints Options",$DSIZE_CONST_OPT,DSIZE_CONST_OPTIONS)
*menucase(1)          
*beginrepeat($DSIZE_NUMBER_OF_CONST)
*menustring("        ")
*menustring("COMP    ")
*menustring("CONST   ")
*menufield(CANGLE,arrayofreal,$DSIZE_CONST_CANGLE,8)
*menufield(CTHICK,arrayofreal,$DSIZE_CONST_CTHICK,8)
*menurestrictedvalue(>,0.0)
*menustring("        ")
*menustring("BYANG   ")
*menulineend()
*endrepeat()
*menucase(2)     
*beginrepeat($DSIZE_NUMBER_OF_CONST)
*menustring("        ")
*menustring("COMP    ")
*menustring("CONST   ")
*menufield(CSET,arrayofentity,$DSIZE_CONST_PLYSET_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)
*menufield(CTHICK,arrayofreal,$DSIZE_CONST_CTHICK,8)
*menurestrictedvalue(>,0.0)
*menustring("        ")
*menustring("BYSET   ")
*menulineend()
*endrepeat()
*menucase(3)     
*beginrepeat($DSIZE_NUMBER_OF_CONST)
*menustring("        ")
*menustring("COMP    ")
*menustring("CONST   ")
*menufield(CPLYID,arrayofentity,$DSIZE_CONST_PLYID_ARRAY,8)
*menuentitytype(plies)
*menufield(CTHICK,arrayofreal,$DSIZE_CONST_CTHICK,8)
*menurestrictedvalue(>,0.0)
*menustring("        ")
*menustring("BYPLY   ")
*menulineend()
*endrepeat()     
*menuoptionend()          
*menuoptionend()
*menuoption(PLYPDRP,$DSIZE_PLYDRP)
*menucase(0)
*menucase(1)
*menuoptionenum("Ply Drop-off Options",$DSIZE_PLYDRP_OPT,DSIZE_PLYDRP_OPTIONS)
*menucase(1)
		*beginrepeat($DSIZE_NUMBER_OF_PLYDRP)
		  *repeatcounter(1)
*menuif([counter1 == 100000])
*menulineend()
*menuendif()   
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYDRP  ")
*menustring("ALL     ")            
*menufield(PDTYP,arrayofstring,$DSIZE_PLYDRP_PDTYP,8)
*menulegalvalue("        ") 
*menulegalvalue(PLYSLP)
*menulegalvalue(PLYDRP)
*menulegalvalue(TOTSLP)
*menulegalvalue(TOTDRP)
*menufield(PDMAX,arrayofstring,$DSIZE_PLYDRP_PDMAX,8)
*menufield(PDOPT,arrayofstring,$DSIZE_PLYDRP_PDOPT,8)
*menulegalvalue("        ") 
*menulegalvalue(BYANG)
*menulegalvalue(BYSET)
*menulegalvalue(BYPLY)            
*menufield(PDSET,arrayofentity,$DSIZE_PLYDRP_PDSET,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PDEXC,arrayofstring,$DSIZE_PLYDRP_PDEXC,8)
*menulegalvalue("        ")
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)            
*menulineend()

*menustring("        ")
*menustring("        ")
*menustring("        ")
*menufield(PDDEF,arrayofstring,$DSIZE_PLYDRP_PDDEF,8)
*menulegalvalue("        ")
*menulegalvalue(DIRECT)
			  *menuif([@stringequal(@attributearrayvalue($DSIZE_PLYDRP_PDDEF,counter1),"DIRECT")])
*menufield(PDX,arrayofstring,$DSIZE_PLYDRP_PDX,8)
*menufield(PDY,arrayofstring,$DSIZE_PLYDRP_PDY,8)
*menufield(PDZ,arrayofstring,$DSIZE_PLYDRP_PDZ,8)

*menuendif()
*menulineend()
			 *endrepeat()  
*menucase(2)
*beginrepeat($DSIZE_NUMBER_OF_PLYDRP)
*repeatcounter(1)
*menuif([counter1 == 100000])
*menulineend()
*menuendif()   
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYDRP  ")
*menufield(PANGLE,arrayofstring,$DSIZE_PLYPDRP_PANGLE_ARRAY,8)
*menufield(PDTYP,arrayofstring,$DSIZE_PLYDRP_PDTYP_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(PLYSLP)
*menulegalvalue(PLYDRP)
*menulegalvalue(TOTSLP)
*menulegalvalue(TOTDRP)
*menufield(PDMAX,arrayofstring,$DSIZE_PLYDRP_PDMAX_ARRAY,8)
*menustring("BYANG   ")
*menufield(PDSET,arrayofentity,$DSIZE_PLYDRP_PDSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PDEXC,arrayofstring,$DSIZE_PLYDRP_PDEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)              
*menulegalvalue(CONST)
*menulegalvalue(BOTH)              
*menulineend()
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menufield(PDDEF,arrayofstring,$DSIZE_PLYDRP_PDDEF_ARRAY,8)
*menulegalvalue("        ")
*menulegalvalue(DIRECT)
*menuif([@stringequal(@attributearrayvalue($DSIZE_PLYDRP_PDDEF_ARRAY,counter1),"DIRECT")])
*menufield(PDX,arrayofstring,$DSIZE_PLYDRP_PDX_ARRAY,8)
*menufield(PDY,arrayofstring,$DSIZE_PLYDRP_PDY_ARRAY,8)
*menufield(PDZ,arrayofstring,$DSIZE_PLYDRP_PDZ_ARRAY,8)

*menuendif()
*menulineend()
*endrepeat()
*menucase(3)
*beginrepeat($DSIZE_NUMBER_OF_PLYDRP)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()     
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYDRP  ")
*menufield(PSET,arrayofentity,$DSIZE_PLYDRP_PLYSET_ARRAY,8)
*menuentitytype(sets)    
*menuentitysubtype(plies)              
*menufield(PDTYP,arrayofstring,$DSIZE_PLYDRP_PDTYP_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(PLYSLP)
*menulegalvalue(PLYDRP)
*menulegalvalue(TOTSLP)
*menulegalvalue(TOTDRP)
*menufield(PDMAX,arrayofstring,$DSIZE_PLYDRP_PDMAX_ARRAY,8)
*menustring("BYSET   ")            
*menufield(PDSET,arrayofentity,$DSIZE_PLYDRP_PDSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PDEXC,arrayofstring,$DSIZE_PLYDRP_PDEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)  
*menulegalvalue(CORE)              
*menulegalvalue(CONST)
*menulegalvalue(BOTH)               
*menulineend() 
*menustring("        ")
*menustring("        ")
*menufield(PDDEF,arrayofstring,$DSIZE_PLYDRP_BYSET_PDDEF_ARRAY,8)
*menulegalvalue("        ")
*menulegalvalue(DIRECT)
*menuif([@stringequal(@attributearrayvalue($DSIZE_PLYDRP_BYSET_PDDEF_ARRAY,counter1),"DIRECT")])
*menufield(PDX,arrayofstring,$DSIZE_PLYDRP_PDX_ARRAY,8)
*menufield(PDY,arrayofstring,$DSIZE_PLYDRP_PDY_ARRAY,8)
*menufield(PDZ,arrayofstring,$DSIZE_PLYDRP_PDZ_ARRAY,8)

*menuendif()  
*menulineend()                
*endrepeat()
*menucase(4)
*beginrepeat($DSIZE_NUMBER_OF_PLYDRP)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()     
*menustring("        ")
*menustring("COMP    ")
*menustring("PLYDRP  ")
*menufield(PLYID,arrayofentity,$DSIZE_PLYDRP_PLYID_ARRAY,8)
*menuentitytype(plies)
*menufield(PDTYP,arrayofstring,$DSIZE_PLYDRP_PDTYP_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(PLYSLP)
*menulegalvalue(PLYDRP)
*menulegalvalue(TOTSLP)
*menulegalvalue(TOTDRP)
*menufield(PDMAX,arrayofstring,$DSIZE_PLYDRP_PDMAX_ARRAY,8)
*menustring("BYPLY   ")            
*menufield(PDSET,arrayofentity,$DSIZE_PLYDRP_PDSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PDEXC,arrayofstring,$DSIZE_PLYDRP_PDEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)  
*menulegalvalue(CORE)              
*menulegalvalue(CONST)
*menulegalvalue(BOTH)               
*menulineend() 
*menustring("        ")
*menustring("        ")
*menufield(PDDEF,arrayofstring,$DSIZE_PLYDRP_BYPLY_PDDEF_ARRAY,8)
*menulegalvalue("        ")
*menulegalvalue(DIRECT)
*menuif([@stringequal(@attributearrayvalue($DSIZE_PLYDRP_BYPLY_PDDEF_ARRAY,counter1),"DIRECT")])
*menufield(PDX,arrayofstring,$DSIZE_PLYDRP_PDX_ARRAY,8)
*menufield(PDY,arrayofstring,$DSIZE_PLYDRP_PDY_ARRAY,8)
*menufield(PDZ,arrayofstring,$DSIZE_PLYDRP_PDZ_ARRAY,8)

*menuendif() 
*menulineend()                
*endrepeat() 
*menuoptionend()    
*menuoptionend()
*menuendif()
*menuif([@attributearraylength($DSIZE_SET_GROUPS) > 0])
*menustring("        ")
*menustring("GROUP   ")
*menustring("        ")
*menuvariableset(variable4,0)
*menucounterset(counter1,1)
*menuvariableset(variable3,[@attributearraylength($DSIZE_SET_GROUPS)])
*beginrepeat(variable3)
*menuif([variable3 ==1000000000])
*menulineend()
*menuendif()
*menufield(EG,integer,[@attributearrayvalue($DSIZE_SET_GROUPS,variable4+1)],8)
*menuvariableset(variable4,[variable4+1])
*menucounterset(counter1,[counter1+1])
*menuif([counter1 % 7 == 0])
*menuif([variable4 < variable3])
*menulineend()
*menustring("        ")
*menustring("        ")     
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuendif()  
*menuendif()
// composite size vars
*menuif([config == 99])
*menustring("DCOMP   ") 
*menufield(ID,integer,id,8)
*menuif([designable == 1])
*menustring("STACK  ")
*menuif([componentlistmax > 0])
*menuvariableset(variable1,1)
*beginrepeat(componentlistmax)
*repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,componentlist,counter1-1)
*menufield(EID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==6])
*menuif([variable1 != componentlistmax])
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuendif()
*menuendif()
*menuif([designable == 2])
*menustring("PCOMP   ")
*menuif([componentlistmax > 0])
*menuvariableset(variable1,1)
*beginrepeat(componentlistmax)
*repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,componentlist,counter1-1)
*menufield(EID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==6])
*menuif([variable1 != componentlistmax])
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuendif()
*menuendif()
*menuif([$DSIZE_LAMINATE_MINTHICK > 0.0 || $DSIZE_LAMINATE_MAXTHICK > 0.0])
*menustring("        ")
*menustring("LAMTHK  ")
*menuif([$DSIZE_LAMINATE_MINTHICK > 0.0])
*menufield(LTMIN,real,[$DSIZE_LAMINATE_MINTHICK],8)
*menuelse()
*menustring("        ")
*menuendif()
*menuif([$DSIZE_LAMINATE_MAXTHICK > 0.0])
*menufield(LTMAX,real,[$DSIZE_LAMINATE_MAXTHICK],8)
*menuelse()
*menustring("        ")
*menuendif()
*menufield(LTSET,entity,$DSIZE_LAMINATE_LTSET,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(LTEXC,string,$DSIZE_LAMINATE_LTEXC,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)      
*menulineend()
*menuendif()
*menuoption(PLYTHK,$DSIZE_PLYTHK)
*menucase(0)
*menucase(1)
*menuoptionenum("Ply Thickness Options",$DSIZE_PLYTHK_OPT,DSIZE_PLYTHK_OPTIONS)
*menucase(1)
*menustring("        ")
*menustring("PLYTHK  ")
*menustring("ALL     ")
*menufield(PTMIN,real,$DSIZE_PLYTHK_PTMIN,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)
*menufield(PTMAX,real,$DSIZE_PLYTHK_PTMAX,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)
*menufield(PTOPT,string,$DSIZE_PLYTHK_PTOPT,8)
*menulegalvalue("        ") 
*menulegalvalue(BYANG)
*menulegalvalue(BYSET)
*menulegalvalue(BYPLY)
*menufield(PTSET,entity,$DSIZE_PLYTHK_PTSET,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PTEXC,string,$DSIZE_PLYTHK_PTEXC,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)
*menulineend()
*menucase(2)
*beginrepeat($DSIZE_NUMBER_OF_PLYTHK)
*menustring("        ")
*menustring("PLYTHK  ")
*menufield(TANGLE,arrayofstring,$DSIZE_PLYTHK_TANGLE_ARRAY,8)
*menufield(PTMIN,arrayofstring,$DSIZE_PLYTHK_PTMIN_ARRAY,8)
*menufield(PTMAX,arrayofstring,$DSIZE_PLYTHK_PTMAX_ARRAY,8)
*menustring("BYANG   ")
*menufield(PTSET,arrayofentity,$DSIZE_PLYTHK_PTSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PTEXC,arrayofstring,$DSIZE_PLYTHK_PTEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)              
*menulineend()
*endrepeat()
*menucase(3)
*beginrepeat($DSIZE_NUMBER_OF_PLYTHK)
*menustring("        ")
*menustring("PLYTHK  ")
*menufield(TSET,arrayofentity,$DSIZE_PLYTHK_PLYSET_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)            
*menufield(PTMIN,arrayofstring,$DSIZE_PLYTHK_PTMIN_ARRAY,8)
*menufield(PTMAX,arrayofstring,$DSIZE_PLYTHK_PTMAX_ARRAY,8)
*menustring("BYSET   ")
*menufield(PTSET,arrayofentity,$DSIZE_PLYTHK_PTSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PTEXC,arrayofstring,$DSIZE_PLYTHK_PTEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)              
*menulineend()
*endrepeat()
*menucase(4)
*beginrepeat($DSIZE_NUMBER_OF_PLYTHK)
*menustring("        ")
*menustring("PLYTHK  ")
*menufield(TPLYID,arrayofentity,$DSIZE_PLYTHK_PLYID_ARRAY,8)
*menuentitytype(plies)
*menufield(PTMIN,arrayofstring,$DSIZE_PLYTHK_PTMIN_ARRAY,8)
*menufield(PTMAX,arrayofstring,$DSIZE_PLYTHK_PTMAX_ARRAY,8)
*menustring("BYPLY   ")
*menufield(PTSET,arrayofentity,$DSIZE_PLYTHK_PTSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PTEXC,arrayofstring,$DSIZE_PLYTHK_PTEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)              
*menulineend()             
*endrepeat()
*menuoptionend()
*menuoptionend()
*menuoption(PLYPCT,$DSIZE_PLYPCT)
*menucase(0)
*menucase(1)
*menuoptionenum("Ply Percentage Options",$DSIZE_PLYPCT_OPT,DSIZE_PLYPCT_OPTIONS)
*menucase(1)
*menustring("        ")
*menustring("PLYPCT  ")
*menustring("ALL     ")            
*menufield(PPMIN,real,$DSIZE_PLYPCT_PPMIN,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)
*menurestrictedvalue(<,1.0)
*menufield(PPMAX,real,$DSIZE_PLYPCT_PPMAX,8)
*menudefaultvalue("        ")
*menurestrictedvalue(>,0.0)
*menurestrictedvalue(<,1.0)
*menufield(PPOPT,string,$DSIZE_PLYPCT_PPOPT,8)
*menulegalvalue("        ") 
*menulegalvalue(BYANG)
*menulegalvalue(BYSET)
*menulegalvalue(BYPLY)            
*menufield(PPSET,entity,$DSIZE_PLYPCT_PPSET,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PPEXC,string,$DSIZE_PLYPCT_PPEXC,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)            
*menulineend()
*menucase(2)
*beginrepeat($DSIZE_NUMBER_OF_PLYPCT)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()     
*menustring("        ")
*menustring("PLYPCT  ")
*menufield(PANGLE,arrayofstring,$DSIZE_PLYPCT_PANGLE_ARRAY,8)
*menufield(PPMIN,arrayofstring,$DSIZE_PLYPCT_PPMIN_ARRAY,8)
*menufield(PPMAX,arrayofstring,$DSIZE_PLYPCT_PPMAX_ARRAY,8)
*menustring("BYANG   ")            
*menufield(PPSET,arrayofentity,$DSIZE_PLYPCT_PPSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PPEXC,arrayofstring,$DSIZE_PLYPCT_PPEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)               
*menulineend()
*endrepeat()
*menucase(3)
*beginrepeat($DSIZE_NUMBER_OF_PLYPCT)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()     
*menustring("        ")
*menustring("PLYPCT  ")
*menufield(PSET,arrayofentity,$DSIZE_PLYPCT_PLYSET_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)            
*menufield(PPMIN,arrayofstring,$DSIZE_PLYPCT_PPMIN_ARRAY,8)
*menufield(PPMAX,arrayofstring,$DSIZE_PLYPCT_PPMAX_ARRAY,8)
*menustring("BYSET   ")            
*menufield(PPSET,arrayofentity,$DSIZE_PLYPCT_PPSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PPEXC,arrayofstring,$DSIZE_PLYPCT_PPEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)               
*menulineend()            
*endrepeat()
*menucase(4)
*beginrepeat($DSIZE_NUMBER_OF_PLYPCT)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()     
*menustring("        ")
*menustring("PLYPCT  ")
*menufield(PPLYID,arrayofentity,$DSIZE_PLYPCT_PLYID_ARRAY,8)
*menuentitytype(plies)
*menufield(PPMIN,arrayofstring,$DSIZE_PLYPCT_PPMIN_ARRAY,8)
*menufield(PPMAX,arrayofstring,$DSIZE_PLYPCT_PPMAX_ARRAY,8)
*menustring("BYPLY   ")            
*menufield(PPSET,arrayofentity,$DSIZE_PLYPCT_PPSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PPEXC,arrayofstring,$DSIZE_PLYPCT_PPEXC_ARRAY,8)
*menulegalvalue("        ") 
*menulegalvalue(NONE)
*menulegalvalue(CORE)
*menulegalvalue(CONST)
*menulegalvalue(BOTH)               
*menulineend()            
*endrepeat()          
*menuoptionend()
*menuoptionend()
*menuoption(BALANCE,$DSIZE_BALANCE)
*menucase(0)
*menucase(1)
*menuoptionenum("Balance Constraints Options",$DSIZE_BALANCE_OPT,DSIZE_BALANCE_OPTIONS)
*menucase(1)    
*beginrepeat($DSIZE_NUMBER_OF_BALANCE)
*menustring("        ")
*menustring("BALANCE ")
*menufield(BANGLE1,arrayofreal,$DSIZE_BALANCE_BANGLE1,8)
*menufield(BANGLE2,arrayofreal,$DSIZE_BALANCE_BANGLE2,8)
*menustring("        ")
*menustring("BYANG   ")            
*menulineend()
*endrepeat()
*menucase(2)    
*beginrepeat($DSIZE_NUMBER_OF_BALANCE)
*menustring("        ")
*menustring("BALANCE ")
*menufield(BSET1,arrayofentity,$DSIZE_BALANCE_PLYSET1_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)             
*menufield(BSET2,arrayofentity,$DSIZE_BALANCE_PLYSET2_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)             
*menustring("        ")
*menustring("BYSET   ")            
*menulineend()
*endrepeat()
*menucase(3)    
*beginrepeat($DSIZE_NUMBER_OF_BALANCE)
*menustring("        ")
*menustring("BALANCE ")
*menufield(BPLYID1,arrayofentity,$DSIZE_BALANCE_PLYID1_ARRAY,8)
*menuentitytype(plies)
*menufield(BPLYID2,arrayofentity,$DSIZE_BALANCE_PLYID2_ARRAY,8)
*menuentitytype(plies)
*menustring("        ")
*menustring("BYPLY   ")            
*menulineend()
*endrepeat() 
*menuoptionend()    
*menuoptionend()
*menuoption(CONST,$DSIZE_CONST)
*menucase(0)
*menucase(1)
*menuoptionenum("Constant Constraints Options",$DSIZE_CONST_OPT,DSIZE_CONST_OPTIONS)
*menucase(1)     
*beginrepeat($DSIZE_NUMBER_OF_CONST)
*menustring("        ")
*menustring("CONST   ")
*menufield(CANGLE,arrayofreal,$DSIZE_CONST_CANGLE,8)
*menufield(CTHICK,arrayofreal,$DSIZE_CONST_CTHICK,8)
*menurestrictedvalue(>,0.0)
*menustring("        ")
*menustring("BYANG   ")
*menulineend()
*endrepeat()
*menucase(2)     
*beginrepeat($DSIZE_NUMBER_OF_CONST)
*menustring("        ")
*menustring("CONST   ")
*menufield(CSET,arrayofentity,$DSIZE_CONST_PLYSET_ARRAY,8)
*menuentitytype(sets)
*menuentitysubtype(plies)
*menufield(CTHICK,arrayofreal,$DSIZE_CONST_CTHICK,8)
*menurestrictedvalue(>,0.0)
*menustring("        ")
*menustring("BYSET   ")
*menulineend()
*endrepeat()
*menucase(3)     
*beginrepeat($DSIZE_NUMBER_OF_CONST)
*menustring("        ")
*menustring("CONST   ")
*menufield(CPLYID,arrayofentity,$DSIZE_CONST_PLYID_ARRAY,8)
*menuentitytype(plies)
*menufield(CTHICK,arrayofreal,$DSIZE_CONST_CTHICK,8)
*menurestrictedvalue(>,0.0)
*menustring("        ")
*menustring("BYPLY   ")
*menulineend()
*endrepeat()     
*menuoptionend()    
*menuoptionend()
*menuoption(PLYPDRP,$DSIZE_PLYDRP)
*menucase(0)
*menucase(1)
*menuoptionenum("Ply Drop-off Options",$DSIZE_PLYDRP_OPT,DSIZE_PLYDRP_OPTIONS)
*menucase(1)
		 *beginrepeat($DSIZE_NUMBER_OF_PLYDRP)
*menustring("        ")
*menustring("PLYDRP  ")
*menustring("ALL     ")            
*menufield(PDTYP,arrayofstring,$DSIZE_PLYDRP_PDTYP,8)
*menulegalvalue(TOTDRP)
*menufield(PDMAX,arrayofstring,$DSIZE_PLYDRP_PDMAX,8)
*menufield(PDOPT,arrayofstring,$DSIZE_PLYDRP_PDOPT,8)
*menulegalvalue("        ") 
*menulegalvalue(BYANG)
*menulegalvalue(BYSET)
*menulegalvalue(BYPLY)            
*menufield(PDSET,arrayofentity,$DSIZE_PLYDRP_PDSET,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PDEXC,arrayofstring,$DSIZE_PLYDRP_PDEXC,8)
*menulegalvalue("        ")         
*menulegalvalue(NONE)  
*menulegalvalue(CORE)              
*menulegalvalue(CONST)
*menulegalvalue(BOTH)           
*menulineend()
		  *endrepeat()
*menucase(2)
*beginrepeat($DSIZE_NUMBER_OF_PLYDRP)
*menustring("        ")
*menustring("PLYDRP  ")
*menufield(PANGLE,arrayofstring,$DSIZE_PLYPDRP_PANGLE_ARRAY,8)
*menufield(PDTYP,arrayofstring,$DSIZE_PLYDRP_PDTYP_ARRAY,8)
*menulegalvalue(TOTDRP)
*menufield(PDMAX,arrayofstring,$DSIZE_PLYDRP_PDMAX_ARRAY,8)
*menustring("BYANG   ")
*menufield(PDSET,arrayofentity,$DSIZE_PLYDRP_PDSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PDEXC,arrayofstring,$DSIZE_PLYDRP_PDEXC_ARRAY,8)
*menulegalvalue("        ")         
*menulegalvalue(NONE)  
*menulegalvalue(CORE)              
*menulegalvalue(CONST)
*menulegalvalue(BOTH)              
*menulineend()
*endrepeat()
*menucase(3)
*beginrepeat($DSIZE_NUMBER_OF_PLYDRP)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()     
*menustring("        ")
*menustring("PLYDRP  ")
*menufield(PSET,arrayofentity,$DSIZE_PLYDRP_PLYSET_ARRAY,8)
*menuentitytype(sets)    
*menuentitysubtype(plies)              
*menufield(PDTYP,arrayofstring,$DSIZE_PLYDRP_PDTYP_ARRAY,8)
*menulegalvalue(TOTDRP)
*menufield(PDMAX,arrayofstring,$DSIZE_PLYDRP_PDMAX_ARRAY,8)
*menustring("BYSET   ")            
*menufield(PDSET,arrayofentity,$DSIZE_PLYDRP_PDSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PDEXC,arrayofstring,$DSIZE_PLYDRP_PDEXC_ARRAY,8)
*menulegalvalue("        ")         
*menulegalvalue(NONE)  
*menulegalvalue(CORE)              
*menulegalvalue(CONST)
*menulegalvalue(BOTH)               
*menulineend()            
*endrepeat()
*menucase(4)
*beginrepeat($DSIZE_NUMBER_OF_PLYDRP)
*repeatcounter(1)
*menuif([counter1 ==1000000000])
*menulineend()
*menuendif()     
*menustring("        ")
*menustring("PLYDRP  ")
*menufield(PLYID,arrayofentity,$DSIZE_PLYDRP_PLYID_ARRAY,8)
*menuentitytype(plies)
*menufield(PDTYP,arrayofstring,$DSIZE_PLYDRP_PDTYP_ARRAY,8)
*menulegalvalue(TOTDRP)
*menufield(PDMAX,arrayofstring,$DSIZE_PLYDRP_PDMAX_ARRAY,8)
*menustring("BYPLY   ")            
*menufield(PDSET,arrayofentity,$DSIZE_PLYDRP_PDSET_ARRAY,8)
*menudefaultvalue("        ")
*menuentitytype(sets)
*menuentitysubtype(elements)
*menufield(PDEXC,arrayofstring,$DSIZE_PLYDRP_PDEXC_ARRAY,8)
*menulegalvalue("        ")         
*menulegalvalue(NONE)  
*menulegalvalue(CORE)              
*menulegalvalue(CONST)
*menulegalvalue(BOTH)             
*menulineend()            
*endrepeat() 
*menuoptionend()    
*menuoptionend()
*menulineend()
*menuendif()
// composite shuffle vars
*menuif([config == 102])
*menustring("DSHUFFLE") 
*menufield(ID,integer,id,8)
*menuif([designable == 1])
*menustring("STACK  ")
*menuif([componentlistmax > 0])
*menuvariableset(variable1,1)
*beginrepeat(componentlistmax)
*repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,componentlist,counter1-1)
*menufield(EID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==6])
*menuif([variable1 != componentlistmax])
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuendif()     
*menuendif()
*menuif([designable == 2])
*menustring("PCOMP   ")
*menuif([componentlistmax > 0])
*menuvariableset(variable1,1)
*beginrepeat(componentlistmax)
*repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,componentlist,counter1-1)
*menufield(EID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==6])
*menuif([variable1 != componentlistmax])
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuendif()
*menuendif()
*menuoption(MAXSUCC,$DSHUFFLE_MAXSUCC)
*menucase(0)
*menucase(1)
*menuoptionenum("Successive Plies Options",$DSHUFFLE_MAXSUCC_OPT,DSHUFFLE_MAXSUCC_OPTIONS)
*menucase(1)
*menustring("        ")
*menustring("MAXSUCC ")
*menustring("ALL     ")
*menufield(MSUCC,integer,$DSHUFFLE_MSUCC,8)
*menurestrictedvalue(>,0)
*menufield(VSUCC,real,$DSHUFFLE_VSUCC,8)
*menudefaultvalue("        ")
*menuinitialvalue(1.0)
*menulineend()
*menucase(2)
*beginrepeat($DSHUFFLE_NUMBER_OF_MAXSUCC)
*menustring("        ")
*menustring("MAXSUCC ")
*menufield(MANGLE,arrayofreal,$DSHUFFLE_MANGLE_ARRAY,8)
*menufield(MSUCC,arrayofinteger,$DSHUFFLE_MSUCC_ARRAY,8)
*menufield(VSUCC,arrayofstring,$DSHUFFLE_VSUCC_ARRAY,8)
*menulineend()
*endrepeat()
*menuoptionend()
*menuoptionend()
*menuif([type > 0])
*menustring("        ")
*menustring("  PAIR  ")
*menufield(PANGLE1,real,upperbound,8)
*menufield(PANGLE2,real,lowerbound,8)
*menuattributecreate($blank," ")
*menuif([xtype == 1])
*menuattributeset($blank,"SAME")
*menufield(POPT,string,[$blank],8)
*menuendif()
*menuif([xtype == 2])
*menuattributeset($blank,"REVERSE")
*menufield(POPT,string,[$blank],8)
*menuendif()
*menulineend()
*menuendif()
*menuoption(CORE,$DSHUFFLE_CORE)
*menucase(0)
*menucase(1)
*menustring("        ")
*menustring("  CORE  ")
*menufield(CREP,integer,$DSHUFFLE_CREP,8)
*menuinitialvalue(1.0)
*menurestrictedvalue(>,0)
*menuvariableset(variable1,0)
*beginrepeat($NUMBER_OF_CANG)
*repeatwrap(72)
*repeatcounter(1)
*menufield(CANG,arrayofreal,$DSHUFFLE_CANGLE,8)
*menuvariableset(variable1,[variable1+1])
*menuif([(variable1 % 6) == 0])
*menuif([variable1 != $NUMBER_OF_CANG])
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*endrepeat()
*menuoptionend()
*menulineend()
*menuoption(COVER,$DSHUFFLE_COVER)
*menucase(0)
*menucase(1)
*menustring("        ")
*menustring("  COVER ")
*menufield(VREP,integer,$DSHUFFLE_VREP,8)
*menuinitialvalue(1.0)
*menurestrictedvalue(>,0)
*menuvariableset(variable1,0)
*beginrepeat($NUMBER_OF_VANG)
*repeatwrap(72)
*repeatcounter(1)
*menufield(VANG,arrayofreal,$DSHUFFLE_VANGLE,8)
*menuvariableset(variable1,[variable1+1])
*menuif([(variable1 % 6) == 0])
*menuif([variable1 != $NUMBER_OF_VANG])
*menustring("        ")
*menustring("        ")
*menustring("        ")
*menuendif()
*menuendif()
*endrepeat()
*menuoptionend()
*menulineend()
*menuendif()
*endmenu()
*format()
*if([@writehmcomments()])
*string("$HMNAME DESVARS ")
*field(integer,id,8)
*endif()
// topology vars
*if([config == 108])
*if([@writehmcomments()])
*fieldleft(string,name,0)
*end()
*endif()
*string("DTPL    ")
*fieldleft(integer,id,8)
*if([designable == 1])
*string("PSHELL  ")
*endif()
*if([designable == 2])
*string("PSOLID  ")
*endif()
*if([designable == 3])
*string("PCOMP   ")
*endif()
*if([designable == 4])
*string("PBAR    ")
*endif()
*if([designable == 5])
*string("PROD    ")
*endif()
*if([designable == 6])
*string("PWELD   ")
*endif()
*if([designable == 7])
*string("PBUSH   ")
*endif()
*if([designable == 8])
*string("PBARL   ")
*endif()  
*if([designable == 9])
*string("PBEAM   ")
*endif()
*if([designable == 10])
*string("PBEAML  ")
*endif()    
*variableset(variable1,1)
*loopif([variable1 <= componentlistmax])
*pointerset(pointer1,componentlist,[variable1-1])
*fieldleft(integer,pointer1.pointervalue,8)
*if([(variable1%7)==6])
*end()
*if([variable1 != componentlistmax])
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*endloop()
*if([(componentlistmax%7) != 6])
*end()
*endif()
*if([boundaryskip != 2])
*if([lowerbound > 0.0])
*string("+       ")
*string("MEMBSIZ ")
*fieldleft(real,lowerbound,8)
*if([upperbound > 0.0])
*fieldleft(real,upperbound,8)
*if([mingap > 0.0])
*fieldright(real,mingap,8)
*else()
*string("        ")
*endif()
*endif()
*end()
*endif()
*if([initialvalue > 0.0])
*string("+       ")
*string("STRESS  ")
*fieldleft(real,initialvalue,8)
*end()
*endif()
*if([ytype > 0])
*string("+       ")
*string("MESHTYP ")
*if([ytype == 2])
*string("ALIGN   ")
*endif()
*end()
*endif()
*if([minimumwidth == 1.0 || minimumwidth == 2.0])
*string("+       ")
*string("FATIGUE ")
*if([minimumwidth == 1.0])
*string("DAMAGE  ")
*endif()
*if([minimumwidth == 2.0])
*string("LIFE    ")
*endif()
*field(real,drawangle,8)
*end()
*endif()    
*if([basethickness > 0.0])
*string("+       ")
*string("TMIN    ")
*field(real,basethickness,8)
*end()
*endif()
*if([type > 0])
*string("+       ")
*string("PATRN   ")
*field(integer,type,8)
*if([type != 9])
*if([anchorpointid != 0])
*field(integer,anchorpointid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_SymmetryAnchorX],8)
*field(real,[$TPL_SymmetryAnchorY],8)
*field(real,[$TPL_SymmetryAnchorZ],8)
*endif()
*if([firstgridid != 0])
*field(integer,firstgridid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_SymmetryFirstGridX],8)
*field(real,[$TPL_SymmetryFirstGridY],8)
*field(real,[$TPL_SymmetryFirstGridZ],8)
*endif()
*end()
*if([((type > 1) && (type != 10)) || ((type == 10) && (bufferzone > 0))])
*string("+       ")
*string("        ")
*if([bufferzone > 0])
*field(integer,bufferzone,8)
*else()
*string("        ") 
*endif()    
*if([type != 10])
*if([secondgridid != 0])
*field(integer,secondgridid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_SymmetrySecondGridX],8)
*field(real,[$TPL_SymmetrySecondGridY],8)
*field(real,[$TPL_SymmetrySecondGridZ],8)
*endif()
*endif()
*end()
*endif()
*else()
*end()
*endif()
*endif()
*if([xorder > 0])
*string("+       ")
*string("DRAW    ")
*if([xorder == 1])
*string("SINGLE  ")
*else()
*string("SPLIT   ")
*endif()                 
*if([$TPL_DrawAnchorNodeId != 0])
*field(integer,[$TPL_DrawAnchorNodeId],8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_DrawAnchorX],8)
*field(real,[$TPL_DrawAnchorY],8)
*field(real,[$TPL_DrawAnchorZ],8)
*endif()
*if([$TPL_DrawFirstGridId != 0])
*field(integer,[$TPL_DrawFirstGridId],8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_DrawFirstGridX],8)
*field(real,[$TPL_DrawFirstGridY],8)
*field(real,[$TPL_DrawFirstGridZ],8)
*endif()
*end()
*if([drawheight > 0.0])
*string("+       ")
*string("NOHOLE  ")        
fieldright(real,drawheight,8)
string("       1")
*end()
*endif()
*if([(delxv > 0.0) && (xorder == 1)])
*string("+       ")
*string("STAMP   ")        
*fieldright(real,delxv,8)
*end()
*endif()      
*endif()
*variableset(variable2,[@attributearraylength($TPL_ObstComponentList)])
*if([variable2 > 0])
*variableset(variable1,1)
*variableset(variable4,0)
*counterset(counter1,1)
*loopif([variable1 <= variable2])
*variableset(variable3,[@attributearrayvalue($TPL_ObstComponentList,counter1)])
*if([variable3 > 0])
*if([variable4 == 0])
*string("+       ")
*string("OBST    ")
*endif()
*field(integer,[@attributearrayvalue($TPL_ObstComponentList,counter1)],8)
*variableset(variable4,[variable4+1])
*endif()
*if([(variable4 % 7) == 0])
*if([variable4 < variable2])
*end()
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*counterinc(counter1)
*endloop()
*end()
*endif()
*if([xtype > 0])
*string("+       ")
*string("EXTR    ")
*if([xtype == 1])
*string("NOTWIST ")
*endif()
*if([xtype == 2])
*string("TWIST   ")
*endif()
*end()
*uservariableset(#tpl_num_primary_nodes,[@attributearraylength($TPL_PrimaryNodeList)])
*counterset(counter1,1)
*loopif([counter1 <= #tpl_num_primary_nodes])
*if([counter1 == 1])
*string("+       ")
*string("EPATH1  ")
*endif()
*field(integer,[@attributearrayvalue($TPL_PrimaryNodeList,counter1)],8)
*if([(counter1%7)==0])
*if([counter1 < #tpl_num_primary_nodes])
*end()
*string("+       ")
*string("        ")
*endif()
*endif()
*counterinc(counter1)
*endloop()
*end()
*uservariableset(#tpl_num_secondary_nodes,[@attributearraylength($TPL_SecondaryNodeList)])
*counterset(counter1,1)
*loopif([counter1 <= #tpl_num_secondary_nodes])
*if([counter1 == 1])
*string("+       ")
*string("EPATH2  ")
*endif()
*field(integer,[@attributearrayvalue($TPL_SecondaryNodeList,counter1)],8)
*if([(counter1%7)==0])
*if([counter1 < #tpl_num_secondary_nodes])
*end()
*string("+       ")
*string("        ")
*endif()
*endif()
*counterinc(counter1)
*endloop()
*end()
*endif()
*endif()
*if([boundaryskip == 1])
*string("+       ")
*string("MASTER  ")
*end()
*endif()  
*if([boundaryskip == 2])
*string("+       ")
*string("SLAVE   ")
*field(integer,shapedesignvariable,8)
*fieldright(real,[$TPL_RptnScaleX],8)
*fieldright(real,[$TPL_RptnScaleY],8)
*fieldright(real,[$TPL_RptnScaleZ],8)
*end()
*endif()
*if([boundaryskip > 0])
*string("+       ")
*string("COORD   ")
*if([$TPL_RptnSysFlag == 0])  
*field(integer,0,8)
*else()
*field(integer,[$TPL_RptnSysId],8)
*endif()  
*if([$TPL_RptnAnchorNodeId != 0])
*field(integer,[$TPL_RptnAnchorNodeId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnAnchorX],8)
*fieldright(real,[$TPL_RptnAnchorY],8)
*fieldright(real,[$TPL_RptnAnchorZ],8)
*endif()
*if([$TPL_RptnSysFlag != 0])
*end()  
*endif()
*if([$TPL_RptnSysFlag == 0])
*if([$TPL_RptnFirstGridId != 0])
*field(integer,[$TPL_RptnFirstGridId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnFirstGridX],8)
*fieldright(real,[$TPL_RptnFirstGridY],8)
*fieldright(real,[$TPL_RptnFirstGridZ],8)
*endif()
*end()    
*string("+       ")
*string("        ")
*string("        ")
*if([$TPL_RptnSecondGridId != 0])
*field(integer,[$TPL_RptnSecondGridId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnSecondGridX],8)
*fieldright(real,[$TPL_RptnSecondGridY],8)
*fieldright(real,[$TPL_RptnSecondGridZ],8)
*endif()
*if([$TPL_RptnThirdGridId != 0])
*field(integer,[$TPL_RptnThirdGridId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnThirdGridX],8)
*fieldright(real,[$TPL_RptnThirdGridY],8)
*fieldright(real,[$TPL_RptnThirdGridZ],8)
*endif()  
*end()
*endif()
*endif()  
*endif()
// gauge vars
*if([config == 103])
*if([@writehmcomments()])
*fieldleft(string,name,0)
*end()
*endif()
*string("$GAUGE  ")
*field(integer,componentlistmax,8)
*uservariableset(#optigaugedesvar1,1)
*uservariableset(#optigaugedesvar2,8)
*if([componentlistmax > 0])
*loopif([#optigaugedesvar1 <= componentlistmax])
*pointerset(pointer1,componentlist,[#optigaugedesvar1 - 1])
*field(integer,pointer1.pointervalue,8)
*uservariableset(#optigaugedesvar1,[#optigaugedesvar1+1])
*uservariableset(#optigaugedesvar2,[#optigaugedesvar2+8])
*if([#optigaugedesvar2 == 64])
*end()
*string("$       ")
*uservariableset(#optigaugedesvar2,8)
*endif()
*endloop()
*endif()
*end()
*endif()
*if([config == 115])
*if([@writehmcomments()])
*fieldleft(string,name,0)
*end()
*endif()
*endif()
*if([(config == 103) || (config == 115)])
*string("DESVAR  ") 
*field(integer,id,8)
*if([@stringstartswithnumericcharacter(name)])
*if([config == 103])
*string("g")
*else()
*string("s")
*endif()
*fieldleft(string,name,7)
*else()
*field(string,name,8)
*endif()
*field(real,initialvalue,8)
*field(real,lowerbound,8)
*field(real,upperbound,8)
*if([delxv == -1.0])
*string("        ")
*else()
*field(real,delxv,8)
*endif()
*if([type > 0])
*field(integer,type,8)
*endif()  
*end()
*endif()
// topography vars
*if([config == 116])
*if([@writehmcomments()])
*fieldleft(string,name,0)
*end()
*endif() 
*string("DTPG    ")
*field(integer,id,8)
*if([shapedesignvariable != 0])
*string("DVGRID  ")
*else()
*pointerset(pointer1,componentlist,0)
*if([property == 1])
*string("PSHELL  ")
*else()
*if([property == 2])
*string("PCOMP   ")
*endif()
*endif()
*endif()
*if([shapedesignvariable != 0])
*field(integer,shapedesignvariable,8)
*end()
*else()
*if([componentlistmax > 0])
*variableset(variable1,1)
*loopif([variable1 <= componentlistmax])
*pointerset(pointer1,componentlist,[variable1-1])
*fieldleft(integer,pointer1.pointervalue,8)
*if([(variable1%7)==6])
*end()
*if([variable1 != componentlistmax])
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*endloop()
*if([(componentlistmax%7) != 6])
*end()
*endif()
*endif()
*endif()
*if([(shapedesignvariable == 0) && (componentlistmax == 0)])
*end()
*endif()
*if([ytype != 2])    
*if([minimumwidth > 0.0])
*string("+       ")
*field(real,minimumwidth,8)
*field(real,drawangle,8)
*if([bufferzone == 0])
*string("NO      ")
*else()
*string("YES     ")
*endif()
*if([shapedesignvariable == 0])
*field(real,drawheight,8)
*else()
*string("        ")
*endif()
*if([shapedesignvariable == 0])
*if([designable==0])
*string("NORM    ")
*string("        ")
*string("        ")
*endif()
*if([designable==1])
*field(real,basethickness,8)
*field(real,designthickness,8)
*field(real,delxv,8)
*endif()
*else()
*string("        ")
*string("        ")
*string("        ")
*endif()
*if([shapedesignvariable == 0])
*if([(boundaryskip == 3) || (boundaryskip == 121)])
*string("BOTH    ")
*endif()
*if([(boundaryskip == 2) || (boundaryskip == 122)])
*string("LOAD    ")
*endif()
*if([(boundaryskip == 1) || (boundaryskip == 123)])
*string("SPC     ")
*endif()
*if([(boundaryskip == 0) || (boundaryskip == 124)])
*string("NONE    ")
*endif()
*else()
*string("        ")
*endif()
*end()
*endif()
*if([type > 0])
*string("+       ")
*string("PATRN   ")
*field(integer,type,8)
*if([anchorpointid != 0])
*field(integer,anchorpointid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPG_SymmetryAnchorX],8)
*field(real,[$TPG_SymmetryAnchorY],8)
*field(real,[$TPG_SymmetryAnchorZ],8)
*endif()
*if([firstgridid != 0])
*field(integer,firstgridid,8)
*string("        ")
*string("        ")
*else()
*if([type != 7])
*field(real,[$TPG_SymmetryNormalX],8)
*field(real,[$TPG_SymmetryNormalY],8)
*field(real,[$TPG_SymmetryNormalZ],8)
*endif()
*endif()
*end()
*endif()
*if([type >= 20])
*string("+       ")
*string("PATRN2  ")
*field(integer,xorder,8)
*if([secondgridid != 0])
*field(integer,secondgridid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPG_SecondGridX],8)
*field(real,[$TPG_SecondGridY],8)
*field(real,[$TPG_SecondGridZ],8)
*endif()
*end()
*endif()
*if([yorder > 0])
*string("+       ")
*string("BOUNDS  ")
*field(real,lowerbound,8)
*field(real,upperbound,8)
*if([yorder == 2])
*field(real,initialvalue,8)
*endif()
*end()
*endif()
*endif()
*if([ytype == 1])
*string("+       ")
*string("MASTER  ")
*end()
*endif()  
*if([ytype == 2])
*string("+       ")
*string("SLAVE   ")
*field(integer,[$TPG_MasterDesvar],8)
*fieldright(real,[$TPL_RptnScaleX],8)
*fieldright(real,[$TPL_RptnScaleY],8)
*fieldright(real,[$TPL_RptnScaleZ],8)
*end()
*endif()
*if([ytype > 0])
*string("+       ")
*string("COORD   ")
*if([$TPL_RptnSysFlag == 0])  
*field(integer,0,8)
*else()
*field(integer,[$TPL_RptnSysId],8)
*endif()  
*if([$TPL_RptnAnchorNodeId != 0])
*field(integer,[$TPL_RptnAnchorNodeId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnAnchorX],8)
*fieldright(real,[$TPL_RptnAnchorY],8)
*fieldright(real,[$TPL_RptnAnchorZ],8)
*endif()
*if([$TPL_RptnSysFlag != 0])
*end()  
*endif()
*if([$TPL_RptnSysFlag == 0])
*if([$TPL_RptnFirstGridId != 0])
*field(integer,[$TPL_RptnFirstGridId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnFirstGridX],8)
*fieldright(real,[$TPL_RptnFirstGridY],8)
*fieldright(real,[$TPL_RptnFirstGridZ],8)
*endif()
*end()    
*string("+       ")
*string("        ")
*string("        ")
*if([$TPL_RptnSecondGridId != 0])
*field(integer,[$TPL_RptnSecondGridId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnSecondGridX],8)
*fieldright(real,[$TPL_RptnSecondGridY],8)
*fieldright(real,[$TPL_RptnSecondGridZ],8)
*endif()
*if([$TPL_RptnThirdGridId != 0])
*field(integer,[$TPL_RptnThirdGridId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnThirdGridX],8)
*fieldright(real,[$TPL_RptnThirdGridY],8)
*fieldright(real,[$TPL_RptnThirdGridZ],8)
*endif()  
*end()
*endif()
*endif()
*endif()
// free size vars
*if([config == 122])
*if([@writehmcomments()])
*fieldleft(string,name,0)
*end()
*endif()
*string("DSIZE   ")
*fieldleft(integer,id,8)
*if([designable == 1])
*string("PSHELL  ")
*endif()
*if([designable == 3])
*string("PCOMP   ")
*endif()
*if([designable == 4])
*string("STACK   ")
*endif()
*variableset(variable1,1)
*loopif([variable1 <= componentlistmax])
*pointerset(pointer1,componentlist,[variable1-1])
*fieldleft(integer,pointer1.pointervalue,8)
*if([(variable1%7)==6])
*end()
*if([variable1 != componentlistmax])
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*endloop()
*if([componentlistmax > 0])
*if([(componentlistmax%7) != 6])
*end()
*endif()
*endif()
*if([boundaryskip != 2])
*if([lowerbound > 0.0])
*string("+       ")
*string("MEMBSIZ ")
*fieldleft(real,lowerbound,8)
*if([upperbound > 0.0])
*fieldleft(real,upperbound,8)
*endif()
*end()
*endif()
*if([initialvalue > 0.0])
*string("+       ")
*string("STRESS  ")
*fieldleft(real,initialvalue,8)
*end()
*endif()
*if([minimumwidth == 1.0 || minimumwidth == 2.0])
*string("+       ")
*string("FATIGUE ")
*if([minimumwidth == 1.0])
*string("DAMAGE  ")
*endif()
*if([minimumwidth == 2.0])
*string("LIFE    ")
*endif()
*field(real,drawangle,8)
*end()
*endif()
*endif()
*if([type > 0])
*string("+       ")
*string("PATRN   ")
*field(integer,type,8)
*if([anchorpointid != 0])
*field(integer,anchorpointid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_SymmetryAnchorX],8)
*field(real,[$TPL_SymmetryAnchorY],8)
*field(real,[$TPL_SymmetryAnchorZ],8)
*endif()
*if([firstgridid != 0])
*field(integer,firstgridid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_SymmetryFirstGridX],8)
*field(real,[$TPL_SymmetryFirstGridY],8)
*field(real,[$TPL_SymmetryFirstGridZ],8)
*endif()
*end()
*if([((type > 1) && (type != 10)) || ((type == 10) && (bufferzone > 0))])
*string("+       ")
*string("        ")
*if([bufferzone > 0])
*field(integer,bufferzone,8)
*else()
*string("        ") 
*endif()    
*if([type != 10])
*if([secondgridid != 0])
*field(integer,secondgridid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_SymmetrySecondGridX],8)
*field(real,[$TPL_SymmetrySecondGridY],8)
*field(real,[$TPL_SymmetrySecondGridZ],8)
*endif()
*endif()
*end()
*endif()
*endif()
*if([designable == 1])
*if([(basethickness > 0.0) || (designthickness > 0.0)])
*string("+       ")
*string("THICK   ")
*if([basethickness > 0.0])
*field(real,basethickness,8)
*else()
*string("        ")
*endif()
*if([designthickness > 0.0])
*field(real,designthickness,8)
*endif()
*end()
*endif()
*endif()
*if([boundaryskip == 1])
*string("+       ")
*string("MASTER  ")
*end()
*endif()  
*if([boundaryskip == 2])
*string("+       ")
*string("SLAVE   ")
*field(integer,shapedesignvariable,8)
*fieldright(real,[$TPL_RptnScaleX],8)
*fieldright(real,[$TPL_RptnScaleY],8)
*fieldright(real,[$TPL_RptnScaleZ],8)
*end()
*endif()
*if([boundaryskip > 0])
*string("+       ")
*string("COORD   ")
*if([$TPL_RptnSysFlag == 0])  
*field(integer,0,8)
*else()
*field(integer,[$TPL_RptnSysId],8)
*endif()  
*if([$TPL_RptnAnchorNodeId != 0])
*field(integer,[$TPL_RptnAnchorNodeId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnAnchorX],8)
*fieldright(real,[$TPL_RptnAnchorY],8)
*fieldright(real,[$TPL_RptnAnchorZ],8)
*endif()
*if([$TPL_RptnSysFlag != 0])
*end()  
*endif()
*if([$TPL_RptnSysFlag == 0])
*if([$TPL_RptnFirstGridId != 0])
*field(integer,[$TPL_RptnFirstGridId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnFirstGridX],8)
*fieldright(real,[$TPL_RptnFirstGridY],8)
*fieldright(real,[$TPL_RptnFirstGridZ],8)
*endif()
*end()    
*string("+       ")
*string("        ")
*string("        ")
*if([$TPL_RptnSecondGridId != 0])
*field(integer,[$TPL_RptnSecondGridId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnSecondGridX],8)
*fieldright(real,[$TPL_RptnSecondGridY],8)
*fieldright(real,[$TPL_RptnSecondGridZ],8)
*endif()
*if([$TPL_RptnThirdGridId != 0])
*field(integer,[$TPL_RptnThirdGridId],8)
*string("        ")
*string("        ")
*else()
*fieldright(real,[$TPL_RptnThirdGridX],8)
*fieldright(real,[$TPL_RptnThirdGridY],8)
*fieldright(real,[$TPL_RptnThirdGridZ],8)
*endif()  
*end()
*endif()
*endif()
*if([designable == 3 || designable == 4])
*if([$DSIZE_LAMINATE_MINTHICK > 0.0 || $DSIZE_LAMINATE_MAXTHICK > 0.0])
*string("+       ")
*string("COMP    ")
*string("LAMTHK  ")
*if([$DSIZE_LAMINATE_MINTHICK > 0.0])
*fieldleft(real,[$DSIZE_LAMINATE_MINTHICK],8)
*else()
*string("        ")
*endif()
*if([$DSIZE_LAMINATE_MAXTHICK > 0.0])
*fieldleft(real,[$DSIZE_LAMINATE_MAXTHICK],8)
*else()
*string("        ")
*endif()
*if([@defaultstatus($DSIZE_LAMINATE_LTSET)])
*string("        ")
*else()
*fieldleft(integer,[$DSIZE_LAMINATE_LTSET],8)
*endif()
*fieldleft(string,$DSIZE_LAMINATE_LTEXC,8)
*end()
*endif()
*if([$DSIZE_PLYTHK == 1])
*if([$DSIZE_PLYTHK_OPT == 1])
*string("+       ")
*string("COMP    ")
*string("PLYTHK  ")
*string("ALL     ")
*if([@defaultstatus($DSIZE_PLYTHK_PTMIN)])
*string("        ")
*else()
*fieldleft(real,$DSIZE_PLYTHK_PTMIN,8)
*endif()
*if([@defaultstatus($DSIZE_PLYTHK_PTMAX)])
*string("        ")
*else()
*fieldleft(real,$DSIZE_PLYTHK_PTMAX,8)
*endif()
*fieldleft(string,$DSIZE_PLYTHK_PTOPT,8)
*if([@defaultstatus($DSIZE_PLYTHK_PTSET)])
*string("        ")
*else()
*fieldleft(integer,$DSIZE_PLYTHK_PTSET,8)
*endif()
*fieldleft(string,$DSIZE_PLYTHK_PTEXC,8)
*end()
*endif()
*if([$DSIZE_PLYTHK_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYTHK])
*string("+       ")
*string("COMP    ")
*string("PLYTHK  ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_TANGLE_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMAX_ARRAY,counter1)],8)
*string("BYANG   ")
*if([@defaultstatus($DSIZE_PLYTHK_PTSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PTSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYTHK_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYTHK])
*string("+       ")
*string("COMP    ")
*string("PLYTHK  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PLYSET_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMAX_ARRAY,counter1)],8)
*string("BYSET   ")
*if([@defaultstatus($DSIZE_PLYTHK_PTSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PTSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()   
*if([$DSIZE_PLYTHK_OPT == 4])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYTHK])
*string("+       ")
*string("COMP    ")
*string("PLYTHK  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PLYID_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMAX_ARRAY,counter1)],8)
*string("BYPLY   ")
*if([@defaultstatus($DSIZE_PLYTHK_PTSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PTSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*endif()
*if([$DSIZE_PLYPCT == 1])
*if([$DSIZE_PLYPCT_OPT == 1])
*string("+       ")
*string("COMP    ")
*string("PLYPCT  ")
*string("ALL     ")
*if([@defaultstatus($DSIZE_PLYPCT_PPMIN)])
*string("        ")
*else()
*fieldleft(real,$DSIZE_PLYPCT_PPMIN,8)
*endif()
*if([@defaultstatus($DSIZE_PLYPCT_PPMAX)])
*string("        ")
*else()
*fieldleft(real,$DSIZE_PLYPCT_PPMAX,8)
*endif()
*fieldleft(string,$DSIZE_PLYPCT_PPOPT,8)
*if([@defaultstatus($DSIZE_PLYPCT_PPSET)])
*string("        ")
*else()
*fieldleft(integer,$DSIZE_PLYPCT_PPSET,8)
*endif()
*fieldleft(string,$DSIZE_PLYPCT_PPEXC,8)
*end()
*endif()
*if([$DSIZE_PLYPCT_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYPCT])
*string("+       ")
*string("COMP    ")
*string("PLYPCT  ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PANGLE_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMAX_ARRAY,counter1)],8)
*string("BYANG   ")
*if([@defaultstatus($DSIZE_PLYPCT_PPSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PPSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYPCT_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYPCT])
*string("+       ")
*string("COMP    ")
*string("PLYPCT  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PLYSET_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMAX_ARRAY,counter1)],8)
*string("BYSET   ")   
*if([@defaultstatus($DSIZE_PLYPCT_PPSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PPSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYPCT_OPT == 4])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYPCT])
*string("+       ")
*string("COMP    ")
*string("PLYPCT  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PLYID_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMAX_ARRAY,counter1)],8)
*string("BYPLY   ")   
*if([@defaultstatus($DSIZE_PLYPCT_PPSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PPSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*endif()
*if([$DSIZE_PLYMAN == 1])
*if([$DSIZE_PLYMAN_OPT == 1])
*string("+       ")
*string("COMP    ")
*string("PLYMAN  ")
*string("ALL     ")
*if([@defaultstatus($DSIZE_PLYMAN_PMMAN)])
*string("        ")
*else()
*fieldleft(real,$DSIZE_PLYMAN_PMMAN,8)
*endif()
*string("        ")
*fieldleft(string,$DSIZE_PLYMAN_PMOPT,8)
*if([@defaultstatus($DSIZE_PLYMAN_PMSET)])
*string("        ")
*else()
*fieldleft(integer,$DSIZE_PLYMAN_PMSET,8)
*endif()
*fieldleft(string,$DSIZE_PLYMAN_PMEXC,8)
*end()
*endif()
*if([$DSIZE_PLYMAN_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYMAN])
*string("+       ")
*string("COMP    ")
*string("PLYMAN  ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYMAN_PANGLE_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYMAN_PMMAN_ARRAY,counter1)],8)
*string("        ")
*string("BYANG   ")
*if([@defaultstatus($DSIZE_PLYMAN_PMSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYMAN_PMSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYMAN_PMEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYMAN_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYMAN])
*string("+       ")
*string("COMP    ")
*string("PLYMAN  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYMAN_PLYSET_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYMAN_PMMAN_ARRAY,counter1)],8)
*string("        ")
*string("BYSET   ")   
*if([@defaultstatus($DSIZE_PLYMAN_PMSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYMAN_PMSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYMAN_PMEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYMAN_OPT == 4])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYMAN])
*string("+       ")
*string("COMP    ")
*string("PLYMAN  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYMAN_PLYID_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYMAN_PMMAN_ARRAY,counter1)],8)
*string("        ")
*string("BYPLY   ")   
*if([@defaultstatus($DSIZE_PLYMAN_PMSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYMAN_PMSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYMAN_PMEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*endif()
*if([$DSIZE_BALANCE == 1])
*if([$DSIZE_BALANCE_OPT == 1])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_BALANCE])
*string("+       ")
*string("COMP    ")
*string("BALANCE ")
*fieldleft(real,[@attributearrayvalue($DSIZE_BALANCE_BANGLE1,counter1)],8)
*fieldleft(real,[@attributearrayvalue($DSIZE_BALANCE_BANGLE2,counter1)],8)
*string("        ")
*string("BYANG   ")
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_BALANCE_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_BALANCE])
*string("+       ")
*string("COMP    ")
*string("BALANCE ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_BALANCE_PLYSET1_ARRAY,counter1)],8)
*fieldleft(integer,[@attributearrayvalue($DSIZE_BALANCE_PLYSET2_ARRAY,counter1)],8)
*string("        ")
*string("BYSET   ")
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_BALANCE_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_BALANCE])
*string("+       ")
*string("COMP    ")
*string("BALANCE ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_BALANCE_PLYID1_ARRAY,counter1)],8)
*fieldleft(integer,[@attributearrayvalue($DSIZE_BALANCE_PLYID2_ARRAY,counter1)],8)
*string("        ")
*string("BYPLY   ")
*end()
*counterinc(counter1)
*endloop()
*endif()     
*endif()
*if([$DSIZE_CONST == 1])
*if([$DSIZE_CONST_OPT == 1])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_CONST])
*string("+       ")
*string("COMP    ")
*string("CONST   ")
*fieldleft(real,[@attributearrayvalue($DSIZE_CONST_CANGLE,counter1)],8)
*fieldleft(real,[@attributearrayvalue($DSIZE_CONST_CTHICK,counter1)],8)
*string("        ")
*string("BYANG   ")
*end()
*counterinc(counter1)
*endloop()
*endif()   
*if([$DSIZE_CONST_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_CONST])
*string("+       ")
*string("COMP    ")
*string("CONST   ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_CONST_PLYSET_ARRAY,counter1)],8)
*fieldleft(real,[@attributearrayvalue($DSIZE_CONST_CTHICK,counter1)],8)
*string("        ")
*string("BYSET   ")
*end()
*counterinc(counter1)
*endloop()
*endif() 
*if([$DSIZE_CONST_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_CONST])
*string("+       ")
*string("COMP    ")
*string("CONST   ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_CONST_PLYID_ARRAY,counter1)],8)
*fieldleft(real,[@attributearrayvalue($DSIZE_CONST_CTHICK,counter1)],8)
*string("        ")
*string("BYPLY   ")
*end()
*counterinc(counter1)
*endloop()
*endif()     
*endif()
*if([$DSIZE_PLYDRP == 1])
*if([$DSIZE_PLYDRP_OPT == 1])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYDRP])
	  
	    *string("+       ")
*string("COMP    ")
*string("PLYDRP  ")
*string("ALL     ")
	    *fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDTYP,counter1)],8)
	    *fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDMAX,counter1)],8)
	    *fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDOPT,counter1)],8)
*if([@defaultstatus($DSIZE_PLYDRP_PDSET)])
*string("        ")
*else()
	      *fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PDSET,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDEXC,counter1)],8)
	    
*if([@stringequal(@attributearrayvalue($DSIZE_PLYDRP_PDDEF,counter1),"DIRECT")])  	   
*end()
*string("+       ")       
*string("        ")
*string("        ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDDEF,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDX,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDZ,counter1)],8)
*endif()
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYDRP_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYDRP])
*string("+       ")
*string("COMP    ")
*string("PLYDRP  ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPDRP_PANGLE_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDTYP_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDMAX_ARRAY,counter1)],8)
*string("BYANG   ")   
*if([@defaultstatus($DSIZE_PLYDRP_PDSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PDSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDEXC_ARRAY,counter1)],8)

*if([@stringequal(@attributearrayvalue($DSIZE_PLYDRP_PDDEF_ARRAY,counter1),"DIRECT")])  
*end()
*string("+       ")        
*string("        ")
*string("        ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDDEF_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDX_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDY_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDZ_ARRAY,counter1)],8)
*endif() 
*end()        
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYDRP_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYDRP])
*string("+       ")
*string("COMP    ")
*string("PLYDRP  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PLYSET_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDTYP_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDMAX_ARRAY,counter1)],8)
*string("BYSET   ")
*if([@defaultstatus($DSIZE_PLYDRP_PDSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PDSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDEXC_ARRAY,counter1)],8)

*if([@stringequal(@attributearrayvalue($DSIZE_PLYDRP_BYSET_PDDEF_ARRAY,counter1),"DIRECT")])   
*end()
*string("+       ")        
*string("        ")
*string("        ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_BYSET_PDDEF_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDX_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDY_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDZ_ARRAY,counter1)],8)
*endif()
*end()        
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYDRP_OPT == 4])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYDRP])
*string("+       ")
*string("COMP    ")
*string("PLYDRP  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PLYID_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDTYP_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDMAX_ARRAY,counter1)],8)
*string("BYPLY   ")   
*if([@defaultstatus($DSIZE_PLYDRP_PDSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PDSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDEXC_ARRAY,counter1)],8)

*if([@stringequal(@attributearrayvalue($DSIZE_PLYDRP_BYPLY_PDDEF_ARRAY,counter1),"DIRECT")])  
*end()
*string("+       ")        
*string("        ")
*string("        ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_BYPLY_PDDEF_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDX_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDY_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDZ_ARRAY,counter1)],8)         
*endif()  
*end()
*counterinc(counter1)
*endloop()
*endif()     
*endif()

*endif()

*variableset(variable3,[@attributearraylength($DSIZE_SET_GROUPS)])
*if([variable3 > 0])
*string("+       ")
*string("GROUP   ") 
*string("        ")
*variableset(variable4,0)
*variableset(variable5,0)
*variableset(variable6,1)  

*loopif([variable4 < variable3])
*if([@attributearrayvalue($DSIZE_SET_GROUPS,variable4+1) > 0])
*field(integer,[@attributearrayvalue($DSIZE_SET_GROUPS,variable4+1)],8)
*variableset(variable5,0)
*variableset(variable6,[variable6 + 1])  
*else()
*variableset(variable5,1)
*endif()
*variableset(variable4,[variable4+1])

*if([variable5 == 0])
*if([variable6 % 7 == 0])
*if([variable4 < variable3])
*end()
*string("+               ")
*endif()
*endif()
*endif()
*endloop()
*end()
*endif()

*endif()
// free shape vars
*if([config == 112])
*if([@writehmcomments()])
*fieldleft(string,name,0)
*end()
*endif()
*string("DSHAPE  ") 
*fieldright(integer,id,8)
*end()
*if([(xtype > 0) && (xtype < 4)])
*string("+       ")
*string("PERT    ")
*if([xtype == 1])
*string("BOTH    ")
*endif()
*if([xtype == 2])
*string("GROW    ")
*endif()
*if([xtype == 3])
*string("SHRINK  ")
*endif()
*fieldleft(real,initialvalue,8)
*fieldleft(integer,xorder,8)
*if([@defined($DSHP_MAXSHRINK)])
*fieldleft(real,[$DSHP_MAXSHRINK],8)
*else()
*string("        ")
*endif()
*if([@defined($DSHP_MAXGROW)])
*fieldleft(real,[$DSHP_MAXGROW],8)
*else()
*string("        ")
*endif()
*if([(designable == 1) || (designable == 2)])
*fieldleft(integer,designable,8)
*else()
*string("        ")
*endif()
*fieldleft(integer,$DSHP_NTRANS,8)
*end()
*endif()
*uservariableset(#dshp_numgrids,[@attributearraylength($DSHP_GRIDS)])
*counterset(counter1,1)
*loopif([counter1 <= #dshp_numgrids])
*if([counter1 == 1])
*string("+       ")
*string("GRID    ")
*string("ID      ")
*endif()
*fieldleft(integer,[@attributearrayvalue($DSHP_GRIDS,counter1)],8)
*if([((counter1+1)%7)==0])
*if([counter1 < #dshp_numgrids])
*end()
*string("+       ")
*string("        ")
*endif()
*endif()
*counterinc(counter1)
*endloop()
*if([#dshp_numgrids > 0])
*end()
*else()
*if([$DSHP_GSETID > 0])
*string("+       ")
*string("GRID    ")
*string("SET    ")
*field(integer,[$DSHP_GSETID],8)
*endif()
*end()
*endif()
*if([type > 0])
*string("+       ")
*string("PATRN   ")
*field(integer,type,8)
*if([type == 10])
*if([anchorpointid != 0])
*field(integer,anchorpointid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_SymmetryAnchorX],8)
*field(real,[$TPL_SymmetryAnchorY],8)
*field(real,[$TPL_SymmetryAnchorZ],8)
*endif()
*if([firstgridid != 0])
*field(integer,firstgridid,8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_SymmetryFirstGridX],8)
*field(real,[$TPL_SymmetryFirstGridY],8)
*field(real,[$TPL_SymmetryFirstGridZ],8)
*endif()
*endif()
*end()
*endif()
*if([yorder > 0])
*string("+       ")
*string("DRAW    ")
*if([yorder == 1])
*string("SINGLE  ")
*endif()                 
*if([$TPL_DrawAnchorNodeId != 0])
*field(integer,[$TPL_DrawAnchorNodeId],8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_DrawAnchorX],8)
*field(real,[$TPL_DrawAnchorY],8)
*field(real,[$TPL_DrawAnchorZ],8)
*endif()
*if([$TPL_DrawFirstGridId != 0])
*field(integer,[$TPL_DrawFirstGridId],8)
*string("        ")
*string("        ")
*else()
*field(real,[$TPL_DrawFirstGridX],8)
*field(real,[$TPL_DrawFirstGridY],8)
*field(real,[$TPL_DrawFirstGridZ],8)
*endif()
*end()
*endif()
*if([ytype > 0])
*string("+       ")
*string("EXTR    ")
*variableset(variable4,[$DSHP_EXTRUSION_CID])
*variableset(variable5,[$DSHP_EXTRUSION_XE])
*variableset(variable6,[$DSHP_EXTRUSION_YE])
*variableset(variable7,[$DSHP_EXTRUSION_ZE])
*field(integer,[variable4],8)
*if([variable4 == 0])
*field(real,[variable5],8)
*field(real,[variable6],8)
*field(real,[variable7],8)
*else()
*variableset(variable8,[@getentityvalue(systems,variable4,type)])
*variableset(variable10,[@getentityvalue(systems,variable4,globaloriginx)])
*variableset(variable11,[@getentityvalue(systems,variable4,globaloriginy)])
*variableset(variable12,[@getentityvalue(systems,variable4,globaloriginz)])
*if([variable8 == 2])
*field(real,[@xpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*field(real,[-1.0*@zpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*field(real,[@ypointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*endif()
*if([variable8 != 2])
*field(real,[@xpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*field(real,[@ypointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*field(real,[@zpointvectorlocal(variable4,variable10,variable11,variable12,variable5,variable6,variable7)],8)
*endif()
*endif()
*end()
*endif()
*uservariableset(#dshp_numgridcons,[@attributearraylength($DSHP_GRIDCON_NODES)])
*counterset(counter1,1)
*loopif([counter1 <= #dshp_numgridcons])
*if([counter1 == 1])
*string("+       ")
*string("GRIDCON ")
*else()
*string("+       ")
*string("        ")
*endif()
*string("ID      ")
*fieldleft(integer,[@attributearrayvalue($DSHP_GRIDCON_NODES,counter1)],8)
*uservariableset(#dshp_ctype,[@attributearrayvalue($DSHP_GRIDCON_CTYPE,counter1)])
*if([#dshp_ctype == 1])
*string("FIXED   ")
*endif()
*if([#dshp_ctype == 2])
*string("VECTOR  ")
*endif()
*if([#dshp_ctype == 3])
*string("PLANAR  ")
*endif()
*if([#dshp_ctype != 1])
*uservariableset(#dshp_cid,[@attributearrayvalue($DSHP_GRIDCON_CID,counter1)])
*uservariableset(#dshp_xcomp,[@attributearrayvalue($DSHP_GRIDCON_XCOMP,counter1)])
*uservariableset(#dshp_ycomp,[@attributearrayvalue($DSHP_GRIDCON_YCOMP,counter1)])
*uservariableset(#dshp_zcomp,[@attributearrayvalue($DSHP_GRIDCON_ZCOMP,counter1)])
*fieldleft(integer,[#dshp_cid],8)
*if([#dshp_cid == 0])
*fieldleft(real,[#dshp_xcomp],8)
*fieldleft(real,[#dshp_ycomp],8)
*fieldleft(real,[#dshp_zcomp],8)
*else()
*uservariableset(#dshp_systype,[@getentityvalue(systems,#dshp_cid,type)])
uservariableset(#dshp_gridcon_nodeid,[@attributearrayvalue($DSHP_GRIDCON_NODES,counter1)])
*uservariableset(#dshp_globalx,[@getentityvalue(systems,#dshp_cid,globaloriginx)])
*uservariableset(#dshp_globaly,[@getentityvalue(systems,#dshp_cid,globaloriginy)])
*uservariableset(#dshp_globalz,[@getentityvalue(systems,#dshp_cid,globaloriginz)])
*if([#dshp_systype == 2])
*fieldleft(real,[@xpointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*fieldleft(real,[-1.0*@zpointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*fieldleft(real,[@ypointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*endif()
*if([#dshp_systype != 2])
*fieldleft(real,[@xpointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*fieldleft(real,[@ypointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*fieldleft(real,[@zpointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*endif()
*endif()
*endif()
*end()
*counterinc(counter1)
*endloop()
*uservariableset(#dshp_numgridconsets,[@attributearraylength($DSHP_GRIDCON_SETS)])
*counterset(counter1,1)
*loopif([counter1 <= #dshp_numgridconsets])
*if([counter1 == 1])
*if([#dshp_numgridcons == 0])
*string("+       ")
*string("GRIDCON ")
*else()
*string("+       ")
*string("        ")
*endif()
*endif()
*string("SET     ")
*fieldleft(integer,[@attributearrayvalue($DSHP_GRIDCON_SETS,counter1)],8)
*uservariableset(#dshp_ctype,[@attributearrayvalue($DSHP_SET_GRIDCON_CTYPE,counter1)])
*if([#dshp_ctype == 1])
*string("FIXED   ")
*endif()
*if([#dshp_ctype == 2])
*string("VECTOR  ")
*endif()
*if([#dshp_ctype == 3])
*string("PLANAR  ")
*endif()
*if([#dshp_ctype != 1])
*uservariableset(#dshp_cid,[@attributearrayvalue($DSHP_SET_GRIDCON_CID,counter1)])
*uservariableset(#dshp_xcomp,[@attributearrayvalue($DSHP_SET_GRIDCON_XCOMP,counter1)])
*uservariableset(#dshp_ycomp,[@attributearrayvalue($DSHP_SET_GRIDCON_YCOMP,counter1)])
*uservariableset(#dshp_zcomp,[@attributearrayvalue($DSHP_SET_GRIDCON_ZCOMP,counter1)])
*fieldleft(integer,[#dshp_cid],8)
*if([#dshp_cid == 0])
*fieldleft(real,[#dshp_xcomp],8)
*fieldleft(real,[#dshp_ycomp],8)
*fieldleft(real,[#dshp_zcomp],8)
*else()
*uservariableset(#dshp_systype,[@getentityvalue(systems,#dshp_cid,type)])
*uservariableset(#dshp_globalx,[@getentityvalue(systems,#dshp_cid,globaloriginx)])
*uservariableset(#dshp_globaly,[@getentityvalue(systems,#dshp_cid,globaloriginy)])
*uservariableset(#dshp_globalz,[@getentityvalue(systems,#dshp_cid,globaloriginz)])
*if([#dshp_systype == 2])
*fieldleft(real,[@xpointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*fieldleft(real,[-1.0*@zpointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*fieldleft(real,[@ypointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*endif()
*if([#dshp_systype != 2])
*fieldleft(real,[@xpointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*fieldleft(real,[@ypointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*fieldleft(real,[@zpointvectorlocal(#dshp_cid,#dshp_globalx,#dshp_globaly,#dshp_globalz,#dshp_xcomp,#dshp_ycomp,#dshp_zcomp)],8)
*endif()
*endif()
*endif()
*end()
*if([counter1 != #dshp_numgridconsets])
*string("+       ")
*string("        ")
*endif()
*counterinc(counter1)
*endloop()
*uservariableset(#dshp_numsideconblocks,[@attributearraylength($DSHP_SIDECON_BLOCKS)])
*counterset(counter1,1)
*if([#dshp_numsideconblocks > 0])
*string("+       ")
*string("SDCON   ")
*loopif([counter1 <= #dshp_numsideconblocks])
*variableset(variable3,[@attributearrayvalue($DSHP_SIDECON_BLOCKS,counter1)])
*string("        ")
*fieldleft(real,[@getentityvalue(blocks,variable3,mini)],8)
*fieldleft(real,[@getentityvalue(blocks,variable3,maxi)],8)
*fieldleft(real,[@getentityvalue(blocks,variable3,minj)],8)
*fieldleft(real,[@getentityvalue(blocks,variable3,maxj)],8)
*fieldleft(real,[@getentityvalue(blocks,variable3,mink)],8)
*fieldleft(real,[@getentityvalue(blocks,variable3,maxk)],8)
*end()
*if([counter1 != #dshp_numsideconblocks])
*string("+       ")
*string("        ")
*endif()
*counterinc(counter1)
*endloop()
*else()
*if([@defined($DSHP_SIDECON_CID)])
*if([@defined($DSHP_SIDECON_LB_X) || @defined($DSHP_SIDECON_UB_X) || @defined($DSHP_SIDECON_LB_Y)  ||
@defined($DSHP_SIDECON_UB_Y) || @defined($DSHP_SIDECON_LB_Z) || @defined($DSHP_SIDECON_UB_Z)])
*string("+       ")
*string("SDCON   ")
*if([$DSHP_SIDECON_CID > 0])
*fieldleft(integer,[$DSHP_SIDECON_CID],8)
*else()
*string("        ")
*endif()
*if([@defined($DSHP_SIDECON_LB_X)])
*fieldleft(real,[$DSHP_SIDECON_LB_X],8)
*else()
*string("        ")
*endif()
*if([@defined($DSHP_SIDECON_UB_X)])
*fieldleft(real,[$DSHP_SIDECON_UB_X],8)
*else()
*string("        ")
*endif()
*if([@defined($DSHP_SIDECON_LB_Y)])
*fieldleft(real,[$DSHP_SIDECON_LB_Y],8)
*else()
*string("        ")
*endif()
*if([@defined($DSHP_SIDECON_UB_Y)])
*fieldleft(real,[$DSHP_SIDECON_UB_Y],8)
*else()
*string("        ")
*endif()
*if([@defined($DSHP_SIDECON_LB_Z)])
*fieldleft(real,[$DSHP_SIDECON_LB_Z],8)
*else()
*string("        ")
*endif()
*if([@defined($DSHP_SIDECON_UB_Z)])
*fieldleft(real,[$DSHP_SIDECON_UB_Z],8)
*else()
*string("        ")
*endif()
*end()
*endif()
*endif()
*endif()
*if([$DSHP_BARRIER_COMPONENTID > 0])
*string("+       ")
*string("BMESH   ")
*fieldleft(integer,[$DSHP_BARRIER_COMPONENTID],8)
*end()
*endif()
*end()
*endif()
// composite size vars
*if([config == 99])
*if([@writehmcomments()])
*fieldleft(string,name,0)
*end()
*endif()
*string("DCOMP   ")
*fieldleft(integer,id,8)
*variableset(variable1,1)
*if([designable == 1 || designable == 2])
*if([designable == 1])
*string("STACK   ")
*else()
*string("PCOMP   ")
*endif()
*loopif([variable1 <= componentlistmax])
*pointerset(pointer1,componentlist,[variable1-1])
*fieldleft(integer,pointer1.pointervalue,8)
*if([(variable1%7)==6])
*end()
*if([variable1 != componentlistmax])
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*endloop()
*if([(componentlistmax%7) != 6])
*end()
*endif()
*endif()
*if([$DSIZE_LAMINATE_MINTHICK > 0.0 || $DSIZE_LAMINATE_MAXTHICK > 0.0])
*string("+       ")
*string("LAMTHK  ")
*if([$DSIZE_LAMINATE_MINTHICK > 0.0])
*fieldleft(real,[$DSIZE_LAMINATE_MINTHICK],8)
*else()
*string("        ")
*endif()
*if([$DSIZE_LAMINATE_MAXTHICK > 0.0])
*fieldleft(real,[$DSIZE_LAMINATE_MAXTHICK],8)
*else()
*string("        ")
*endif()
*if([@defaultstatus($DSIZE_LAMINATE_LTSET)])
*string("        ")
*else()
*fieldleft(integer,[$DSIZE_LAMINATE_LTSET],8)
*endif()
*fieldleft(string,$DSIZE_LAMINATE_LTEXC,8)
*end()
*endif()
*if([$DSIZE_PLYTHK == 1])
*if([$DSIZE_PLYTHK_OPT == 1])
*string("+       ")
*string("PLYTHK  ")
*string("ALL     ")
*if([@defaultstatus($DSIZE_PLYTHK_PTMIN)])
*string("        ")
*else()
*fieldleft(real,$DSIZE_PLYTHK_PTMIN,8)
*endif()
*if([@defaultstatus($DSIZE_PLYTHK_PTMAX)])
*string("        ")
*else()
*fieldleft(real,$DSIZE_PLYTHK_PTMAX,8)
*endif()
*fieldleft(string,$DSIZE_PLYTHK_PTOPT,8)
*if([@defaultstatus($DSIZE_PLYTHK_PTSET)])
*string("        ")
*else()
*fieldleft(integer,$DSIZE_PLYTHK_PTSET,8)
*endif()
*fieldleft(string,$DSIZE_PLYTHK_PTEXC,8)
*end()
*endif()
*if([$DSIZE_PLYTHK_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYTHK])
*string("+       ")
*string("PLYTHK  ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_TANGLE_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMAX_ARRAY,counter1)],8)
*string("BYANG   ")
*if([@defaultstatus($DSIZE_PLYTHK_PTSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PTSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYTHK_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYTHK])
*string("+       ")
*string("PLYTHK  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PLYSET_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMAX_ARRAY,counter1)],8)
*string("BYSET   ")
*if([@defaultstatus($DSIZE_PLYTHK_PTSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PTSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()   
*if([$DSIZE_PLYTHK_OPT == 4])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYTHK])
*string("+       ")
*string("PLYTHK  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PLYID_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTMAX_ARRAY,counter1)],8)
*string("BYPLY   ")
*if([@defaultstatus($DSIZE_PLYTHK_PTSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYTHK_PTSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYTHK_PTEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()    
*endif()
*if([$DSIZE_PLYPCT == 1])
*if([$DSIZE_PLYPCT_OPT == 1])
*string("+       ")
*string("PLYPCT  ")
*string("ALL     ")
*if([@defaultstatus($DSIZE_PLYPCT_PPMIN)])
*string("        ")
*else()
*fieldleft(real,$DSIZE_PLYPCT_PPMIN,8)
*endif()
*if([@defaultstatus($DSIZE_PLYPCT_PPMAX)])
*string("        ")
*else()
*fieldleft(real,$DSIZE_PLYPCT_PPMAX,8)
*endif()
*fieldleft(string,$DSIZE_PLYPCT_PPOPT,8)
*if([@defaultstatus($DSIZE_PLYPCT_PPSET)])
*string("        ")
*else()
*fieldleft(integer,$DSIZE_PLYPCT_PPSET,8)
*endif()
*fieldleft(string,$DSIZE_PLYPCT_PPEXC,8)
*end()
*endif()
*if([$DSIZE_PLYPCT_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYPCT])
*string("+       ")
*string("PLYPCT  ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PANGLE_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMAX_ARRAY,counter1)],8)
*string("BYANG   ")   
*if([@defaultstatus($DSIZE_PLYPCT_PPSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PPSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYPCT_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYPCT])
*string("+       ")
*string("PLYPCT  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PLYSET_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMAX_ARRAY,counter1)],8)
*string("BYSET   ")   
*if([@defaultstatus($DSIZE_PLYPCT_PPSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PPSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYPCT_OPT == 4])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYPCT])
*string("+       ")
*string("PLYPCT  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PLYID_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMIN_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPMAX_ARRAY,counter1)],8)
*string("BYPLY   ")   
*if([@defaultstatus($DSIZE_PLYPCT_PPSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYPCT_PPSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPCT_PPEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()    
*endif()
*if([$DSIZE_BALANCE == 1])
*if([$DSIZE_BALANCE_OPT == 1])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_BALANCE])
*string("+       ")
*string("BALANCE ")
*fieldleft(real,[@attributearrayvalue($DSIZE_BALANCE_BANGLE1,counter1)],8)
*fieldleft(real,[@attributearrayvalue($DSIZE_BALANCE_BANGLE2,counter1)],8)
*string("        ")
*string("BYANG   ")           
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_BALANCE_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_BALANCE])
*string("+       ")
*string("BALANCE ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_BALANCE_PLYSET1_ARRAY,counter1)],8)
*fieldleft(integer,[@attributearrayvalue($DSIZE_BALANCE_PLYSET2_ARRAY,counter1)],8)
*string("        ")
*string("BYSET   ")           
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_BALANCE_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_BALANCE])
*string("+       ")
*string("BALANCE ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_BALANCE_PLYID1_ARRAY,counter1)],8)
*fieldleft(integer,[@attributearrayvalue($DSIZE_BALANCE_PLYID2_ARRAY,counter1)],8)
*string("        ")
*string("BYPLY   ")           
*end()
*counterinc(counter1)
*endloop()
*endif()     
*endif()
*if([$DSIZE_CONST == 1])
*if([$DSIZE_CONST_OPT == 1])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_CONST])
*string("+       ")
*string("CONST   ")
*fieldleft(real,[@attributearrayvalue($DSIZE_CONST_CANGLE,counter1)],8)
*fieldleft(real,[@attributearrayvalue($DSIZE_CONST_CTHICK,counter1)],8)
*string("        ")
*string("BYANG   ")          
*end()
*counterinc(counter1)
*endloop()
*endif()   
*if([$DSIZE_CONST_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_CONST])
*string("+       ")
*string("CONST   ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_CONST_PLYSET_ARRAY,counter1)],8)
*fieldleft(real,[@attributearrayvalue($DSIZE_CONST_CTHICK,counter1)],8)
*string("        ")
*string("BYSET   ")          
*end()
*counterinc(counter1)
*endloop()
*endif() 
*if([$DSIZE_CONST_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_CONST])
*string("+       ")
*string("CONST   ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_CONST_PLYID_ARRAY,counter1)],8)
*fieldleft(real,[@attributearrayvalue($DSIZE_CONST_CTHICK,counter1)],8)
*string("        ")
*string("BYPLY   ")          
*end()
*counterinc(counter1)
*endloop()
*endif()     
*endif()
*if([$DSIZE_PLYDRP == 1])
*if([$DSIZE_PLYDRP_OPT == 1])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYDRP])	  
	    *string("+       ")
*string("PLYDRP  ")
*string("ALL     ")
	    *fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDTYP,counter1)],8)
	    *fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDMAX,counter1)],8)
	    *fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDOPT,counter1)],8)
*if([@defaultstatus($DSIZE_PLYDRP_PDSET)])
*string("        ")
*else()
	      *fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PDSET,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDEXC,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYDRP_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYDRP])
*string("+       ")
*string("PLYDRP  ")
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYPDRP_PANGLE_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDTYP_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDMAX_ARRAY,counter1)],8)
*string("BYANG   ")   
*if([@defaultstatus($DSIZE_PLYDRP_PDSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PDSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYDRP_OPT == 3])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYDRP])
*string("+       ")
*string("PLYDRP  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PLYSET_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDTYP_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDMAX_ARRAY,counter1)],8)
*string("BYSET   ")
*if([@defaultstatus($DSIZE_PLYDRP_PDSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PDSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$DSIZE_PLYDRP_OPT == 4])
*counterset(counter1,1)
*loopif([counter1 <= $DSIZE_NUMBER_OF_PLYDRP])
*string("+       ")
*string("PLYDRP  ")
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PLYID_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDTYP_ARRAY,counter1)],8)
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDMAX_ARRAY,counter1)],8)
*string("BYPLY   ")   
*if([@defaultstatus($DSIZE_PLYDRP_PDSET_ARRAY)])
*string("        ")
*else()
*fieldleft(integer,[@attributearrayvalue($DSIZE_PLYDRP_PDSET_ARRAY,counter1)],8)
*endif()
*fieldleft(string,[@attributearrayvalue($DSIZE_PLYDRP_PDEXC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()     
*endif()
*endif()
// composite shuffle vars
*if([config == 102])
*if([@writehmcomments()])
*fieldleft(string,name,0)
*end()
*endif()
*string("DSHUFFLE")
*fieldright(integer,id,8)
*variableset(variable1,1)
*if([designable == 1 || designable == 2])
*if([designable == 1])
*string("   STACK")
*else()
*string("   PCOMP")
*endif()
*loopif([variable1 <= componentlistmax])
*pointerset(pointer1,componentlist,[variable1-1])
*fieldright(integer,pointer1.pointervalue,8)
*if([(variable1%7)==6])
*end()
*if([variable1 != componentlistmax])
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*endloop()
*if([(componentlistmax%7) != 6])
*end()
*endif()
*endif()
*if([$DSHUFFLE_MAXSUCC == 1])
*if([$DSHUFFLE_MAXSUCC_OPT == 1])
*string("+       ")
*string(" MAXSUCC")
*string("     ALL")
*fieldright(integer,$DSHUFFLE_MSUCC,8)
*if([@defaultstatus($DSHUFFLE_VSUCC)])
*string("        ")
*else()
*fieldright(real,$DSHUFFLE_VSUCC,8)
*endif()
*end()
*endif()
*if([$DSHUFFLE_MAXSUCC_OPT == 2])
*counterset(counter1,1)
*loopif([counter1 <= $DSHUFFLE_NUMBER_OF_MAXSUCC])
*string("+       ")
*string(" MAXSUCC")
*fieldright(real,[@attributearrayvalue($DSHUFFLE_MANGLE_ARRAY,counter1)],8)
*fieldright(integer,[@attributearrayvalue($DSHUFFLE_MSUCC_ARRAY,counter1)],8)
*fieldright(string,[@attributearrayvalue($DSHUFFLE_VSUCC_ARRAY,counter1)],8)
*end()
*counterinc(counter1)
*endloop()
*endif()
*endif()
*if([type > 0])
*string("+       ")
*string("    PAIR")
*fieldright(real,upperbound,8)
*fieldright(real,lowerbound,8)
*if([xtype == 1])
*string("    SAME")
*endif()
*if([xtype == 2])
*string(" REVERSE")
*endif()
*end()
*endif()
*if([$DSHUFFLE_CORE == 1])
*if([$NUMBER_OF_CANG > 0])
*string("+       ")
*string("    CORE")
*fieldright(integer,$DSHUFFLE_CREP,8)
*counterset(counter1,1)
*loopif([counter1 <= $NUMBER_OF_CANG])
*fieldright(real,[@attributearrayvalue($DSHUFFLE_CANGLE,counter1)],8)
*if([((counter1 % 6) == 0)])
*end()
*if([counter1 != $NUMBER_OF_CANG])
*string("+       ")
*string("        ")
*string("        ")
*endif()
*endif()
*counterinc(counter1)
*endloop()
*counterset(counter1,[counter1-1])
*if([((counter1 % 6) != 0)])
*end()
*endif()
*endif()
*endif()
*if([$DSHUFFLE_COVER == 1])
*if([$NUMBER_OF_VANG > 0])
*string("+       ")
*string("   COVER")
*fieldright(integer,$DSHUFFLE_VREP,8)
*counterset(counter1,1)
*loopif([counter1 <= $NUMBER_OF_VANG])
*fieldright(real,[@attributearrayvalue($DSHUFFLE_VANGLE,counter1)],8)
*if([((counter1 % 6) == 0)])
*end()
*if([counter1 != $NUMBER_OF_VANG])
*string("+       ")
*string("        ")
*string("        ")
*endif()
*endif()
*counterinc(counter1)
*endloop()
*counterset(counter1,[counter1-1])
*if([((counter1 % 6) != 0)])
*end()
*endif()
*endif()
*endif()
*endif()
*output()


*dvprels()
*beginmenu()
*menuif([property == 15])
*menuif([functionid==0])
*menustring("DVMREL1 ")
*menuelse()
*menustring("DVMREL2 ")
*menuendif()
*menuelse()
*menuif([property == 14])
*menuif([functionid==0])
*menustring("DVCREL1 ")
*menuelse()
*menustring("DVCREL2 ")
*menuendif()
*menuelse()
*menuif([functionid==0])
*menustring("DVPREL1 ")
*menuelse()
*menustring("DVPREL2 ")
*menuendif()
*menuendif()
*menuendif()
*menufield(ID,integer,id,8)

*menuif([property == 1])
*menustring("PSHELL  ")
*menuendif()
*menuif([property == 4])
*menustring("PCOMP   ")
*menuendif()
*menuif([property == 22])
*menustring("PCOMPG  ")
*menuendif()
*menuif([property == 23])
*menustring("PCOMPP  ")
*menuendif()
*menuif([property == 5])
*menustring("PBAR    ")
*menuendif()
*menuif([property == 6])
*menustring("PBEAM   ")
*menuendif()
*menuif([property == 7])
*menustring("PELAS   ")
*menuendif()
*menuif([property == 8])
*menustring("PROD    ")
*menuendif()
*menuif([property == 11])
*menustring("PBUSH   ")
*menuendif()
*menuif([property == 17])
*menustring("PBARL   ")
*menuendif()
*menuif([property == 19])
*menustring("PBEAML  ")
*menuendif()
*menuif([property == 21])
*menustring("PMASS   ")
*menuendif()
*menuif([property == 3])
*menustring("PSHEAR  ")
*menuendif()
*menuif([property == 24])
*menustring("PVISC   ")
*menuendif()
*menuif([property == 10])
*menustring("PDAMP   ")
*menuendif()
*menuif([property == 25])
*menustring("PLY     ")
*menuendif()
*menuif([property == 15])
*menufield(TYPE,string,[@getcollectorcardimage(mats,propertyid)],8)
*menufield(MID,integer,propertyid,8)

*menuif([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT1"))])
*menuif([fieldposition == 3])
*menuattributeset($blank,"E")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 4])
*menuattributeset($blank,"G")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 5])
*menuattributeset($blank,"NU")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 6])
*menuattributeset($blank,"RHO")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 7])
*menuattributeset($blank,"A")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"TREF")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"GE")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT2"))])
*menuif([fieldposition == 3])
*menuattributeset($blank,"G11")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 4])
*menuattributeset($blank,"G12")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 5])
*menuattributeset($blank,"G13")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 6])
*menuattributeset($blank,"G22")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 7])
*menuattributeset($blank,"G23")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"G33")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"RHO")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 12])
*menuattributeset($blank,"A1")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 13])
*menuattributeset($blank,"A2")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 14])
*menuattributeset($blank,"A12")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 15])
*menuattributeset($blank,"TREF")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 16])
*menuattributeset($blank,"GE")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT8"))])
*menuif([fieldposition == 3])
*menuattributeset($blank,"E1")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 4])
*menuattributeset($blank,"E2")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 5])
*menuattributeset($blank,"NU12")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 6])
*menuattributeset($blank,"G12")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 7])
*menuattributeset($blank,"G1,Z")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"G2,Z")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"RHO")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 12])
*menuattributeset($blank,"A1")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 13])
*menuattributeset($blank,"A2")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 14])
*menuattributeset($blank,"TREF")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 22])
*menuattributeset($blank,"GE")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT9"))])
*menuif([fieldposition == 3])
*menuattributeset($blank,"G11")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 4])
*menuattributeset($blank,"G12")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 5])
*menuattributeset($blank,"G13")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 6])
*menuattributeset($blank,"G14")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 7])
*menuattributeset($blank,"G15")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"G16")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"G22")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 12])
*menuattributeset($blank,"G23")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 13])
*menuattributeset($blank,"G24")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 14])
*menuattributeset($blank,"G25")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 15])
*menuattributeset($blank,"G26")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 16])
*menuattributeset($blank,"G33")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 17])
*menuattributeset($blank,"G34")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 18])
*menuattributeset($blank,"G35")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 19])
*menuattributeset($blank,"G36")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 22])
*menuattributeset($blank,"G44")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 23])
*menuattributeset($blank,"G45")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 24])
*menuattributeset($blank,"G46")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 25])
*menuattributeset($blank,"G55")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 26])
*menuattributeset($blank,"G56")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 27])
*menuattributeset($blank,"G66")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 28])
*menuattributeset($blank,"RHO")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 29])
*menuattributeset($blank,"A1")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 32])
*menuattributeset($blank,"A2")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 33])
*menuattributeset($blank,"A3")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 34])
*menuattributeset($blank,"A4")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 35])
*menuattributeset($blank,"A5")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 36])
*menuattributeset($blank,"A6")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 37])
*menuattributeset($blank,"TREF")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 38])
*menuattributeset($blank,"GE")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
menuif([fieldposition == 48])
menuattributeset($blank,"GE")
menufield(MPNAME,string,[$blank],8)
menuendif()
menuendif()
*menuendif()
*menuif([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT9ORT"))])
*menuif([fieldposition == 3])
*menuattributeset($blank,"E1")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 4])
*menuattributeset($blank,"E2")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 5])
*menuattributeset($blank,"E3")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 6])
*menuattributeset($blank,"NU12")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 7])
*menuattributeset($blank,"NU23")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"NU31")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"RHO")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 12])
*menuattributeset($blank,"G12")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 13])
*menuattributeset($blank,"G23")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 14])
*menuattributeset($blank,"G31")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 15])
*menuattributeset($blank,"A1")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 16])
*menuattributeset($blank,"A2")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 17])
*menuattributeset($blank,"A3")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 18])
*menuattributeset($blank,"TREF")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 19])
*menuattributeset($blank,"GE")
*menufield(MPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuif([property == 14])
*menuvariableset(variable4,[@getentityvalue(elems,propertyid,config)])
*menuvariableset(variable5,[@getentityvalue(elems,propertyid,type)])
*menuif([variable4 == 1])
*menuif([variable5 == 5]) 
*menustring("CELAS2  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"K")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"GE")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"S")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 1])
*menustring("CONM2   ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 5])
*menuattributeset($blank,"M")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 6])
*menuattributeset($blank,"X1")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 7])
*menuattributeset($blank,"X2")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"X3")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 12])
*menuattributeset($blank,"I11")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 13])
*menuattributeset($blank,"I21")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 14])
*menuattributeset($blank,"I22")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 15])
*menuattributeset($blank,"I31")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 16])
*menuattributeset($blank,"I32")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 17])
*menuattributeset($blank,"I33")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 16])
*menustring("CELAS4  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"K")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"GE")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"S")
*menufield(EPNAME,string,[$blank],8)
*menuendif()      
*menuendif()
*menuif([variable5 == 3])
*menustring("CMASS2  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"M")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 18])
*menustring("CMASS4  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"M")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 7])
*menustring("CDAMP2  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"B")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 14])
*menustring("CDAMP4  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"B")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 9])
*menustring("CONM1   ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 5])
*menuattributeset($blank,"M11")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 6])
*menuattributeset($blank,"M21")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 7])
*menuattributeset($blank,"M22")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"M31")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"M32")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 12])
*menuattributeset($blank,"M33")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 13])
*menuattributeset($blank,"M41")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 14])
*menuattributeset($blank,"M42")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 15])
*menuattributeset($blank,"M43")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 16])
*menuattributeset($blank,"M44")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 17])
*menuattributeset($blank,"M51")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 18])
*menuattributeset($blank,"M52")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 19])
*menuattributeset($blank,"M53")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 22])
*menuattributeset($blank,"M54")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 23])
*menuattributeset($blank,"M55")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 24])
*menuattributeset($blank,"M61")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 25])
*menuattributeset($blank,"M62")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 26])
*menuattributeset($blank,"M63")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 27])
*menuattributeset($blank,"M64")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 28])
*menuattributeset($blank,"M65")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 29])
*menuattributeset($blank,"M66")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuif([variable4 == 21])
*menuif([variable5 == 2]) 
*menustring("CELAS2  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"K")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"GE")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"S")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 14])
*menustring("CELAS4  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"K")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"GE")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"S")
*menufield(EPNAME,string,[$blank],8)
*menuendif()      
*menuendif()
*menuif([variable5 == 10])
*menustring("CMASS2  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"M")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 17])
*menustring("CMASS4  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"M")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 4])
*menustring("CDAMP2  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"B")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([variable5 == 12])
*menustring("CDAMP4  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 3])
*menuattributeset($blank,"B")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuif([variable4 == 61])
*menuif([variable5 == 2]) 
*menustring("CONROD  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 6])
*menuattributeset($blank,"A")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 7])
*menuattributeset($blank,"J")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"C")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 9])
*menuattributeset($blank,"NSM")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuif([variable4 == 104])
*menuif([variable5 == 1 || variable5 == 2]) 
*menuif([variable5 == 1])
*menustring("CQUAD4  ")
*menuelse()
*menustring("CQUADR  ")
*menuendif()
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 9])
*menuattributeset($blank,"ZOFFS")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuif([variable4 == 103])
*menuif([variable5 == 1 || variable5 == 2]) 
*menuif([variable5 == 1])
*menustring("CTRIA3  ")
*menuelse()
*menustring("CTRIAR  ")
*menuendif()
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 8])
*menuattributeset($blank,"ZOFFS")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuif([variable4 == 108])
*menuif([variable5 == 1]) 
*menustring("CQUAD8  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 19])
*menuattributeset($blank,"ZOFFS")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuif([variable4 == 106])
*menuif([variable5 == 1]) 
*menustring("CTRIA6  ")
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 13])
*menuattributeset($blank,"ZOFFS")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuif([variable4 == 60])
*menuif([variable5 == 1 || variable5 == 2]) 
*menuif([variable5 == 1])
*menustring("CBAR    ")
*menuendif()
*menuif([variable5 == 2])
*menustring("CBEAM   ")
*menuendif()      
*menufield(EID,integer,propertyid,8)
*menuif([fieldposition == 6])
*menuattributeset($blank,"X1")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 7])
*menuattributeset($blank,"X2")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 8])
*menuattributeset($blank,"X3")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 14])
*menuattributeset($blank,"W1A")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 15])
*menuattributeset($blank,"W2A")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 16])
*menuattributeset($blank,"W3A")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 17])
*menuattributeset($blank,"W1B")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 18])
*menuattributeset($blank,"W2B")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 19])
*menuattributeset($blank,"W3B")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuendif()

*menuif([property == 25])
*menufield(ID,integer,propertyid,8)
*menuif([fieldposition == 4])
*menuattributeset($blank,"T")
*menufield(PNAME,string,[$blank],8)
*menuendif()
*menuif([fieldposition == 5])
*menuattributeset($blank,"THETA")
*menufield(EPNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([property != 22 && property != 23])
*menuif([property != 14 && property != 15 && property != 16 && property != 25])
*menufield(PID,integer,propertyid,8)
*menuendif()
*menuelse()
*menuif([fieldposition > 0])
*menufield(PID,integer,propertyid,8)
*menuelse()
*menuif([property == 22])
*menustring("G")
*menuendif()
*menuif([property == 23])
*menustring("P")
*menuendif()
*menuif([propertyid < 10])
*menufield(,integer,propertyid,1)
*menustring("      ")
*menuendif()
*menuif([propertyid >= 10])
*menuif([propertyid < 100])
*menufield(,integer,propertyid,2)
*menustring("     ")
*menuendif()
*menuendif()
*menuif([propertyid >= 100])
*menuif([propertyid < 1000])
*menufield(,integer,propertyid,3)
*menustring("    ")
*menuendif()
*menuendif()
*menuif([propertyid >= 1000])
*menuif([propertyid < 10000])
*menufield(,integer,propertyid,4)
*menustring("   ")
*menuendif()
*menuendif()
*menuif([propertyid >= 10000])
*menuif([propertyid < 100000])
*menufield(,integer,propertyid,5)
*menustring("  ")
*menuendif()
*menuendif()
*menuif([propertyid >= 100000])
*menuif([propertyid < 1000000])
*menufield(,integer,propertyid,6)
*menustring(" ")
*menuendif()
*menuendif()
*menuif([propertyid >= 1000000])
*menuif([propertyid < 10000000])
*menufield(,integer,propertyid,7)
*menuelse()
*menustring("-ERROR")
*menuendif()
*menuendif()
*menuendif()
*menuendif()
*menuif([(property != 17) && (property != 19) && (property != 22) && (property != 23)])
*menuif([property != 14 && property != 15 && property != 16 && property != 25])
*menufield(FID,integer,fieldposition,8)
*menuendif()
*menuelse()
*menuif([property == 22 || property == 23])
*menuif([fieldposition > 0])
*menufield(FID,integer,fieldposition,8)
*menuelse()
*menuif([fieldposition == -1])
*menuattributecreate($blank,"T")
*menuelse()
*menuattributecreate($blank,"THETA")
*menuendif()
*menufield(PNAME,string,[$blank],8)
*menuendif()
*menuelse()
*menuif([fieldposition == 1])
*menuattributecreate($blank,"DIM1")
*menuendif()
*menuif([fieldposition == 2])
*menuattributecreate($blank,"DIM2")
*menuendif()
*menuif([fieldposition == 3])
*menuattributecreate($blank,"DIM3")
*menuendif()
*menuif([fieldposition == 4])
*menuattributecreate($blank,"DIM4")
*menuendif()
*menuif([fieldposition == 5])
*menuattributecreate($blank,"DIM5")
*menuendif()
*menuif([fieldposition == 6])
*menuattributecreate($blank,"DIM6")
*menuendif()
*menuif([fieldposition == 1000])
*menuattributecreate($blank,"NSM")
*menuendif()
*menufield(PNAME,string,[$blank],8)
*menuendif()
*menuendif()
*menuif([pmin == 0.0])
*menustring("        ")
*menuelse()
*menufield(PMIN,real,pmin,8)
*menuendif()
*menuif([pmax == 0.0])
*menustring("        ")
*menuelse()
*menufield(PMAX,real,pmax,8)
*menuendif()
*menuif([functionid==0])
*menufield(C0,real,c0,8)
*menuelse()
*menufield(EQID,integer,functionid,8)
*menuendif()
*menulineend()
*menuif([functionid==0])
*menuvariableset(variable1,1)
*menuif([desvarlistmax > 0])
*menustring("        ")
*beginrepeat(desvarlistmax)
repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,desvarlist,counter1-1)
*menupointerset(pointer2,coeff,counter1-1)
*menufield(DVID,integer,pointer1.pointervalue,8)
*menufield(COEFF,real,pointer2.pointervalue,8)
*menuif([variable1 % 4 == 0])
*menuif([variable1 < desvarlistmax])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuendif()
*menuelse()
*menuif([desvarlistmax > 0])
*menuvariableset(variable1,1)
*menustring("        ")
*menustring("DESVAR  ")
*beginrepeat(desvarlistmax)
repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,desvarlist,counter1-1)
*menufield(DVID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==0])
*menuif([variable1 < desvarlistmax])
*menulineend()
*menustring("                ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menuif([(variable1%7)!=0])
*menulineend()
*menuendif()
*menuendif()
*menuif([tableentrylistmax > 0])
*menuvariableset(variable1,1)
*menustring("        ")
*menustring("DTABLE  ")
*beginrepeat(tableentrylistmax)
repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,tableentrylist,counter1-1)
*menuvariableset(variable9,[@getinternalid(14,pointer1.pointervalue)])
*menufield(LABL,string,[@getentityvalue(tables,variable9,name)],8)
*menuif([(variable1%7)==0])
*menuif([variable1 < tableentrylistmax])
*menulineend()
*menustring("                ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menuif([(variable1%7)!=0])
*menulineend()
*menuendif()
*menuendif()
*menuendif()
*endmenu()
*format()
*if([@writehmcomments()])
*string("$HMNAME DVPRELS ")
*fieldleft(integer,id,8)
if([(functionid==0) && (@stringinstring(name,"~",0) == 1) && (property == 1) && (desvarlistmax == 1)])
*fieldleft(string,name,0)
else()
fieldleft(string,name,8)
endif()
*end()
*endif()
*if([property == 15])
*if([functionid==0])
*string("DVMREL1 ")
*else()
*string("DVMREL2 ")
*endif()
*else()
*if([property == 14])
*if([functionid==0])
*string("DVCREL1 ")
*else()
*string("DVCREL2 ")
*endif()
*else()
*if([functionid==0])
*string("DVPREL1 ")
*else()
*string("DVPREL2 ")
*endif()
*endif()
*endif()
*fieldleft(integer,id,8)
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 23])
*string("PCOMPP  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 11])
*string("PBUSH   ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property == 21])
*string("PMASS   ")
*endif()
*if([property == 3])
*string("PSHEAR  ")
*endif()
*if([property == 24])
*string("PVISC   ")
*endif()
*if([property == 10])
*string("PDAMP   ")
*endif()
*if([property == 25])
*string("PLY     ")
*endif()
*if([property == 15])
*field(string,[@getcollectorcardimage(mats,propertyid)],8)
*endif()
*if([property == 14])
*variableset(variable4,[@getentityvalue(elems,propertyid,config)])
*variableset(variable5,[@getentityvalue(elems,propertyid,type)])
*if([variable4 == 1])
*if([variable5 == 5]) 
*string("CELAS2  ")
*endif()
*if([variable5 == 1])
*string("CONM2   ")
*endif()
*if([variable5 == 16])
*string("CELAS4  ")
*endif()
*if([variable5 == 3])
*string("CMASS2  ")
*endif()
*if([variable5 == 18])
*string("CMASS4  ")
*endif()
*if([variable5 == 7])
*string("CDAMP2  ")
*endif()
*if([variable5 == 14])
*string("CDAMP4  ")
*endif()
*if([variable5 == 9])
*string("CONM1   ")
*endif()
*endif()
*if([variable4 == 21])
*if([variable5 == 2]) 
*string("CELAS2  ")
*endif()
*if([variable5 == 14])
*string("CELAS4  ")
*endif()
*if([variable5 == 10])
*string("CMASS2  ")
*endif()
*if([variable5 == 17])
*string("CMASS4  ")
*endif()
*if([variable5 == 4])
*string("CDAMP2  ")
*endif()
*if([variable5 == 12])
*string("CDAMP4  ")
*endif()
*endif()
*if([variable4 == 61])
*if([variable5 == 2]) 
*string("CONROD  ")
*endif()
*endif()
*if([variable4 == 104])
*if([variable5 == 1]) 
*string("CQUAD4  ")
*endif()
*if([variable5 == 2]) 
*string("CQUADR  ")
*endif()
*endif()
*if([variable4 == 103])
*if([variable5 == 1]) 
*string("CTRIA3  ")
*endif()
*if([variable5 == 2]) 
*string("CTRIAR  ")
*endif()
*endif()
*if([variable4 == 108])
*if([variable5 == 1]) 
*string("CQUAD8  ")
*endif()
*endif()
*if([variable4 == 106])
*if([variable5 == 1]) 
*string("CTRIA6  ")
*endif()
*endif()
*if([variable4 == 60])
*if([variable5 == 1]) 
*string("CBAR    ")
*endif()
*if([variable5 == 2]) 
*string("CBEAM   ")
*endif()    
*endif()
*endif()
*if([property != 22 && property != 23])
*field(integer,propertyid,8)
*else()
*if([fieldposition > 0])
*field(integer,propertyid,8)
*else()
*if([property == 22])
*string("G")
*endif()
*if([property == 23])
*string("P")
*endif()
*fieldleft(integer,propertyid,7)
*endif()
*endif()
*if([(property != 17) && (property != 19) && (property != 22) && (property != 23)])
*if([property != 15 && property != 14 && property != 16 && property != 25])
*if([property == 1 && fieldposition == 16])
*string("   ZOFFS")
*else()
*field(integer,fieldposition,8)
*endif()
*else()
*if([property == 15])
*if([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT1"))])
*if([fieldposition == 3])
*string("       E")
*endif()
*if([fieldposition == 4])
*string("       G")
*endif()
*if([fieldposition == 5])
*string("      NU")
*endif()
*if([fieldposition == 6])
*string("     RHO")
*endif()
*if([fieldposition == 7])
*string("       A")
*endif()
*if([fieldposition == 8])
*string("    TREF")
*endif()
*if([fieldposition == 9])
*string("      GE")
*endif()
*endif()
*if([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT2"))])
*if([fieldposition == 3])
*string("     G11")
*endif()
*if([fieldposition == 4])
*string("     G12")
*endif()
*if([fieldposition == 5])
*string("     G13")
*endif()
*if([fieldposition == 6])
*string("     G22")
*endif()
*if([fieldposition == 7])
*string("     G23")
*endif()
*if([fieldposition == 8])
*string("     G33")
*endif()
*if([fieldposition == 9])
*string("     RHO")
*endif()
*if([fieldposition == 12])
*string("      A1")
*endif()
*if([fieldposition == 13])
*string("      A2")
*endif()
*if([fieldposition == 14])
*string("     A12")
*endif()
*if([fieldposition == 15])
*string("    TREF")
*endif()
*if([fieldposition == 16])
*string("      GE")
*endif()
*endif()
*if([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT8"))])
*if([fieldposition == 3])
*string("      E1")
*endif()
*if([fieldposition == 4])
*string("      E2")
*endif()
*if([fieldposition == 5])
*string("    NU12")
*endif()
*if([fieldposition == 6])
*string("     G12")
*endif()
*if([fieldposition == 7])
*string("    G1,Z")
*endif()
*if([fieldposition == 8])
*string("    G2,Z")
*endif()
*if([fieldposition == 9])
*string("     RHO")
*endif()
*if([fieldposition == 12])
*string("      A1")
*endif()
*if([fieldposition == 13])
*string("      A2")
*endif()
*if([fieldposition == 14])
*string("    TREF")
*endif()
*if([fieldposition == 22])
*string("      GE")
*endif()
*endif()
*if([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT9"))])
*if([fieldposition == 3])
*string("     G11")
*endif()
*if([fieldposition == 4])
*string("     G12")
*endif()
*if([fieldposition == 5])
*string("     G13")
*endif()
*if([fieldposition == 6])
*string("     G14")
*endif()
*if([fieldposition == 7])
*string("     G15")
*endif()
*if([fieldposition == 8])
*string("     G16")
*endif()
*if([fieldposition == 9])
*string("     G22")
*endif()
*if([fieldposition == 12])
*string("     G23")
*endif()
*if([fieldposition == 13])
*string("     G24")
*endif()
*if([fieldposition == 14])
*string("     G25")
*endif()
*if([fieldposition == 15])
*string("     G26")
*endif()
*if([fieldposition == 16])
*string("     G33")
*endif()
*if([fieldposition == 17])
*string("     G34")
*endif()
*if([fieldposition == 18])
*string("     G35")
*endif()
*if([fieldposition == 19])
*string("     G36")
*endif()
*if([fieldposition == 22])
*string("     G44")
*endif()
*if([fieldposition == 23])
*string("     G45")
*endif()
*if([fieldposition == 24])
*string("     G46")
*endif()
*if([fieldposition == 25])
*string("     G55")
*endif()
*if([fieldposition == 26])
*string("     G56")
*endif()
*if([fieldposition == 27])
*string("     G66")
*endif()
*if([fieldposition == 28])
*string("     RHO")
*endif()
*if([fieldposition == 29])
*string("      A1")
*endif()
*if([fieldposition == 32])
*string("      A2")
*endif()
*if([fieldposition == 33])
*string("      A3")
*endif()
*if([fieldposition == 34])
*string("      A4")
*endif()
*if([fieldposition == 35])
*string("      A5")
*endif()
*if([fieldposition == 36])
*string("      A6")
*endif()
*if([fieldposition == 37])
*string("    TREF")
*endif()
*if([fieldposition == 38])
*string("      GE")
*endif()
*endif()
*if([(@stringequal(@getcollectorcardimage(mats,propertyid),"MAT9ORT"))])
*if([fieldposition == 3])
*string("      E1")
*endif()
*if([fieldposition == 4])
*string("      E2")
*endif()
*if([fieldposition == 5])
*string("      E3")
*endif()
*if([fieldposition == 6])
*string("    NU12")
*endif()
*if([fieldposition == 7])
*string("    NU23")
*endif()
*if([fieldposition == 8])
*string("    NU31")
*endif()
*if([fieldposition == 9])
*string("     RHO")
*endif()
*if([fieldposition == 12])
*string("     G12")
*endif()
*if([fieldposition == 13])
*string("     G23")
*endif()
*if([fieldposition == 14])
*string("     G31")
*endif()
*if([fieldposition == 15])
*string("      A1")
*endif()
*if([fieldposition == 16])
*string("      A2")
*endif()
*if([fieldposition == 17])
*string("      A3")
*endif()
*if([fieldposition == 18])
*string("    TREF")
*endif()
*if([fieldposition == 19])
*string("      GE")
*endif()
*endif()  
*endif()
*if([property == 14])
*variableset(variable4,[@getentityvalue(elems,propertyid,config)])
*variableset(variable5,[@getentityvalue(elems,propertyid,type)])
*if([variable4 == 1])
*if([variable5 == 5])
*if([fieldposition == 3])
*string("       K")
*endif()
*if([fieldposition == 8])
*string("      GE")
*endif()
*if([fieldposition == 9])
*string("       S")
*endif()
*endif()
*if([variable5 == 1])
*if([fieldposition == 5])
*string("       M")
*endif()
*if([fieldposition == 6])
*string("      X1")
*endif()
*if([fieldposition == 7])
*string("      X2")
*endif()
*if([fieldposition == 8])
*string("      X3")
*endif()
*if([fieldposition == 12])
*string("     I11")
*endif()
*if([fieldposition == 13])
*string("     I21")
*endif()
*if([fieldposition == 14])
*string("     I22")
*endif()
*if([fieldposition == 15])
*string("     I31")
*endif()
*if([fieldposition == 16])
*string("     I32")
*endif()
*if([fieldposition == 17])
*string("     I33")
*endif()
*endif()
*if([variable5 == 16])
*if([fieldposition == 3])
*string("       K")
*endif()
*if([fieldposition == 8])
*string("      GE")
*endif()
*if([fieldposition == 9])
*string("       S")
*endif()        
*endif()
*if([variable5 == 3])
*if([fieldposition == 3])
*string("       M")
*endif()
*endif()
*if([variable5 == 18])
*if([fieldposition == 3])
*string("       M")
*endif()
*endif()
*if([variable5 == 7])
*if([fieldposition == 3])
*string("       B")
*endif()
*endif()
*if([variable5 == 14])
*if([fieldposition == 3])
*string("       B")
*endif()
*endif()
*if([variable5 == 9])
*if([fieldposition == 5])
*string("     M11")
*endif()
*if([fieldposition == 6])
*string("     M21")
*endif()
*if([fieldposition == 7])
*string("     M22")
*endif()
*if([fieldposition == 8])
*string("     M31")
*endif()
*if([fieldposition == 9])
*string("     M32")
*endif()
*if([fieldposition == 12])
*string("     M33")
*endif()
*if([fieldposition == 13])
*string("     M41")
*endif()
*if([fieldposition == 14])
*string("     M42")
*endif()
*if([fieldposition == 15])
*string("     M43")
*endif()
*if([fieldposition == 16])
*string("     M44")
*endif()
*if([fieldposition == 17])
*string("     M51")
*endif()
*if([fieldposition == 18])
*string("     M52")
*endif()
*if([fieldposition == 19])
*string("     M53")
*endif()
*if([fieldposition == 22])
*string("     M54")
*endif()
*if([fieldposition == 23])
*string("     M55")
*endif()
*if([fieldposition == 24])
*string("     M61")
*endif()
*if([fieldposition == 25])
*string("     M62")
*endif()
*if([fieldposition == 26])
*string("     M63")
*endif()
*if([fieldposition == 27])
*string("     M64")
*endif()
*if([fieldposition == 28])
*string("     M65")
*endif()
*if([fieldposition == 29])
*string("     M66")
*endif()
*endif()
*endif()
*if([variable4 == 21])
*if([variable5 == 2]) 
*if([fieldposition == 3])
*string("       K")
*endif()
*if([fieldposition == 8])
*string("      GE")
*endif()
*if([fieldposition == 9])
*string("       S")
*endif()
*endif()
*if([variable5 == 14])
*if([fieldposition == 3])
*string("       K")
*endif()
*if([fieldposition == 8])
*string("      GE")
*endif()
*if([fieldposition == 9])
*string("       S")
*endif()       
*endif()
*if([variable5 == 10])
*if([fieldposition == 3])
*string("       M")
*endif()
*endif()
*if([variable5 == 17])
*if([fieldposition == 3])
*string("       M")
*endif()
*endif()
*if([variable5 == 4])
*if([fieldposition == 3])
*string("       B")
*endif()
*endif()
*if([variable5 == 12])
*if([fieldposition == 3])
*string("       B")
*endif()
*endif()
*endif()
*if([variable4 == 61])
*if([variable5 == 2]) 
*if([fieldposition == 6])
*string("       A")
*endif()
*if([fieldposition == 7])
*string("       J")
*endif()
*if([fieldposition == 8])
*string("       C")
*endif()
*if([fieldposition == 9])
*string("     NSM")
*endif()
*endif()
*endif()
*if([variable4 == 104])
*if([variable5 == 1 || variable5 == 2]) 
*if([fieldposition == 9])
*string("   ZOFFS")
*endif()
*endif()
*endif()
*if([variable4 == 103])
*if([variable5 == 1 || variable5 == 2]) 
*if([fieldposition == 8])
*string("   ZOFFS")
*endif()
*endif()
*endif()
*if([variable4 == 108])
*if([variable5 == 1]) 
*if([fieldposition == 19])
*string("   ZOFFS")
*endif()
*endif()
*endif()
*if([variable4 == 106])
*if([variable5 == 1]) 
*if([fieldposition == 13])
*string("   ZOFFS")
*endif()
*endif()
*endif()
*if([variable4 == 60])
*if([variable5 == 1 || variable5 == 2]) 
*if([fieldposition == 6])
*string("      X1")
*endif()
*if([fieldposition == 7])
*string("      X2")
*endif()
*if([fieldposition == 8])
*string("      X3")
*endif()
*if([fieldposition == 14])
*string("     W1A")
*endif()
*if([fieldposition == 15])
*string("     W2A")
*endif()
*if([fieldposition == 16])
*string("     W3A")
*endif()
*if([fieldposition == 17])
*string("     W1B")
*endif()
*if([fieldposition == 18])
*string("     W2B")
*endif()
*if([fieldposition == 19])
*string("     W3B")
*endif()
*endif()
*endif()
*endif()
*if([property == 25])
*if([fieldposition == 4])
*string("       T")
*endif()
*if([fieldposition == 5])
*string("   THETA")
*endif()
*endif()
*endif()
*else()
*if([property == 22 || property == 23])
*if([fieldposition > 0])
*field(integer,fieldposition,8)
*else()
*if([fieldposition == -1])
*string("   T    ")
*else()
*string("  THETA ")
*endif()
*endif()
*else()
*if([fieldposition == 1])
*string("DIM1    ")
*endif()
*if([fieldposition == 2])
*string("DIM2    ")
*endif()
*if([fieldposition == 3])
*string("DIM3    ")
*endif()
*if([fieldposition == 4])
*string("DIM4    ")
*endif()
*if([fieldposition == 5])
*string("DIM5    ")
*endif()
*if([fieldposition == 6])
*string("DIM6    ")
*endif()
*if([fieldposition == 1000])
*string("NSM     ")
*endif()
*endif()
*endif()
*if([pmin == 0.0])
*string("        ")
*else()
*field(real,pmin,8)
*endif()
*if([pmax == 0.0])
*string("        ")
*else()
*field(real,pmax,8)
*endif()
*if([functionid==0])
*field(real,c0,8)
*else()
*field(integer,functionid,8)
*endif()
*end()
*if([functionid==0])
*uservariableset(#optidvprelvar1,1)
*if([desvarlistmax > 0])
*string("+       ")
*loopif([#optidvprelvar1 <= desvarlistmax])
*pointerset(pointer1,desvarlist,[#optidvprelvar1 - 1])
*pointerset(pointer2,coeff,[#optidvprelvar1 - 1])
*fieldleft(integer,pointer1.pointervalue,8)
*fieldleft(real,pointer2.pointervalue,8)
*if([#optidvprelvar1 % 4 == 0])
*if([#optidvprelvar1 < desvarlistmax])
*end()
*string("+       ")
*endif()
*endif()
*uservariableset(#optidvprelvar1,[#optidvprelvar1+1])
*endloop()
*end()
*endif()
*else()
*if([desvarlistmax > 0])
*variableset(variable1,1)
*counterset(counter1,1)
*string("+       ")
*string("DESVAR  ")
*loopif([variable1 <= desvarlistmax])
*pointerset(pointer1,desvarlist,counter1-1)
*field(integer,pointer1.pointervalue,8)
*if([(variable1%7)==0])
*if([variable1 < desvarlistmax])
*end()
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*counterset(counter1,[counter1+1])
*endloop()
*if([(variable1%7)!=0])
*end()
*endif()
*endif()
*if([tableentrylistmax > 0])
*variableset(variable1,1)
*counterset(counter1,1)
*string("+       ")
*string("DTABLE  ")
*loopif([variable1 <= tableentrylistmax])
*pointerset(pointer1,tableentrylist,counter1-1)
*variableset(variable9,[@getinternalid(14,pointer1.pointervalue)])
*field(string,[@getentityvalue(tables,variable9,name)],8)
*if([(variable1%7)==0])
*if([variable1 < tableentrylistmax])
*end()
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*counterset(counter1,[counter1+1])
*endloop()
*if([(variable1%7)!=0])
*end()
*endif()
*endif()
*endif()
*output()

*desvarlinks()
*beginmenu()
*menuif([functype == 0 && functionid == 0])
*menustring("DLINK   ")
*menuelse()
*menustring("DLINK2  ")
*menuendif()
*menufield(ID,integer,id,8)
*menufield(DDVID,integer,desvarid,8)
*menuif([functype == 0 && functionid == 0])
*menufield(C0,real,c0,8)
*menufield(CMULT,real,cmult,8)
*menuelse()
*menuif([functionid != 0])
*menufield(EQUID,integer,functionid,8)
*menuelse()
*menuattributecreate($blank,"SUM")
*menuif([functype == 1])
*menuattributeset($blank,"SUM")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuif([functype == 2])
*menuattributeset($blank,"AVG")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuif([functype == 3])
*menuattributeset($blank,"SSQ")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuif([functype == 4])
*menuattributeset($blank,"RSS")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuif([functype == 5])
*menuattributeset($blank,"MAX")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuif([functype == 6])
*menuattributeset($blank,"MIN")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuif([functype == 7])
*menuattributeset($blank,"AVGABS")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuif([functype == 8])
*menuattributeset($blank,"MAXABS")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuif([functype == 9])
*menuattributeset($blank,"MINABS")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuif([functype == 10])
*menuattributeset($blank,"SUMABS")
*menufield(FUNC,string,[$blank],8)
*menuendif()
*menuendif()
*menuendif()
*menuvariableset(variable1,1)
*menuvariableset(variable2,0)
*menuif([functype == 0 && functionid == 0])
*beginrepeat(desvarlistmax)
repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,desvarlist,[variable1 - 1])
*menupointerset(pointer2,coeff,[variable1 - 1])
*menufield(IDV,integer,pointer1.pointervalue,8)
*menufield(COEFF,real,pointer2.pointervalue,8)
*menuif([variable1 == (4*variable2+2)])
*menuvariableset(variable2,[variable2+1])
*menuif([variable1 < desvarlistmax])
*menulineend()
*menustring("        ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menulineend()
*menuelse()
*menulineend()
*menuif([desvarlistmax > 0])
*menuvariableset(variable1,1)
*menustring("        ")
*menustring("DESVAR  ")
*beginrepeat(desvarlistmax)
repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,desvarlist,counter1-1)
*menufield(DVID,integer,pointer1.pointervalue,8)
*menuif([(variable1%7)==0])
*menuif([variable1 < desvarlistmax])
*menulineend()
*menustring("                ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menuif([(variable1%7)!=0])
*menulineend()
*menuendif()
*menuendif()
*menuif([tableentrylistmax > 0])
*menuvariableset(variable1,1)
*menustring("        ")
*menustring("DTABLE  ")
*beginrepeat(tableentrylistmax)
repeatwrap(72)
*repeatcounter(1)
*menupointerset(pointer1,tableentrylist,counter1-1)
*menuvariableset(variable9,[@getinternalid(14,pointer1.pointervalue)])
*menufield(LABL,string,[@getentityvalue(tables,variable9,name)],8)
*menuif([(variable1%7)==0])
*menuif([variable1 < tableentrylistmax])
*menulineend()
*menustring("                ")
*menuendif()
*menuendif()
*menuvariableset(variable1,[variable1+1])
*endrepeat()
*menuif([(variable1%7)!=0])
*menulineend()
*menuendif()
*menuendif()
*menuendif()
*endmenu()
*format()
*if([@writehmcomments()])
*string("$HMNAME DLINKS  ")
*field(integer,id,8)
*fieldleft(string,name,0)
*end()
*endif()  
*if([functype == 0 && functionid == 0])
*string("DLINK   ")
*else()
*string("DLINK2  ")
*endif()
*fieldleft(integer,id,8)
*fieldleft(integer,desvarid,8)
*if([functype == 0 && functionid == 0])
*fieldleft(real,c0,8)
*fieldleft(real,cmult,8)
*uservariableset(#optidesvarlink1,1)
*uservariableset(#optidesvarlink2,0)
*loopif([#optidesvarlink1 <= desvarlistmax])
*pointerset(pointer1,desvarlist,[#optidesvarlink1 - 1])
*pointerset(pointer2,coeff,[#optidesvarlink1 - 1])
*fieldleft(integer,pointer1.pointervalue,8)
*fieldleft(real,pointer2.pointervalue,8)
*if([#optidesvarlink1 == (4*#optidesvarlink2+2)])
*uservariableset(#optidesvarlink2,[#optidesvarlink2+1])
*if([#optidesvarlink1 < desvarlistmax])
*end()
*string("+       ")
*endif()
*endif()
*uservariableset(#optidesvarlink1,[#optidesvarlink1+1])
*endloop()
*end()
*else()
*if([functionid != 0])
*fieldleft(integer,functionid,8)
*else()
*if([functype == 1])
*string("SUM     ")
*endif()
*if([functype == 2])
*string("AVG     ")
*endif()
*if([functype == 3])
*string("SSQ     ")
*endif()
*if([functype == 4])
*string("RSS     ")
*endif()
*if([functype == 5])
*string("MAX     ")
*endif()
*if([functype == 6])
*string("MIN     ")
*endif()
*if([functype == 7])
*string("AVGABS  ")
*endif()
*if([functype == 8])
*string("MAXABS  ")
*endif()
*if([functype == 9])
*string("MINABS  ")
*endif()
*if([functype == 10])
*string("SUMABS  ")
*endif()
*endif()
*end()
*if([desvarlistmax > 0])
*variableset(variable1,1)
*counterset(counter1,1)
*string("+       ")
*string("DESVAR  ")
*loopif([variable1 <= desvarlistmax])
*pointerset(pointer1,desvarlist,counter1-1)
*field(integer,pointer1.pointervalue,8)
*if([(variable1%7)==0])
*if([variable1 < desvarlistmax])
*end()
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*counterset(counter1,[counter1+1])
*endloop()
*if([(variable1%7)!=0])
*end()
*endif()
*endif()
*if([tableentrylistmax > 0])
*variableset(variable1,1)
*counterset(counter1,1)
*string("+       ")
*string("DTABLE  ")
*loopif([variable1 <= tableentrylistmax])
*pointerset(pointer1,tableentrylist,counter1-1)
*variableset(variable9,[@getinternalid(14,pointer1.pointervalue)])
*field(string,[@getentityvalue(tables,variable9,name)],8)
*if([(variable1%7)==0])
*if([variable1 < tableentrylistmax])
*end()
*string("+       ")
*string("        ")
*endif()
*endif()
*variableset(variable1,[variable1+1])
*counterset(counter1,[counter1+1])
*endloop()
*if([(variable1%7)!=0])
*end()
*endif()
*endif()
*endif()
*output()

*optiresponses()
*before()
*treataslocal(counter19)
*counterset(counter19,0)
*format()
*if([counter19==0])
*if([@count(optiresponses,0,0)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  OPTIRESPONSES Data")
*end()
*string("$$")
*end()
*endif()  
*endif()  
*counterset(counter19,1)    
*endif()
*if([response == 52])
*string("DSYSID  ")
*fieldleft(integer,id,8)
*fieldleft(string,name,8)
*counterset(counter2,1)
*loopif([counter2 <= $DSYSID_NUM])
*fieldleft(integer,[@attributearrayvalue($DSYSID_RID,counter2)],8)
*if([@stringequal(@attributearrayvalue($DSYSID_SID_STR,counter2),"SID")==0])
*fieldleft(string,[@attributearrayvalue($DSYSID_SID_STR,counter2)],8)
*else()
*fieldleft(integer,[@attributearrayvalue($DSYSID_SID,counter2)],8)
*endif()  
*fieldleft(real,[@attributearrayvalue($DSYSID_T,counter2)],8)
*if([@defaultstatus($DSYSID_W)])
*string("        ")
*else()
*fieldleft(real,[@attributearrayvalue($DSYSID_W,counter2)],8)
*endif()

*if([$DSYSID_NUM > 1 && counter2 < $DSYSID_NUM])
*end()
*string("+       ")
*string("        ")
*string("        ")
*endif()
*counterinc(counter2)
*endloop()
*end()
*else()
*if([(response != 35) && (response != 40)])
*string("DRESP1  ")
*fieldleft(integer,id,8)
*fieldleft(string,name,8)
*else()
*if([response == 35])
*string("DRESP2  ")
*fieldleft(integer,id,8)
*fieldleft(string,name,8)
*else()
*string("DRESP3  ")
*fieldleft(integer,id,8)
*fieldleft(string,name,8)
*fieldleft(string,$DRESP3_GROUP,8)
*fieldleft(string,$DRESP3_FUNC,8)
*endif()
*endif()

*if([response == 29])
*string("MASS    ")
*if([property == 0])
*string("        ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 3])
*string("PSHEAR  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property == 15])
*string("MAT     ")
*endif()
*endif()

*if([response == 30])
*string("MASSFRAC")
*if([property == 0])
*string("        ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property == 15])
*string("MAT     ")
*endif()
*endif()

*if([response == 2])
*string("VOLUME  ")
*if([property == 0])
*string("        ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 3])
*string("PSHEAR  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 20])
*string("PWELD   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 11])
*string("PBUSH   ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property == 15])
*string("MAT     ")
*endif()
*endif()

*if([response == 3])
*string("VOLFRAC ")
*if([property == 0])
*string("        ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 20])
*string("PWELD   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 11])
*string("PBUSH   ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property == 15])
*string("MAT     ")
*endif()
*endif()

*if([response == 36])
*string("COG     ")
*if([property == 0])
*string("        ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property == 15])
*string("MAT     ")
*endif()
*endif()

*if([response == 37])
*string("INERTIA ")
*if([property == 0])
*string("        ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property == 15])
*string("MAT     ")
*endif()
*endif()

*if([response == 31])
*string("COMP    ")
*if([property == 0])
*string("        ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 11])
*string("PBUSH   ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property == 15])
*string("MAT     ")
*endif()
*endif()

*if([response == 5])
*string("FREQ    ")
*string("        ")
*endif()
*if([response == 6])
*string("LAMA    ")
*string("        ")
*endif()
*if([response == 7 || response == 14 || response == 15 || response == 16 || response == 62])
*if([response == 7 || response == 62])
*string("DISP    ")
*endif()
*if([response == 14])
*string("FRDISP  ")
*endif()
*if([response == 15])
*string("FRVELO  ")
*endif()
*if([response == 16])
*string("FRACCL  ")
*endif()
*string("        ")
*endif()
*if([response == 42])
*string("FRPRES  ")
*string("        ")
*endif()
*if([response == 43])
*string("PSDDISP ")
*string("        ")
*endif()
*if([response == 44])
*string("PSDVELO ")
*string("        ")
*endif()
*if([response == 45])
*string("PSDACCL ")
*string("        ")
*endif()
*if([response == 46])
*string("PSDPRES ")
*string("        ")
*endif()
*if([response == 47])
*string("RMSDISP ")
*string("        ")
*endif()
*if([response == 48])
*string("RMSVELO ")
*string("        ")
*endif()
*if([response == 49])
*string("RMSACCL ")
*string("        ")
*endif()
*if([response == 50])
*string("RMSPRES ")
*string("        ")
*endif()
*if([response == 59])
*string("FRERP   ")
*string("        ")
*endif()
*if([response == 60])
*string("SPCFORCE")
*string("        ")
*endif()
*if([response == 61])
*string("GPFORCE ")
*if([$GPFORCE_NODEID > 0])
*field(integer,[$GPFORCE_NODEID],8)
*else()
*string("        ")
*endif()
*endif()    
*if([response == 8 || response == 9 || response == 18 || response == 38 || response == 41])
*if([response == 8])
*string("STRAIN  ")
*endif()
*if([response == 9])
*string("STRESS  ")
*endif()
*if([response == 18])
*string("FRSTRS  ")
*endif()
*if([response == 38])
*string("FRSTRN  ")
*endif()
*if([response == 41])
*string("FATIGUE ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 14])
*string("ELEM    ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property == 3])
*string("PSHEAR  ")
*endif()
*if([property != 1 && property != 2 && property != 3 && property != 4 && property != 5 && property != 6 && property != 7 && property != 8 && property != 14 && property != 17 && property != 19 && property != 22])
*string("        ")
*endif()
*endif()
*if([response == 10 || response == 19])
*if([response == 10])
*string("FORCE   ")
*endif()
*if([response == 19])
*string("FRFORC  ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 5])
*string("PBAR    ")
*endif()
*if([property == 6])
*string("PBEAM   ")
*endif()
*if([property == 7])
*string("PELAS   ")
*endif()
*if([property == 8])
*string("PROD    ")
*endif()
*if([property == 11])
*string("PBUSH   ")
*endif()
*if([property == 14])
*string("ELEM    ")
*endif()
*if([property == 17])
*string("PBARL   ")
*endif()
*if([property == 19])
*string("PBEAML  ")
*endif()
*if([property != 1 && property != 2 && property != 4 && property != 5 && property != 6 && property != 7 && property != 8 && property != 11 && property != 14 && property != 17 && property != 19 && property != 22])
*string("        ")
*endif()
*endif()
*if([response == 11 || response == 12 || response == 13])
*if([response == 11])
*string("CSTRESS ")
*endif()
*if([response == 12])
*string("CSTRAIN ")
*endif()
*if([response == 13])
*string("CFAILURE")
*endif()
*if([property == 4 || property == 23])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 25])
*string("PLY     ")
*endif()
*if([property == 14])
*string("ELEM    ")
*endif()
*if([property != 4 && property != 14 && property != 22 && property != 16 && property != 23 && property != 25])
*string("        ")
*endif()
*endif()
*if([response == 53 || response == 54 || response == 56 || response == 57])
*if([response == 53])
*string("PSDSTRS ")
*endif()
*if([response == 54])
*string("PSDSTRN ")
*endif()
*if([response == 56])
*string("RMSSTRS ")
*endif()
*if([response == 57])
*string("RMSSTRN ")
*endif()
*if([property == 1])
*string("PSHELL  ")
*endif()
*if([property == 4])
*string("PCOMP   ")
*endif()
*if([property == 22])
*string("PCOMPG  ")
*endif()
*if([property == 2])
*string("PSOLID  ")
*endif()
*if([property == 3])
*string("PSHEAR  ")
*endif()
*if([property == 23])
*string("PCOMPP  ")
*endif()     
*if([property == 14])
*string("ELEM    ")
*endif()
*if([property != 1 && property != 2 && property != 3 && property != 4 && property != 14 && property != 22 && property != 23])
*string("        ")
*endif()
*endif()  
*if([response == 35])
*if([functionid != 0])
*field(integer,functionid,8)
*else()
*if([attribute_b == -1.0])
*string("     SUM")
*endif()
*if([attribute_b == -2.0])
*string("     AVG")
*endif()
*if([attribute_b == -3.0])
*string("     SSQ")
*endif()
*if([attribute_b == -4.0])
*string("     RSS")
*endif()
*if([attribute_b == -5.0])
*string("     MAX")
*endif()
*if([attribute_b == -6.0])
*string("     MIN")
*endif()
*if([attribute_b == -7.0])
*string("  AVGABS")
*endif()
*if([attribute_b == -8.0])
*string("  MAXABS")
*endif()
*if([attribute_b == -9.0])
*string("  MINABS")
*endif()
*if([attribute_b == -10.0])
*string("  SUMABS")
*endif()
*endif()
*endif()

*if([response == 32])
*string("WCOMP   ")
*string("        ")
*endif()
*if([response == 33])
*string("WFREQ   ")
*string("        ")
*endif()
*if([response == 34])
*string("COMB    ")
*string("        ")
*endif()
*if([response == 39])
*string("BEADFRAC")
*string("        ")
*string("        ")
*string("        ")
*string("COMB    ")
*endif()

*if([response == 51])
*string("TEMP    ")
*string("        ")
*string("        ")
*string("        ")
*string("        ")
*endif()

*if([response != 39 && response != 51])
*if([region == 0])
*string("        ")
*else()
*fieldright(integer,region,8)
*endif() 
*endif()
*if([ response == 40])
*fieldright(integer,$DRESP3_RESP,8)
*fieldright(integer,$DRESP3_MAXRESP,8)
*endif()

*variableset(variable8,0)
*if([response == 8 || response == 9])
*if([property == 1 || property == 4 || property == 22])
*if([attribute_a == 18])
*string("    SVMB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 19])
*string("    SMPB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 23])
*string("   SMIPB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("    SVM1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 17])
*string("    SVM2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("    SMP1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("   SMIP1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 15])
*string("    SMP2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 16])
*string("   SMIP2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 20])
*string("     SXB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("     SX1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 11])
*string("     SX2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 21])
*string("     SYB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     SY1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 12])
*string("     SY2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 22])
*string("    SXYB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("    SXY1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 13])
*string("    SXY2")
*variableset(variable8,1)
*endif()
*endif()
*if([property == 2])
*if([attribute_a == 13])
*string("     SVM")
*variableset(variable8,1)
*endif()
*if([attribute_a == 801])
*string("     SMP")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("    SMAP")
*variableset(variable8,1)
*endif()
*if([attribute_a == 16])
*string("    SMDP")
*variableset(variable8,1)
*endif()
*if([attribute_a == 22])
*string("    SMIP")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     SXX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 14])
*string("     SYY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 20])
*string("     SZZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     SXY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 15])
*string("     SYZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 21])
*string("     SXZ")
*variableset(variable8,1)
*endif()
*endif()
*if([property == 7])
*string("       S")
*variableset(variable8,1)
*endif()
*if([property == 8])
*if([attribute_a == 3])
*string("     SAB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 2])
*string("      SA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("      SB")
*variableset(variable8,1)
*endif()
*endif()
*if([property == 3])
*if([attribute_a == 2])
*string("   SHMAX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("   SHAVG")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("   SHMRG")
*variableset(variable8,1)
*endif()
*endif()
*if([property == 5 || property == 17])
*if([property == 5 || response == 8])
*if([attribute_a == 109])
*string("    SALL")
*variableset(variable8,1)
*endif()
*if([attribute_a == 2])
*string("     SAC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("     SAD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     SAE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     SAF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 10])
*string("     SBC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 11])
*string("     SBD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 12])
*string("     SBE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 13])
*string("     SBF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("   SAMAX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 14])
*string("   SBMAX")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*if([property == 6 || property == 19])
*if([property == 6 || response == 8])
*if([attribute_a == 109])
*string("    SALL")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     SAC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     SAD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     SAE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     SAF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 104])
*string("     SBC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 105])
*string("     SBD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 106])
*string("     SBE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 107])
*string("     SBF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("   SAMAX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 108])
*string("   SBMAX")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*if([response == 9])
*if([property == 17 || property == 19])
*pointerset(pointer1,attribute1_list,[0])
*variableset(variable9,[@getinternalid(3,pointer1.pointervalue)])
*if([attribute_a == 1])
*string("     S1N")
*variableset(variable8,1)
*endif()
*if([attribute_a == 2])
*string("     S2N")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("     S3N")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     S4N")
*variableset(variable8,1)
*endif()
*if([attribute_a == 99])
*string("   SNMAX")
*variableset(variable8,1)
*endif()
*if([property == 17])
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"BAR"))])
*variableset(variable3,1)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"BOX"))])
*variableset(variable3,2)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"BOX1"))])
*variableset(variable3,3)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"CHAN"))])
*variableset(variable3,4)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"CHAN1"))])
*variableset(variable3,5)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"CHAN2"))])
*variableset(variable3,6)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"CROSS"))])
*variableset(variable3,7)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"H"))])
*variableset(variable3,8)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"HAT"))])
*variableset(variable3,9)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"I"))])
*variableset(variable3,10)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"I1"))])
*variableset(variable3,11)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"L"))])
*variableset(variable3,12)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"ROD"))])
*variableset(variable3,13)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"T"))])
*variableset(variable3,14)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"T1"))])
*variableset(variable3,15)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"T2"))])
*variableset(variable3,16)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"TUBE"))])
*variableset(variable3,17)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbarlcstype),"Z"))])
*variableset(variable3,18)
*endif()
*else()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"BAR"))])
*variableset(variable3,1)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"BOX"))])
*variableset(variable3,2)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"BOX1"))])
*variableset(variable3,3)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"CHAN"))])
*variableset(variable3,4)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"CHAN1"))])
*variableset(variable3,5)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"CHAN2"))])
*variableset(variable3,6)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"CROSS"))])
*variableset(variable3,7)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"H"))])
*variableset(variable3,8)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"HAT"))])
*variableset(variable3,9)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"I"))])
*variableset(variable3,10)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"I1"))])
*variableset(variable3,11)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"L"))])
*variableset(variable3,12)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"ROD"))])
*variableset(variable3,13)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"T"))])
*variableset(variable3,14)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"T1"))])
*variableset(variable3,15)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"T2"))])
*variableset(variable3,16)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"TUBE"))])
*variableset(variable3,17)
*endif()
*if([(@stringequal(@getentityvalue(props,variable9,$pbeamlcstype),"Z"))])
*variableset(variable3,18)
*endif()
*endif()
*if([(variable3 == 2) || (variable3 == 3) || (variable3 == 13) || (variable3 == 17)])
*if([attribute_a == 101])
*string("     S1S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 102])
*string("     S2S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 103])
*string("     S3S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 104])
*string("     S4S")
*variableset(variable8,1)
*endif()
*endif()
*if([(variable3 != 13) && (variable3 != 17)])
*if([attribute_a == 105])
*string("     S5S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 106])
*string("     S6S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 107])
*string("     S7S")
*variableset(variable8,1)
*endif()
*if([(variable3 != 14) && (variable3 != 15) && (variable3 != 16)])
*if([attribute_a == 108])
*string("     S8S")
*variableset(variable8,1)
*endif()
*if([(variable3 != 1) && (variable3 != 7) && (variable3 != 12)])
*if([attribute_a == 109])
*string("     S9S")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*if([(variable3 == 2) || (variable3 == 3) || (variable3 == 9)])
*if([attribute_a == 110])
*string("    S10S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 111])
*string("    S11S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 112])
*string("    S12S")
*variableset(variable8,1)
*endif()
*endif()
*if([(variable3 == 9)])
*if([attribute_a == 113])
*string("    S13S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 114])
*string("    S14S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 115])
*string("    S15S")
*variableset(variable8,1)
*endif()
*endif()
*if([attribute_a == 199])
*string("   SSMAX")
*variableset(variable8,1)
*endif()
*if([(variable3 == 2) || (variable3 == 3) || (variable3 == 7)])
*if([attribute_a == 201])
*string("     S1V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 202])
*string("     S2V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 203])
*string("     S3V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 204])
*string("     S4V")
*variableset(variable8,1)
*endif()
*endif()
*if([attribute_a == 205])
*string("     S5V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 206])
*string("     S6V")
*variableset(variable8,1)
*endif()
*if([(variable3 != 13) && (variable3 != 17)])
*if([attribute_a == 207])
*string("     S7V")
*variableset(variable8,1)
*endif()
*if([(variable3 != 14) && (variable3 != 15) && (variable3 != 16)])
*if([attribute_a == 208])
*string("     S8V")
*variableset(variable8,1)
*endif()
*if([(variable3 != 1) && (variable3 != 7) && (variable3 != 12)])
*if([attribute_a == 209])
*string("     S9V")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*if([(variable3 == 2) || (variable3 == 3) || (variable3 == 9)])
*if([attribute_a == 210])
*string("    S10V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 211])
*string("    S11V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 212])
*string("    S12V")
*variableset(variable8,1)
*endif()
*endif()
*if([(variable3 == 9)])
*if([attribute_a == 213])
*string("    S13V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 214])
*string("    S14V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 215])
*string("    S15V")
*variableset(variable8,1)
*endif()
*endif()
*if([attribute_a == 299])
*string("   SVMAX")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*if([property == 14])
*pointerset(pointer1,attribute1_list,[0])
*variableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*if([variable1 == 103 || variable1 == 106])
*if([attribute_a == 18])
*string("    SVMB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 19])
*string("    SMPB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 23])
*string("   SMIPB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("    SVM1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 17])
*string("    SVM2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("    SMP1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("   SMIP1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 15])
*string("    SMP2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 16])
*string("   SMIP2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 20])
*string("     SXB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("     SX1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 11])
*string("     SX2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 21])
*string("     SYB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     SY1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 12])
*string("     SY2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 22])
*string("    SXYB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("    SXY1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 13])
*string("    SXY2")
*variableset(variable8,1)
*endif()
*endif()
*if([variable1 == 104 || variable1 == 108])
*pointerset(pointer1,attribute1_list,[0])
*variableset(variable2,[@getentityvalue(elems,pointer1.pointervalue,type)])
*if([variable2 == 1 || variable2 == 2])
*if([attribute_a == 18])
*string("    SVMB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 19])
*string("    SMPB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 23])
*string("   SMIPB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("    SVM1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 17])
*string("    SVM2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("    SMP1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("   SMIP1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 15])
*string("    SMP2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 16])
*string("   SMIP2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 20])
*string("     SXB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("     SX1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 11])
*string("     SX2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 21])
*string("     SYB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     SY1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 12])
*string("     SY2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 22])
*string("    SXYB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("    SXY1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 13])
*string("    SXY2")
*variableset(variable8,1)
*endif()
*endif()
*if([variable2 == 3])
*if([attribute_a == 2])
*string("   SHMAX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("   SHAVG")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("   SHMRG")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*if([variable1 == 204 || variable1 == 205 || variable1 == 206 || variable1 == 208 || variable1 == 210 ||
variable1 == 213 || variable1 == 215 || variable1 == 220])
*if([attribute_a == 13])
*string("     SVM")
*variableset(variable8,1)
*endif()
*if([attribute_a == 801])
*string("     SMP")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("    SMAP")
*variableset(variable8,1)
*endif()
*if([attribute_a == 16])
*string("    SMDP")
*variableset(variable8,1)
*endif()
*if([attribute_a == 22])
*string("    SMIP")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     SXX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 14])
*string("     SYY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 20])
*string("     SZZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     SXY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 15])
*string("     SYZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 21])
*string("     SXZ")
*variableset(variable8,1)
*endif()
*endif()
*if([variable1 == 1 || variable1 == 21])
*string("       S")
*variableset(variable8,1)
*endif()
*if([variable1== 61])
*if([attribute_a == 3])
*string("     SAB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 2])
*string("      SA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("      SB")
*variableset(variable8,1)
*endif()
*endif()
*if([response == 9])
*if([variable1 == 60])
*variableset(variable2,[@getentityvalue(elems,pointer1.pointervalue,propertyid)])
*variableset(variable2,[@getinternalid(3,variable2)])
*variableset(variable4,1)
*if([(@stringequal(@getcollectorcardimage(props,variable2),"PBAR"))])
*variableset(variable4,1)
*endif()
*if([(@stringequal(@getcollectorcardimage(props,variable2),"PBARL"))])
*variableset(variable4,2)
*endif()
*if([(@stringequal(@getcollectorcardimage(props,variable2),"PBEAM"))])
*variableset(variable4,3)
*endif()
*if([(@stringequal(@getcollectorcardimage(props,variable2),"PBEAML"))])
*variableset(variable4,4)
*endif()
*if([variable4 == 1 || variable4 == 3])
*if([attribute_a == 109])
*string("    SALL")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     SAC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     SAD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     SAE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     SAF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 104])
*string("     SBC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 105])
*string("     SBD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 106])
*string("     SBE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 107])
*string("     SBF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("   SAMAX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 108])
*string("   SBMAX")
*variableset(variable8,1)
*endif()
*endif()
*if([variable4 == 2 || variable4 == 4])
*if([variable4 == 2])
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"BAR"))])
*variableset(variable3,1)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"BOX"))])
*variableset(variable3,2)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"BOX1"))])
*variableset(variable3,3)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"CHAN"))])
*variableset(variable3,4)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"CHAN1"))])
*variableset(variable3,5)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"CHAN2"))])
*variableset(variable3,6)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"CROSS"))])
*variableset(variable3,7)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"H"))])
*variableset(variable3,8)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"HAT"))])
*variableset(variable3,9)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"I"))])
*variableset(variable3,10)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"I1"))])
*variableset(variable3,11)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"L"))])
*variableset(variable3,12)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"ROD"))])
*variableset(variable3,13)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"T"))])
*variableset(variable3,14)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"T1"))])
*variableset(variable3,15)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"T2"))])
*variableset(variable3,16)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"TUBE"))])
*variableset(variable3,17)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbarlcstype),"Z"))])
*variableset(variable3,18)
*endif()
*else()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"BAR"))])
*variableset(variable3,1)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"BOX"))])
*variableset(variable3,2)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"BOX1"))])
*variableset(variable3,3)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"CHAN"))])
*variableset(variable3,4)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"CHAN1"))])
*variableset(variable3,5)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"CHAN2"))])
*variableset(variable3,6)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"CROSS"))])
*variableset(variable3,7)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"H"))])
*variableset(variable3,8)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"HAT"))])
*variableset(variable3,9)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"I"))])
*variableset(variable3,10)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"I1"))])
*variableset(variable3,11)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"L"))])
*variableset(variable3,12)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"ROD"))])
*variableset(variable3,13)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"T"))])
*variableset(variable3,14)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"T1"))])
*variableset(variable3,15)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"T2"))])
*variableset(variable3,16)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"TUBE"))])
*variableset(variable3,17)
*endif()
*if([(@stringequal(@getentityvalue(props,variable2,$pbeamlcstype),"Z"))])
*variableset(variable3,18)
*endif()
*endif()
*if([attribute_a == 1])
*string("     S1N")
*variableset(variable8,1)
*endif()
*if([attribute_a == 2])
*string("     S2N")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("     S3N")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     S4N")
*variableset(variable8,1)
*endif()
*if([attribute_a == 99])
*string("   SNMAX")
*variableset(variable8,1)
*endif()
*if([(variable3 == 2) || (variable3 == 3) || (variable3 == 13) || (variable3 == 17)])
*if([attribute_a == 101])
*string("     S1S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 102])
*string("     S2S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 103])
*string("     S3S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 104])
*string("     S4S")
*variableset(variable8,1)
*endif()
*endif()
*if([(variable3 != 13) && (variable3 != 17)])
*if([attribute_a == 105])
*string("     S5S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 106])
*string("     S6S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 107])
*string("     S7S")
*variableset(variable8,1)
*endif()
*if([(variable3 != 14) && (variable3 != 15) && (variable3 != 16)])
*if([attribute_a == 108])
*string("     S8S")
*variableset(variable8,1)
*endif()
*if([(variable3 != 1) && (variable3 != 7) && (variable3 != 12)])
*if([attribute_a == 109])
*string("     S9S")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*if([(variable3 == 2) || (variable3 == 3) || (variable3 == 9)])
*if([attribute_a == 110])
*string("    S10S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 111])
*string("    S11S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 112])
*string("    S12S")
*variableset(variable8,1)
*endif()
*endif()
*if([(variable3 == 9)])
*if([attribute_a == 113])
*string("    S13S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 114])
*string("    S14S")
*variableset(variable8,1)
*endif()
*if([attribute_a == 115])
*string("    S15S")
*variableset(variable8,1)
*endif()
*endif()
*if([attribute_a == 199])
*string("   SSMAX")
*variableset(variable8,1)
*endif()
*if([(variable3 == 2) || (variable3 == 3) || (variable3 == 7)])
*if([attribute_a == 201])
*string("     S1V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 202])
*string("     S2V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 203])
*string("     S3V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 204])
*string("     S4V")
*variableset(variable8,1)
*endif()
*endif()
*if([attribute_a == 205])
*string("     S5V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 206])
*string("     S6V")
*variableset(variable8,1)
*endif()
*if([(variable3 != 13) && (variable3 != 17)])
*if([attribute_a == 207])
*string("     S7V")
*variableset(variable8,1)
*endif()
*if([(variable3 != 14) && (variable3 != 15) && (variable3 != 16)])
*if([attribute_a == 208])
*string("     S8V")
*variableset(variable8,1)
*endif()
*if([(variable3 != 1) && (variable3 != 7) && (variable3 != 12)])
*if([attribute_a == 209])
*string("     S9V")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*if([(variable3 == 2) || (variable3 == 3) || (variable3 == 9)])
*if([attribute_a == 210])
*string("    S10V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 211])
*string("    S11V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 212])
*string("    S12V")
*variableset(variable8,1)
*endif()
*endif()
*if([(variable3 == 9)])
*if([attribute_a == 213])
*string("    S13V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 214])
*string("    S14V")
*variableset(variable8,1)
*endif()
*if([attribute_a == 215])
*string("    S15V")
*variableset(variable8,1)
*endif()
*endif()
*if([attribute_a == 299])
*string("   SVMAX")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*else()
*variableset(variable7,[@getentityvalue(elems,pointer1.pointervalue,type)])
*if([variable1 == 60 && variable7 == 1])
*if([attribute_a == 109])
*string("    SALL")
*variableset(variable8,1)
*endif()
*if([attribute_a == 2])
*string("     SAC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("     SAD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     SAE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     SAF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 10])
*string("     SBC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 11])
*string("     SBD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 12])
*string("     SBE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 13])
*string("     SBF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("   SAMAX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 14])
*string("   SBMAX")
*variableset(variable8,1)
*endif()
*endif()
*if([variable1 == 60 && variable7 == 2])
*if([attribute_a == 109])
*string("    SALL")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     SAC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     SAD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     SAE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     SAF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 104])
*string("     SBC")
*variableset(variable8,1)
*endif()
*if([attribute_a == 105])
*string("     SBD")
*variableset(variable8,1)
*endif()
*if([attribute_a == 106])
*string("     SBE")
*variableset(variable8,1)
*endif()
*if([attribute_a == 107])
*string("     SBF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("   SAMAX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 108])
*string("   SBMAX")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*endif()

*if([response == 18 || response == 38])
*variableset(variable6,[(attribute_a % 1000)])
*if([variable6 == 9 || variable6 == 17 || variable6 == 18])
*string("  ")
*variableset(variable8,1)   
*else()
*if([attribute_a > 4000])
*string("P-")
*variableset(variable8,1)
*else()
*if([attribute_a > 3000])
*string("M-")
*variableset(variable8,1)
*else()
*if([attribute_a > 2000])
*string("I-")
*variableset(variable8,1)
*else()
*if([attribute_a > 1000])
*string("R-")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*endif()

*if([property == 1 || property == 4 || property == 22])
*if([variable6 == 18])
*string("SVMB  ")
*endif()
*if([variable6 == 19])
*string("SMPB  ")
*endif()
*if([variable6 == 23])
*string("SMIPB ")
*endif()
*if([variable6 == 9])
*string("SVM1  ")
*endif()
*if([variable6 == 17])
*string("SVM2  ")
*endif()
*if([variable6 == 7])
*string("SMP1  ")
*endif()
*if([variable6 == 8])
*string("SMIP1 ")
*endif()
*if([variable6 == 15])
*string("SMP2  ")
*endif()
*if([variable6 == 16])
*string("SMIP2 ")
*endif()
*if([variable6 == 20])
*string("SXB   ")
*endif()
*if([variable6 == 3])
*string("SX1   ")
*endif()
*if([variable6 == 11])
*string("SX2   ")
*endif()
*if([variable6 == 21])
*string("SYB   ")
*endif()
*if([variable6 == 4])
*string("SY1   ")
*endif()
*if([variable6 == 12])
*string("SY2   ")
*endif()
*if([variable6 == 22])
*string("SXYB  ")
*endif()
*if([variable6 == 5])
*string("SXY1  ")
*endif()
*if([variable6 == 13])
*string("SXY2  ")
*endif()
*endif()
*if([property == 2])
*if([variable6 == 13])
*string("SVM   ")
*endif()
*if([variable6 == 8])
*string("SMP   ")
*endif()
*if([variable6 == 6])
*string("SXX   ")
*endif()
*if([variable6 == 14])
*string("SYY   ")
*endif()
*if([variable6 == 20])
*string("SZZ   ")
*endif()
*if([variable6 == 7])
*string("SXY   ")
*endif()
*if([variable6 == 15])
*string("SYZ  ")
*endif()
*if([variable6 == 21])
*string("SXZ   ")
*endif()
*endif()
*if([property == 7])
*string("S     ")
*endif()
*if([property == 8])
*if([variable6 == 3])
*string("SAB   ")
*endif()
*if([variable6 == 2])
*string("SA    ")
*endif()
*if([variable6 == 4])
*string("SB    ")
*endif()
*endif()
*if([property == 5 || property == 17])
*if([variable6 == 109])
*string("SALL  ")
*endif()
*if([variable6 == 2])
*string("SAC   ")
*endif()
*if([variable6 == 3])
*string("SAD   ")
*endif()
*if([variable6 == 4])
*string("SAE   ")
*endif()
*if([variable6 == 5])
*string("SAF   ")
*endif()
*if([variable6 == 10])
*string("SBC   ")
*endif()
*if([variable6 == 11])
*string("SBD   ")
*endif()
*if([variable6 == 12])
*string("SBE   ")
*endif()
*if([variable6 == 13])
*string("SBF   ")
*endif()
*if([variable6 == 7])
*string("SAMAX ")
*endif()
*if([variable6 == 14])
*string("SBMAX ")
*endif()
*endif()
*if([property == 6 || property == 19])
*if([variable6 == 109])
*string("SALL  ")
*endif()
*if([variable6 == 4])
*string("SAC   ")
*endif()
*if([variable6 == 5])
*string("SAD   ")
*endif()
*if([variable6 == 6])
*string("SAE   ")
*endif()
*if([variable6 == 7])
*string("SAF   ")
*endif()
*if([variable6 == 104])
*string("SBC   ")
*endif()
*if([variable6 == 105])
*string("SBD   ")
*endif()
*if([variable6 == 106])
*string("SBE   ")
*endif()
*if([variable6 == 107])
*string("SBF   ")
*endif()
*if([variable6 == 8])
*string("SAMAX ")
*endif()
*if([variable6 == 108])
*string("SBMAX ")
*endif()
*endif()
*if([property == 14])
*pointerset(pointer1,attribute1_list,[0])
*variableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*if([variable1== 104 || variable1 == 103 || variable1== 108 || variable1 == 106])
*if([variable6 == 18])
*string("SVMB  ")
*endif()
*if([variable6 == 19])
*string("SMPB  ")
*endif()
*if([variable6 == 23])
*string("SMIPB ")
*endif()
*if([variable6 == 9])
*string("SVM1  ")
*endif()
*if([variable6 == 17])
*string("SVM2  ")
*endif()
*if([variable6 == 7])
*string("SMP1  ")
*endif()
*if([variable6 == 8])
*string("SMIP1 ")
*endif()
*if([variable6 == 15])
*string("SMP2  ")
*endif()
*if([variable6 == 16])
*string("SMIP2 ")
*endif()
*if([variable6 == 20])
*string("SXB   ")
*endif()
*if([variable6 == 3])
*string("SX1   ")
*endif()
*if([variable6 == 11])
*string("SX2   ")
*endif()
*if([variable6 == 21])
*string("SYB   ")
*endif()
*if([variable6 == 4])
*string("SY1   ")
*endif()
*if([variable6 == 12])
*string("SY2   ")
*endif()
*if([variable6 == 22])
*string("SXYB  ")
*endif()
*if([variable6 == 5])
*string("SXY1  ")
*endif()
*if([variable6 == 13])
*string("SXY2  ")
*endif()
*endif()
*if([variable1 == 204 || variable1 == 205 || variable1 == 206 || variable1 == 208 || variable1 == 210 ||
variable1 == 213 || variable1 == 215 || variable1 == 220])
*if([variable6 == 13])
*string("SVM   ")
*endif()
*if([variable6 == 8])
*string("SMP   ")
*endif()
*if([variable6 == 6])
*string("SXX   ")
*endif()
*if([variable6 == 14])
*string("SYY   ")
*endif()
*if([variable6 == 20])
*string("SZZ   ")
*endif()
*if([variable6 == 7])
*string("SXY   ")
*endif()
*if([variable6 == 15])
*string("SYZ   ")
*endif()
*if([variable6 == 21])
*string("SXZ   ")
*endif()
*endif()
*if([variable1 == 21 || variable1 == 1])
*string("S     ")
*endif()
*if([variable1== 61])
*if([variable6 == 3])
*string("SAB   ")
*endif()
*if([variable6 == 2])
*string("SA    ")
*endif()
*if([variable6 == 4])
*string("SB    ")
*endif()
*endif()
*if([variable1 == 60])
*if([variable6 == 109])
*string("SALL  ")
*endif()
*if([variable6 == 4])
*string("SAC   ")
*endif()
*if([variable6 == 5])
*string("SAD   ")
*endif()
*if([variable6 == 6])
*string("SAE   ")
*endif()
*if([variable6 == 7])
*string("SAF   ")
*endif()
*if([variable6 == 104])
*string("SBC   ")
*endif()
*if([variable6 == 105])
*string("SBD   ")
*endif()
*if([variable6 == 106])
*string("SBE   ")
*endif()
*if([variable6 == 107])
*string("SBF   ")
*endif()
*if([variable6 == 8])
*string("SAMAX ")
*endif()
*if([variable6 == 108])
*string("SBMAX ")
*endif()
*endif()
*endif()
*endif()
*if([response == 53 || response == 54 || response == 56 || response == 57])
*variableset(variable6,[(attribute_a % 1000)])
*if([property == 1 || property == 3 || property == 4 || property == 22 || property == 23])
*if([variable6 == 20])
*string("SXB   ")
*endif()
*if([variable6 == 3])
*string("SX1   ")
*endif()
*if([variable6 == 11])
*string("SX2   ")
*endif()
*if([variable6 == 21])
*string("SYB   ")
*endif()
*if([variable6 == 4])
*string("SY1   ")
*endif()
*if([variable6 == 12])
*string("SY2   ")
*endif()
*if([variable6 == 22])
*string("SXYB  ")
*endif()
*if([variable6 == 5])
*string("SXY1  ")
*endif()
*if([variable6 == 13])
*string("SXY2  ")
*endif()
*endif()
*if([property == 2])
*if([variable6 == 6])
*string("SXX   ")
*endif()
*if([variable6 == 14])
*string("SYY   ")
*endif()
*if([variable6 == 20])
*string("SZZ   ")
*endif()
*if([variable6 == 7])
*string("SXY   ")
*endif()
*if([variable6 == 15])
*string("SYZ  ")
*endif()
*if([variable6 == 21])
*string("SXZ   ")
*endif()
*endif()
*if([property == 14])
*pointerset(pointer1,attribute1_list,[0])
*variableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*if([variable1== 104 || variable1 == 103 || variable1== 108 || variable1 == 106])
*if([variable6 == 20])
*string("SXB   ")
*endif()
*if([variable6 == 3])
*string("SX1   ")
*endif()
*if([variable6 == 11])
*string("SX2   ")
*endif()
*if([variable6 == 21])
*string("SYB   ")
*endif()
*if([variable6 == 4])
*string("SY1   ")
*endif()
*if([variable6 == 12])
*string("SY2   ")
*endif()
*if([variable6 == 22])
*string("SXYB  ")
*endif()
*if([variable6 == 5])
*string("SXY1  ")
*endif()
*if([variable6 == 13])
*string("SXY2  ")
*endif()
*endif()
*if([variable1 == 204 || variable1 == 205 || variable1 == 206 || variable1 == 208 || variable1 == 210 ||
variable1 == 213 || variable1 == 215 || variable1 == 220])
*if([variable6 == 6])
*string("SXX   ")
*endif()
*if([variable6 == 14])
*string("SYY   ")
*endif()
*if([variable6 == 20])
*string("SZZ   ")
*endif()
*if([variable6 == 7])
*string("SXY   ")
*endif()
*if([variable6 == 15])
*string("SYZ   ")
*endif()
*if([variable6 == 21])
*string("SXZ   ")
*endif()
*endif()
*endif()
*endif()

*if([response == 11])
*if([property == 4 || property == 14 || property == 22 || property == 16 || property == 23 || property == 25])
*if([attribute_a == 3])
*string("      S1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("      S2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     S12")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     S1Z")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     S2Z")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("    SMAP")
*variableset(variable8,1)
*endif()
*if([attribute_a == 10])
*string("    SMIP")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*if([response == 12])
*if([property == 4 || property == 14 || property == 22 || property == 16 || property == 23 || property == 25])
*variableset(variable6,[(attribute_a % 1000)])
*if([variable6 == 3 || variable6 == 4])
*string("     ")
*endif()
*if([variable6 == 5])
*string("    ")
*endif()  
*if([variable6 == 9 || variable6 == 10])
*string("   ")
*endif()

*if([attribute_a > 3000])
*string("M")
*else()        
*if([attribute_a > 2000])
*string("T")
*else()
*if([attribute_a > 1000])
*string(" ")
*endif()
*endif()   
*endif()

*if([variable6 == 3])
*string("S1")
*variableset(variable8,1)
*endif()
*if([variable6 == 4])
*string("S2")
*variableset(variable8,1)
*endif()
*if([variable6 == 5])
*string("S12")
*variableset(variable8,1)
*endif()
*if([variable6 == 9])
*string("SMAP")
*variableset(variable8,1)
*endif()
*if([variable6 == 10])
*string("SMIP")
*variableset(variable8,1)
*endif()
*endif()
*endif()

*if([response == 13])
*if([property == 4 || property == 14 || property == 22 || property == 16 || property == 23 || property == 25])
*if([attribute_a == 1])
*string("    HILL")
*variableset(variable8,1)
*endif()
*if([attribute_a == 2])
*string("    HOFF")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("    TSAI")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("    STRN")
*variableset(variable8,1)
*endif()
*endif()
*endif()

*if([response == 10])
*if([property == 1 || property == 4 || property == 22])
*if([attribute_a == 2])
*string("      NX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("      NY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     NXY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("      MX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("      MY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     MXY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("     SXZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("     SYZ")
*variableset(variable8,1)
*endif()
*endif()
*if([property == 7])
*string("       F")
*variableset(variable8,1)
*endif()
*if([property == 8])
*if([attribute_a == 2])
*string("      FA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("      FB")
*variableset(variable8,1)
*endif()
*endif()
*if([property == 5 || property == 17])
*if([attribute_a == 2])
*string("     MA1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("     MA2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     MB1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     MB2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     SA1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     SA2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("      FA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("      TA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 54])
*string("     SB1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 55])
*string("     SB2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 56])
*string("      FB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 57])
*string("      TB")
*variableset(variable8,1)
*endif()
*endif()
*if([property == 6 || property == 19])
*if([attribute_a == 4])
*string("     MA1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     MA2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 94])
*string("     MB1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 95])
*string("     MB2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     SA1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     SA2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("      FA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("      TA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 96])
*string("     SB1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 97])
*string("     SB2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 98])
*string("      FA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 99])
*string("      TA")
*variableset(variable8,1)
*endif()
*endif()
*if([property == 11])
*if([attribute_a == 2])
*string("      FX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("      FY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("      FZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("      MX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("      MY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("      MZ")
*variableset(variable8,1)
*endif()
*endif()
*if([property == 14])
*pointerset(pointer1,attribute1_list,[0])
*variableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*variableset(variable2,[@getentityvalue(elems,pointer1.pointervalue,type)])
*if([(variable1== 104 || variable1 == 103 || variable1== 108 || variable1 == 106) && (variable2 == 1 || variable2 == 2)])
*if([attribute_a == 2])
*string("      NX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("      NY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     NXY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("      MX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("      MY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     MXY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("     SXZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("     SYZ")
*variableset(variable8,1)
*endif()
*endif()
*if([(variable1 == 1 && (variable2 == 2 || variable2 == 5)) ||
(variable1 == 21 && (variable2 == 1 || variable2 == 2))])
*string("       F")
*variableset(variable8,1)
*endif()
*if([variable1 == 21 && variable2 == 6])
*if([attribute_a == 2])
*string("      FX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("      FY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("      FZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("      MX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("      MY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("      MZ")
*variableset(variable8,1)
*endif()
*endif()
*if([variable1 == 61 && variable2 == 1])
*if([attribute_a == 2])
*string("      FA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("      FB")
*variableset(variable8,1)
*endif()
*endif()
*if([variable1 == 60 && variable2 == 1])
*if([attribute_a == 2])
*string("     MA1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("     MA2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("     MB1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     MB2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     SA1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     SA2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("      FA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("      TA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 54])
*string("     SB1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 55])
*string("     SB2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 56])
*string("      FB")
*variableset(variable8,1)
*endif()
*if([attribute_a == 57])
*string("      TB")
*variableset(variable8,1)
*endif()
*endif()
*if([variable1 == 60 && variable2 == 2])
*if([attribute_a == 4])
*string("     MA1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("     MA2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 94])
*string("     MB1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 95])
*string("     MB2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("     SA1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("     SA2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("      FA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 9])
*string("      TA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 96])
*string("     SB1")
*variableset(variable8,1)
*endif()
*if([attribute_a == 97])
*string("     SB2")
*variableset(variable8,1)
*endif()
*if([attribute_a == 98])
*string("      FA")
*variableset(variable8,1)
*endif()
*if([attribute_a == 99])
*string("      TA")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()

*if([response == 19])
*if([attribute_a > 4000])
*string("P-")
*variableset(variable8,1)
*else()
*if([attribute_a > 3000])
*string("M-")
*variableset(variable8,1)
*else()
*if([attribute_a > 2000])
*string("I-")
*variableset(variable8,1)
*else()
*if([attribute_a > 1000])
*string("R-")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*variableset(variable6,[(attribute_a % 1000)])
*if([property == 1 || property == 4 || property == 22])
*if([variable6 == 2])
*string("NX    ")
*endif()
*if([variable6 == 3])
*string("NY    ")
*endif()
*if([variable6 == 4])
*string("NXY   ")
*endif()
*if([variable6 == 5])
*string("MX    ")
*endif()
*if([variable6 == 6])
*string("MY    ")
*endif()
*if([variable6 == 7])
*string("MXY   ")
*endif()
*if([variable6 == 8])
*string("SXZ   ")
*endif()
*if([variable6 == 9])
*string("SYZ   ")
*endif()
*endif()
*if([property == 7])
*string("F     ")
*endif()
*if([property == 8])
*if([variable6 == 2])
*string("FA    ")
*endif()
*if([variable6 == 4])
*string("FB    ")
*endif()
*endif()
*if([property == 5 || property == 17])
*if([variable6 == 2])
*string("MA1   ")
*endif()
*if([variable6 == 3])
*string("MA2   ")
*endif()
*if([variable6 == 4])
*string("MB1   ")
*endif()
*if([variable6 == 5])
*string("MB2   ")
*endif()
*if([variable6 == 6])
*string("SA1   ")
*endif()
*if([variable6 == 7])
*string("SA2   ")
*endif()
*if([variable6 == 8])
*string("FA    ")
*endif()
*if([variable6 == 9])
*string("TA    ")
*endif()
*if([variable6 == 54])
*string("SB1   ")
*endif()
*if([variable6 == 55])
*string("SB2   ")
*endif()
*if([variable6 == 56])
*string("FB    ")
*endif()
*if([variable6 == 57])
*string("TB    ")
*endif()
*endif()
*if([property == 6 || property == 19])
*if([variable6 == 4])
*string("MA1   ")
*endif()
*if([variable6 == 5])
*string("MA2   ")
*endif()
*if([variable6 == 94])
*string("MB1   ")
*endif()
*if([variable6 == 95])
*string("MB2   ")
*endif()
*if([variable6 == 6])
*string("SA1   ")
*endif()
*if([variable6 == 7])
*string("SA2   ")
*endif()
*if([variable6 == 8])
*string("FA    ")
*endif()
*if([variable6 == 9])
*string("TA    ")
*endif()
*if([variable6 == 96])
*string("SB1   ")
*endif()
*if([variable6 == 97])
*string("SB2   ")
*endif()
*if([variable6 == 98])
*string("FA    ")
*endif()
*if([variable6 == 99])
*string("TA    ")
*endif()
*endif()
*if([property == 11])
*if([variable6 == 2])
*string("FX    ")
*endif()
*if([variable6 == 3])
*string("FY    ")
*endif()
*if([variable6 == 4])
*string("FZ    ")
*endif()
*if([variable6 == 5])
*string("MX    ")
*endif()
*if([variable6 == 6])
*string("MY    ")
*endif()
*if([variable6 == 7])
*string("MZ    ")
*endif()
*endif()
*if([property == 14])
*pointerset(pointer1,attribute1_list,[0])
*variableset(variable1,[@getentityvalue(elems,pointer1.pointervalue,config)])
*variableset(variable2,[@getentityvalue(elems,pointer1.pointervalue,type)])
*if([(variable1== 104 || variable1 == 103 || variable1== 108 || variable1 == 106) && (variable2 == 1 || variable2 == 2)])
*if([variable6 == 2])
*string("NX    ")
*endif()
*if([variable6 == 3])
*string("NY    ")
*endif()
*if([variable6 == 4])
*string("NXY   ")
*endif()
*if([variable6 == 5])
*string("MX    ")
*endif()
*if([variable6 == 6])
*string("MY    ")
*endif()
*if([variable6 == 7])
*string("MXY   ")
*endif()
*if([variable6 == 8])
*string("SXZ   ")
*endif()
*if([variable6 == 9])
*string("SYZ   ")
*endif()
*endif()
*if([(variable1 == 1 && (variable2 == 2 || variable2 == 5)) ||
(variable1 == 21 && (variable2 == 1 || variable2 == 2))])
*string("F     ")
*endif()
*if([variable1 == 21 && variable2 == 6])
*if([variable6 == 2])
*string("FX    ")
*endif()
*if([variable6 == 3])
*string("FY    ")
*endif()
*if([variable6 == 4])
*string("FZ    ")
*endif()
*if([variable6 == 5])
*string("MX    ")
*endif()
*if([variable6 == 6])
*string("MY    ")
*endif()
*if([variable6 == 7])
*string("MZ    ")
*endif()
*endif()
*if([variable1 == 61 && variable2 == 1])
*if([variable6 == 2])
*string("FA    ")
*endif()
*if([variable6 == 4])
*string("FB    ")
*endif()
*endif()
*if([variable1 == 60 && variable2 == 1])
*if([variable6 == 2])
*string("MA1   ")
*endif()
*if([variable6 == 3])
*string("MA2   ")
*endif()
*if([variable6 == 4])
*string("MB1   ")
*endif()
*if([variable6 == 5])
*string("MB2   ")
*endif()
*if([variable6 == 6])
*string("SA1   ")
*endif()
*if([variable6 == 7])
*string("SA2   ")
*endif()
*if([variable6 == 8])
*string("FA    ")
*endif()
*if([variable6 == 9])
*string("TA    ")
*endif()
*if([variable6 == 54])
*string("SB1   ")
*endif()
*if([variable6 == 55])
*string("SB2   ")
*endif()
*if([variable6 == 56])
*string("FB    ")
*endif()
*if([variable6 == 57])
*string("TB    ")
*endif()
*endif()
*if([variable1 == 60 && variable2 == 2])
*if([variable6 == 4])
*string("MA1   ")
*endif()
*if([variable6 == 5])
*string("MA2   ")
*endif()
*if([variable6 == 94])
*string("MB1   ")
*endif()
*if([variable6 == 95])
*string("MB2   ")
*endif()
*if([variable6 == 6])
*string("SA1   ")
*endif()
*if([variable6 == 7])
*string("SA2   ")
*endif()
*if([variable6 == 8])
*string("FA    ")
*endif()
*if([variable6 == 9])
*string("TA    ")
*endif()
*if([variable6 == 96])
*string("SB1   ")
*endif()
*if([variable6 == 97])
*string("SB2   ")
*endif()
*if([variable6 == 98])
*string("FA    ")
*endif()
*if([variable6 == 99])
*string("TA    ")
*endif()
*endif()
*endif()
*endif()

*if([response == 41])
*if([attribute_a == 1])
*string("LIFE    ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 2])
*string("DAMAGE  ")
*variableset(variable8,1)
*endif()
*endif()

*if([response != 35 && response != 39 && response != 40 && response != 51])
*if([attribute_a == 0])
*string("        ") 
*variableset(variable8,1)
*else()
*if([response == 36 || response == 37])
*if([response == 36])
*if([attribute_a == 1])
*string("       X")
*variableset(variable8,1)
*endif()  
*if([attribute_a == 2])
*string("       Y")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("       Z")
*variableset(variable8,1)
*endif()
*endif()      
*if([response == 37])
*if([attribute_a == 1])
*string("      XX")
*variableset(variable8,1)
*endif()  
*if([attribute_a == 2])
*string("      YY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("      ZZ")
*variableset(variable8,1)
*endif()         
*if([attribute_a == 4])
*string("      XY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("      XZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("      YZ")
*variableset(variable8,1)
*endif()                  
*endif()  
*else()
*if([response == 7 || response == 62])
*if([attribute_a == 1])
*string("      TX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 2])
*string("      TY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 3])
*string("      TZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 4])
*string("      RX")
*variableset(variable8,1)
*endif()
*if([attribute_a == 5])
*string("      RY")
*variableset(variable8,1)
*endif()
*if([attribute_a == 6])
*string("      RZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 7])
*string("    TXYZ")
*variableset(variable8,1)
*endif()
*if([attribute_a == 8])
*string("    RXYZ")
*variableset(variable8,1)
*endif()
*endif()    
*if([(response < 7 || response > 13) && response != 62])
*if([attribute_a < 1000])
*if([response != 41])
*if([response == 43 || response == 44 || response == 45 ||
response == 47 || response == 48 || response == 49])
*string("      ")
*if([attribute_a == 1])
*string("TX")
*endif()
*if([attribute_a == 2])
*string("TY")
*endif()
*if([attribute_a == 3])
*string("TZ")
*endif()
*if([attribute_a == 4])
*string("RX")
*endif()
*if([attribute_a == 5])
*string("RY")
*endif()
*if([attribute_a == 6])
*string("RZ")
*endif()
*variableset(variable8,1)    
*else()
*if([response == 46 || response == 50])
*string("    PRES")
*variableset(variable8,1)
*else()
*if([response == 53 || response == 54 || response == 56 || response == 57])
*variableset(variable8,1)
*else()
*if([response != 18 && response != 38])
*field(integer,attribute_a,8)
*variableset(variable8,1)
*else()
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*endif()
*else()
*if([response == 14 || response == 15 || response == 16])
*variableset(variable6,[(attribute_a % 1000)])
*if([$DRESP1_NORMAL_VELOCITY == 1])
*string("  ")
*else()
*if([variable6 < 7])
*string("    ")
*else()
*string("  ")
*endif()
*endif()
*if([attribute_a > 4000])
*string("P-")
*variableset(variable8,1)
*else()
*if([attribute_a > 3000])
*string("M-")
*variableset(variable8,1)
*else()
*if([attribute_a > 2000])
*string("I-")
*variableset(variable8,1)
*else()
*if([attribute_a > 1000])
*string("R-")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*if([$DRESP1_NORMAL_VELOCITY == 1])
*string("NORM")
*else()              
*if([variable6 == 1])
*string("TX")
*endif()
*if([variable6 == 2])
*string("TY")
*endif()
*if([variable6 == 3])
*string("TZ")
*endif()
*if([variable6 == 4])
*string("RX")
*endif()
*if([variable6 == 5])
*string("RY")
*endif()
*if([variable6 == 6])
*string("RZ")
*endif()
*if([variable6 == 7])
*string("TXYZ")
*endif()
*if([variable6 == 8])
*string("RXYZ")
*endif()
*endif()
*endif()
*if([response == 42])
*if([attribute_a > 4000])
*string("  P-")
*variableset(variable8,1)
*else()
*if([attribute_a > 3000])
*string("  M-")
*variableset(variable8,1)
*else()
*if([attribute_a > 2000])
*string("  I-")
*variableset(variable8,1)
*else()
*if([attribute_a > 1000])
*string("  R-")
*variableset(variable8,1)
*endif()
*endif()
*endif()
*endif()
*string("PRES")
*endif() 
*endif()
*endif()  
*endif() 
*endif()
*endif()

*if([variable8 == 0])
*if([(attribute_a > 0) && (response != 10)])
*field(integer,attribute_a,8)
*endif()
*endif()


*if([functionid == 0 && response != 35 && response != 39 && response != 40 && response != 51])
*if([attribute_b == 0.0])
*if([response < 11 || response > 13])
*string("        ")
*else()
*if([property != 16 && property != 25])
*string("     ALL")
*else()
*string("        ")
*endif()
*endif()
*else()
*if([attribute_b > 0.0])
*if([response == 11 || response == 12 || response == 13])
*if([property != 16 && property != 25])
*fieldright(integer,[(10*attribute_b)/10],8)
*else()
*string("        ")
*endif()
*else()
*if([response == 9 || response == 62])
*fieldright(integer,attribute_b,8)
*else()
*fieldright(real,attribute_b,8)
*endif()
*endif()
*else()
*if([response == 11 || response == 12 || response == 13])
*string("G")
*fieldleft(integer,[-1*attribute_b],7)
*else()
*if([attribute_b == 0.0])
*string("        ")
*endif()
*if([attribute_b == -1.0])
*string("     SUM")
*endif()
*if([attribute_b == -2.0])
*string("     AVG")
*endif()
*if([attribute_b == -3.0])
*string("     SSQ")
*endif()
*if([attribute_b == -4.0])
*string("     RSS")
*endif()
*if([attribute_b == -5.0])
*string("     MAX")
*endif()
*if([attribute_b == -6.0])
*string("     MIN")
*endif()
*if([attribute_b == -7.0])
*string("  AVGABS")
*endif()
*if([attribute_b == -8.0])
*string("  MAXABS")
*endif()
*if([attribute_b == -9.0])
*string("  MINABS")
*endif()
*if([attribute_b == -10.0])
*string("  SUMABS")
*endif()
*endif()
*endif()  
*endif()
*endif()

*counterset(counter1,1)
*if([attribute1max > 0])
*if([attribute1max <= 1])
*loopif([counter1 <= attribute1max])
*pointerset(pointer1,attribute1_list,[counter1 - 1])
*fieldright(integer,pointer1.pointervalue,8)
*counterinc(counter1)
*endloop()
*else()
*loopif([counter1 <= 1])
*pointerset(pointer1,attribute1_list,[counter1 - 1])
*fieldright(integer,pointer1.pointervalue,8)
*counterinc(counter1)
*endloop()
*if([counter1 <= attribute1max])
*end()
*string("+       ")
*endif()
*endif()
*counterset(counter2,0)
*loopif([counter1 <= attribute1max])
*pointerset(pointer1,attribute1_list,[counter1 - 1])
*fieldright(integer,pointer1.pointervalue,8)
*counterinc(counter1)
*counterinc(counter2)
*if([counter2 % 8 == 0])
*counterset(counter2,0)
*if([counter1 <= attribute1max])
*end()
*string("+       ")
*endif()
*endif()
*endloop()
*endif()
*end()
*if([(response == 35) || (response == 40)])
*if([desvarlistmax+tableentrylistmax+responselistmax+function_loadsteplistmax+nodelistmax+dvprelmax > 0])
*if([desvarlistmax > 0])
*string("+       DESVAR  ")
*counterset(counter1,1)
*loopif([counter1 <= desvarlistmax])
*pointerset(pointer1,desvarlist,[counter1-1])
*fieldright(integer,pointer1.pointervalue,8)
*if([counter1 % 7 == 0])
*if([counter1 < desvarlistmax])
*end()
*string("+               ")
*endif()
*endif()
*counterinc(counter1)
*endloop()
*end()
*endif()
*if([tableentrylistmax > 0])
*string("+       DTABLE  ")
*counterset(counter1,1)
*loopif([counter1 <= tableentrylistmax])
*pointerset(pointer1,tableentrylist,[counter1-1])
*variableset(variable9,[@getinternalid(14,pointer1.pointervalue)])
*field(string,[@getentityvalue(tables,variable9,name)],8)
*if([counter1 % 7 == 0])
*if([counter1 < tableentrylistmax])
*end()
*string("+               ")
*endif()
*endif()
*counterinc(counter1)
*endloop()
*end()
*endif()
*if([responselistmax > 0 || function_loadsteplistmax > 0])
*if([function_loadsteplistmax == 0])
*counterset(counter1,0)
*counterset(counter2,0)
*counterset(counter3,0)
*counterset(counter4,0)

*loopif([counter1 < responselistmax])
*pointerset(pointer1,responselist,counter1)
*variableset(variable5,[@getentityvalue(optiresponses,pointer1.pointervalue,response)])
*if([ variable5!=35 && variable5!=40])
*if([counter2==0])
*string("+       DRESP1  ")
*endif()
*fieldright(integer,pointer1.pointervalue,8)
*counterset(counter2,1)
*counterinc(counter4)
*endif()
*counterinc(counter1)
*if([counter4 == 7])
*counterset(counter4,0)
*if([counter1 < responselistmax])
*end()
*string("+               ")
*endif()
*endif()
*endloop()

*counterset(counter1,0)
*counterset(counter3,0)
*counterset(counter4,0)

*loopif([counter1 < responselistmax])
*pointerset(pointer1,responselist,counter1)
*if([@getentityvalue(optiresponses,pointer1.pointervalue,response)==35])
*if([counter3==0])
*if([counter2==1])
*end()
*endif()
*string("+       DRESP2  ")
*endif()
*fieldright(integer,pointer1.pointervalue,8)
*counterset(counter3,1)
*counterinc(counter4)
*endif()
*counterinc(counter1)
*if([counter4 == 7])
*counterset(counter4,0)
*if([counter1 < responselistmax])
*end()
*string("+               ")
*endif()
*endif()
*endloop()
*end()
*else()
*counterset(counter1,0)
*counterset(counter2,0)
*counterset(counter3,0)
*counterset(counter4,0)

*loopif([counter1 < function_loadsteplistmax])
*pointerset(pointer1,responselist,counter1)
*variableset(variable5,[@getentityvalue(optiresponses,pointer1.pointervalue,response)])
*if([ variable5!=35 && variable5!=40])
*if([counter2==0])
*string("+       DRESP1L ")
*counterset(counter2,1)
*endif()
*fieldright(integer,pointer1.pointervalue,8)
*pointerset(pointer1,function_loadsteplist,counter1)
*fieldright(integer,pointer1.pointervalue,8)
*counterinc(counter4)
*endif()
*counterinc(counter1)
*if([counter4 == 3])
*counterset(counter4,0)
*if([counter1 < responselistmax])
*end()
*string("+               ")
*endif()
*endif()
*endloop()

*counterset(counter1,0)
*counterset(counter3,0)
*counterset(counter4,0)
*counterset(counter5,0)

*loopif([counter1 < function_loadsteplistmax])
*pointerset(pointer1,responselist,counter1)
*if([@getentityvalue(optiresponses,pointer1.pointervalue,response)==35])
*if([counter3==0])
*if([counter2==1])
*end()
*counterset(counter2,0)
*endif()
*string("+       DRESP2L ")
*counterset(counter3,1)
*endif()
*fieldright(integer,pointer1.pointervalue,8)
*pointerset(pointer1,function_loadsteplist,counter1)
*fieldright(integer,pointer1.pointervalue,8)
*counterinc(counter4)
*endif()
*counterinc(counter1)
*if([counter4 == 3])
*counterset(counter4,0)
*if([counter1 < responselistmax])
*end()
*string("+               ")
*endif()
*endif()
*endloop()
*end()
*endif() 
*endif()
*if([nodelistmax > 0])
*string("+       DGRID   ")
*counterset(counter1,1)
*loopif([counter1 <= nodelistmax])
*pointerset(pointer1,nodelist,[counter1-1])
*fieldright(integer,pointer1.pointervalue,8)
*pointerset(pointer1,coordinate_type_list,[counter1-1])
*fieldright(integer,pointer1.pointervalue,8)
*if([counter1 % 3 == 0])
*if([counter1 < nodelistmax])
*end()
*string("+               ")
*endif()
*endif()
*counterinc(counter1)
*endloop()
*end()
*endif()
*if( [(response == 35) && (dvprelmax > 0)])
*string("+       DVPREL1 ")
*counterset(counter1,1)
*loopif([counter1 <= dvprelmax])
*pointerset(pointer1,dvprellist,[counter1-1])
*fieldright(integer,pointer1.pointervalue,8)
*if([counter1 % 7 == 0])
*if([counter1 < dvprelmax])
*end()
*string("+               ")
*endif()
*endif()
*counterinc(counter1)
*endloop()
*end()
*endif()
*endif()
*endif()
*if([((response >= 8) && (response <= 13)) || (response == 18) || (response == 19) || (response == 38) || (response == 41) ||
(response == 53) || (response == 54) || (response == 56) || (response == 57)])
*variableset(variable3,[@attributearraylength($Response_ExcludedElems)])
*if([variable3 > 0])
*string("+       ")
*string("EXCL    ")
*variableset(variable4,0)
*variableset(variable5,0)
*variableset(variable6,0)  

*loopif([variable4 < variable3])
*if([@attributearrayvalue($Response_ExcludedElems,variable4+1) > 0])
*field(integer,[@attributearrayvalue($Response_ExcludedElems,variable4+1)],8)
*variableset(variable5,0)
*variableset(variable6,[variable6 + 1])  
*else()
*variableset(variable5,1)
*endif()
*variableset(variable4,[variable4+1])

*if([variable5 == 0])
*if([variable6 % 7 == 0])
*if([variable4 < variable3])
*end()
*string("+               ")
*endif()
*endif()
*endif()
*endloop()
*end()
*endif()
*endif()
*if([response == 43 || response == 44 || response == 45 || response == 46 || response == 47 || response == 48 || 
response == 49 || response == 50 || response == 53 || response == 54 || response == 56 || response == 57])
*if([$RESPONSE_RANDPS_ID > 0])
*string("        ")
*string("EXTN    ")
*field(integer,$RESPONSE_RANDPS_ID,8)
*end()
*endif()
*endif()
*endif()
*output()

*dequations()
*beginmenu()
*menuif([$DVPREL_EQ_SWITCH == 1])
*menustring("DVPREL2 ")
*menustring("   ID   ")
*menustring("  TYPE  ")
*menustring("   PID  ")
*menustring("  PNAME ")
*menustring("        ")
*menustring("        ")
*menustring("  EQID  ")
*menulineend()
*menuoption(DESIGN_VARIABLES,$dvp_Designvars)
*menucase(0)
*menucase(1)
*menustring("DESVAR ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($dvp_ndesignvars)
*menufield(desvar,integer,$dvp_desvar,8)
*menuentitytype(designvars)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $dvp_ndesignvars])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuoption(TABLE_ENTRIES,$dvp_Tableentries)
*menucase(0)
*menucase(1)
*menustring("DTABLE ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($dvp_ntableentries)
*menufield(tableentr,integer,$dvp_tableentr,8)
*menuentitytype(tables)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $dvp_ntableentries])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuendif()
*menuif([$DLINK2_EQ_SWITCH == 1])
*menustring("DLINK2  ")
*menustring("   ID   ")
*menustring("  DDVID ")
*menustring("  EQID  ")
*menulineend()
*menuoption(DESIGN_VARIABLES,$dlink2_Designvars)
*menucase(0)
*menucase(1)
*menustring("DESVAR ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($dlink2_ndesignvars)
*menufield(DVID,integer,$dlink2_desvar,8)
*menuentitytype(designvars)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $dlink2_ndesignvars])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuoption(TABLE_ENTRIES,$dlink2_Tableentries)
*menucase(0)
*menucase(1)
*menustring("DTABLE ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($dlink2_ntableentries)
*menufield(DTBL,integer,$dlink2_tableentr,8)
*menuentitytype(tables)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $dlink2_ntableentries])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuendif()
*menuif([($OPTIFUN_EQ_SWITCH == 1) || ($OPTIFUN_EQ_SWITCH == -1)])  
*menustring("DRESP2  ")
*menustring("   ID   ")
*menustring("  LABEL ")
*menustring("   EQN  ")
*menustring(" REGION ")
*menulineend()
*menuoption(DESIGN_VARIABLES,$Designvars)
*menucase(0)
*menuattributeset($ndesignvars,0) 
*menucase(1)
*menustring("DESVAR ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($ndesignvars                 )
*menufield(desvar,integer,$desvar,8)
*menuentitytype(designvars)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $ndesignvars])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuoption(TABLE_ENTRIES,$Tableentries)
*menucase(0)
*menuattributeset($ntableentries,0) 
*menucase(1)
*menustring("DTABLE ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($ntableentries)
*menufield(tableentr,integer,$tableentr,8)
*menuentitytype(tables)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $ntableentries])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuif([$ResponsesLoadstep==0])
*menuoption(RESPONSES,$Responses)
*menucase(0)
*menuattributeset($nresponses,0) 
*menucase(1)
*menustring("DRESP1/2")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($nresponses)
*menufield(response,integer,$resp,8)
*menuentitytype(optiresponses)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $nresponses])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuendif()
*menuif([$Responses==0])
*menuoption(RESPONSES_BY_LOADSTEP,$ResponsesLoadstep)
*menucase(0)
*menuattributeset($nresponsesl,0) 
*menucase(1)
*menustring("DRESP1/2L")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($nresponsesl)
*menufield(response,integer,$resp,8)
*menuentitytype(optiresponses)
*menufield(loadstep,integer,$lstep,8)
*menuentitytype(loadsteps)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+2])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $nresponsesl])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuendif()
*menuoption(NODES,$Nodes)
*menucase(0)
*menuattributeset($nnodes,0) 
*menucase(1)
*menustring("DGRID  ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($nnodes)
*menufield(node,integer,$nod,8)
*menuentitytype(nodes)
*menufield(,integer,$ncoord_type,8)
*menulegalvalue(1)
*menulegalvalue(2)
*menulegalvalue(3)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 3 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $nnodes])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuoption(DVPREL_GENERIC,$Dvprels)
*menucase(0)
*menuattributeset($ndvprels,0) 
*menucase(1)
*menustring("DVPREL ")
*menuvariableset(variable1,0)
*menuvariableset(variable2,0)
*beginrepeat($ndvprels)
*menufield(dvprel,integer,$dvprel,8)
*menuentitytype(dvprels)
*menuvariableset(variable1,[variable1+1])
*menuvariableset(variable2,[variable2+1])
*menuif([variable2 % 8 == 0])
*menuvariableset(variable2,0)
*menuif([variable1 <= $ndvprels])
*menulineend()
*menustring("       ")
*menuendif()
*menuendif()
*endrepeat()
*menulineend()
*menuoptionend()
*menuelse()
*menuif([$DVPREL_EQ_SWITCH != 1 && $DLINK2_EQ_SWITCH != 1])
*menustring("DEQATN  ")
*menufield(id,integer,id,8)
*menuvariableset(variable1,0)
*beginrepeat([number_of_lines])
*repeatcounter(1)
*menuif([variable1 > 0])
*menustring("        ")
*menuendif()
*menupointerset(pointer1,string,[variable1])
*menufield( ,string,pointer1.pointervalue,72)
*menuvariableset(variable1,[variable1+1])
*menulineend()
*endrepeat()
*menuendif()
*menuendif()
*endmenu() 
*format()
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME DEQUATIONS")
*field(integer,id,8)
*fieldleft(string,name,0)
*end()
*string("$")
*end()
*endif()  
*string("DEQATN  ")
*fieldleft(integer,id,8)
*pointerset(pointer1,string,[0])
*fieldleft(string,pointer1.pointervalue,56)
*end()
*counterset(counter1,1)
*loopif([counter1 < number_of_lines])
*pointerset(pointer1,string,[counter1])
*string("+       ") 
*fieldleft(string,pointer1.pointervalue,64)
*counterinc(counter1) 
*end()
*endloop()
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*output()
*optiresponses()
*before()
*tablenreset(table4)
*format()
*tablenstore(table4,id,1)
*output()


*opticonstraints()
*before()
*treataslocal(counter19)
*counterset(counter19,0)
*tablenreset(table2)
*format()
*if([counter19==0])
*if([@count(opticonstraints,0,0)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  OPTICONSTRAINTS Data")
*end()
*string("$$")
*end()
*endif()   
*endif()  
*counterset(counter19,1)    
*endif()
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*uservariableset(#output_constraint,1)
*uservariableset(#rtype,0)
*if([@nlookup(4,responseid) == 1])
*uservariableset(#rtype,[@getentityvalue(optiresponses,responseid,response)])
*endif()
*if([#rtype > 0])
*if([#rtype == 35])
*counterset(counter3,[@getentityvalue(optiresponses,responseid,responselistmax)])
*if([counter3 > 0])
*entitypointerset(optiresponses,responseid,pointer2,responselist,0)
*if([@nlookup(4,pointer2.pointervalue) == 1])
*counterset(counter4,[@getentityvalue(optiresponses,pointer2.pointervalue,function_loadsteplistmax)])
*if([counter4 > 0])
*uservariableset(#rtype,[@getentityvalue(optiresponses,pointer2.pointervalue,response)])
*endif()
*endif()
*endif()
*endif()
*if([(#rtype >= 4 && #rtype <= 25) || (#rtype == 31) || (#rtype == 38)])
*if([loadsteplistmax == 0])
*uservariableset(#output_constraint,0)
*else()
*counterset(counter5,1)
*loopif([counter5 <= loadsteplistmax])
*pointerset(pointer2,loadsteplist,[counter5 - 1])
*uservariableset(#loadstepexportflag,[@getentityvalue(loadsteps,pointer2.pointervalue,outputsuppressed)])
*if([#loadstepexportflag == 1])
*uservariableset(#output_constraint,[#output_constraint+1])
*endif()
*counterinc(counter5)
*endloop()
*if([#output_constraint == (loadsteplistmax+1)])
*uservariableset(#output_constraint,0)
*else()
*uservariableset(#output_constraint,1)
*endif()
*endif()
*endif()
*endif()
*tablenstore(table2,id,#output_constraint)
*if([#output_constraint == 1])
*if([@writehmcomments()])
*string("$HMNAME OPTICONSTRAINTS")
*field(integer,id,8)
*fieldleft(string,name,0)
*end()
*string("$")
*end()
*endif()
*string("DCONSTR ")
*field(integer,id,8) 
*field(integer,responseid,8)
*if([bound == 0])
*field(real,lowerbound,8)
*string("        ")
*endif()
*if([bound == 1])
*string("        ")
*field(real,upperbound,8)
*endif()
*if([bound == 2])
*field(real,lowerbound,8)
*field(real,upperbound,8)
*endif()
*if([@defined($DCONSTR_LFREQ) || @defined($DCONSTR_UFREQ)])
*uservariableset(#dconstr_resptype,[@getentityvalue(optiresponses,responseid,response)])
*if([#dconstr_resptype == 14 || #dconstr_resptype == 15 || #dconstr_resptype == 16 || 
#dconstr_resptype == 18 || #dconstr_resptype == 19 || #dconstr_resptype == 38 ||
#dconstr_resptype == 42 || #dconstr_resptype == 59 || #dconstr_resptype == 35])
*if([@defaultstatus($DCONSTR_LFREQ)])
*string("        ")
*else()
*field(real,$DCONSTR_LFREQ,8)
*endif()
*if([@defaultstatus($DCONSTR_UFREQ)])
*string("        ")
*else()
*field(real,$DCONSTR_UFREQ,8)
*endif()
*endif()
*endif()
*end() 
*endif()
*after()
*tablenreset(table4)
*output()

*opticonstraints()
*before()
*counterset(counter19,0)
*uservariableset(#dconadd_possible,0)
*format()
*if([counter19==0])
*uservariableset(#dessubwaswritten,0)
*counterset(counter19,1)    
*endif()
*if([#opticonstraintglobalcount > 0])
*if([loadsteplistmax == 0])
*if([#dessubwaswritten == 0])
*uservariableset(#dessubwaswritten,1)
*uservariableset(#dconadd_possible,1)
*endif()
*endif()
*endif()
*after()
*output()


*opticonstraints()
*before()
*counterset(counter19,0)
*format()
*if([counter19==0])
*uservariableset(#dessubwaswritten,0)
*uservariableset(#dessubcounter,[#maxconstraintid-1])
*counterset(counter1,0)
*counterset(counter2,0)  
*counterset(counter19,1)    
*endif()
*if([#opticonstraintglobalcount > 0 && #dconadd_possible == 1])
*if([loadsteplistmax == 0])
*if([counter1 % 8 == 0])
*end()
*if([ counter1 != 0 ])
*string("+       ")
*counterset(counter1,0)
*endif()
*endif()
*if([@nlookup(2,id) == 1])
*if([counter2 == 0])
*if([#dessubwaswritten == 0])
*uservariableset(#dessubcounter,#dessubcounter+1)
*uservariableset(#dessubwaswritten,1)
*string("DCONADD ")
*fieldright(integer,#dessubcounter,8)
*uservariableset(#endflag,1)
*counterinc(counter1)
*endif()
*counterinc(counter2)
*endif()
*fieldright(integer,id,8)
*counterinc(counter1)
*endif()
*endif()
*endif()
*after()
*if([#endflag])
*end()
*endif()
*output()



*text()
*if([#opticonstraintglobalcount > 0])
*uservariableset(#dessubcounter,[#maxconstraintid])
*else()
*uservariableset(#dessubcounter,[#maxconstraintid - 1])
*endif()
*output()

*loadsteps()
*before()
*tablenreset(table3)
*format()
*uservariableset(#loadstepidentifer,id)
*uservariableset(#dessubwaswritten,0)
*opticonstraints()
*format()
*if([#opticonstraintsubcasecount > 0])
*if([loadsteplistmax > 0])
*uservariableset(#loadstepwasfound,0)
*counterset(counter1,0)
*loopif([counter1 < loadsteplistmax])
*pointerset(pointer1,loadsteplist,[counter1])
*if([pointer1.pointervalue == #loadstepidentifer]) 
*uservariableset(#loadstepwasfound,1)
*endif()
*counterinc(counter1)
*endloop()
*if([#loadstepwasfound > 0])
*if([#dessubwaswritten == 0])
*uservariableset(#dessubwaswritten,1)
*endif()
*if([@nlookup(2,id) == 1])
*if([@nlookup(3,#loadstepidentifer) == 0])
*tablenstore(table3,#loadstepidentifer,1)
*endif()
*endif()
*endif()
*endif()
*endif()
*output()
*output()


*loadsteps()
*format()
*uservariableset(#loadstepidentifer,id)
*uservariableset(#dessubwaswritten,0)
*uservariableset(#endflag,0)
*uservariableset(#includeid,-1)
*opticonstraints()
*before()
*counterset(counter2,0)
*counterset(counter3,0)
*format()
*if([@nlookup(3,#loadstepidentifer) == 1])
*if([#opticonstraintsubcasecount > 0])
*if([loadsteplistmax > 0])
*uservariableset(#loadstepwasfound,0)
*counterset(counter1,0)
*loopif([counter1 < loadsteplistmax])
*pointerset(pointer1,loadsteplist,[counter1])
*if([pointer1.pointervalue == #loadstepidentifer]) 
*uservariableset(#loadstepwasfound,1)
*endif()
*counterinc(counter1)
*endloop()

*if([#loadstepwasfound > 0])
*if([counter2 % 8 == 0])
*end()
*if([ counter2 != 0 ])
*string("+       ")
*counterset(counter2,0)
*endif()
*endif()
*if([@nlookup(2,id) == 1])
*if([counter3 == 0])
*if([#dessubwaswritten == 0])
*uservariableset(#dessubcounter,#dessubcounter+1)
*uservariableset(#dessubwaswritten,1)
*string("DCONADD ")
*uservariableset(#includeid,include)
*fieldright(integer,#dessubcounter,8)
*uservariableset(#endflag,1)
*counterinc(counter2) 
*endif()
*counterinc(counter3)
*endif()
*if([#includeid == include])
*fieldright(integer,id,8)
*counterinc(counter2)
*endif()
*endif()
*endif()
*endif()
*endif()
*endif()
*output()
*if([(#endflag == 1) && (#includeid == include)])
*end()
*endif()
*after()
*tablenreset(table2)
*tablenreset(table3)
*output()

*text()
*end()
*end()
*output()


*objectives()
*before()
*if([@count(dobjrefs,0,0)])
*uservariableset(#dobjrefexport,0)
*dobjrefs()
*if([objectid > 0])
*uservariableset(#dobjrefexport,1)
*endif()
*output()
*if([#dobjrefexport == 1])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  OBJECTIVE REFERENCE Data")
*end()
*string("$$")
*end()
*endif()
*endif()
*endif()
*format()
*uservariableset(#objectid,id)
*dobjrefs()
*format()
*if([#objectid == objectid])
*if([loadsteplistmax == 0])
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME DOBJREF         ")
*field(integer,id,8)
*quote()
*field(string,name,0)
*quote()
*end()
*string("$")
*end()
*endif()
*string("DOBJREF ")
*fieldright(integer,objectid,8)
*fieldright(integer,responseid,8)
*string("     ALL")
*if([reference == 0 || reference == 2])
*fieldright(real,negative_reference,8)
*else()
*string("        ")
*endif()
*if([reference == 1 || reference == 2])
*fieldright(real,positive_reference,8)
*else()
*string("        ")
*endif()
*if([@entityexists(optiresponses,responseid)])
*variableset(variable1,[@getentityvalue(optiresponses,responseid,response)])
*if([variable1 == 35 || variable1 == 14 || variable1 == 15 || variable1 == 16 || variable1 == 18 || variable1 == 38 || variable1 == 19 || variable1 == 42 || variable1 == 59])
*if([@defaultstatus($lowerbound_freq)])
*string("        ")
*else()
*fieldright(real,$lowerbound_freq,8)
*endif()
*if([@defaultstatus($upperbound_freq)])
*string("        ")
*else()
*fieldright(real,$upperbound_freq,8)
*endif()
*endif()
*endif()
*end()
*else()
*counterset(counter1,1)
*loopif([counter1 <= loadsteplistmax])
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME DOBJREF         ")
*field(integer,id,8)
*quote()
*field(string,name,0)
*quote()
*end()
*string("$")
*end()
*endif()
*string("DOBJREF ")
*fieldright(integer,objectid,8)
*fieldright(integer,responseid,8)
*pointerset(pointer1,loadsteplist,[counter1 - 1])
*fieldright(integer,pointer1.pointervalue,8)
*if([reference == 0 || reference == 2])
*fieldright(real,negative_reference,8)
*else()
*string("        ")
*endif()
*if([reference == 1 || reference == 2])
*fieldright(real,positive_reference,8)
*else()
*string("        ")
*endif()
*if([@entityexists(optiresponses,responseid)])
*variableset(variable1,[@getentityvalue(optiresponses,responseid,response)])
*if([variable1 == 35 || variable1 == 14 || variable1 == 15 || variable1 == 16 || variable1 == 18 || variable1 == 38 || variable1 == 19 || variable1 == 42 || variable1 == 59])
*if([@defaultstatus($lowerbound_freq)])
*string("        ")
*else()
*fieldright(real,$lowerbound_freq,8)
*endif()
*if([@defaultstatus($upperbound_freq)])
*string("        ") 
*else()
*fieldright(real,$upperbound_freq,8)
*endif()
*endif()
*endif()
*end()
*counterinc(counter1)
*endloop()
*endif()
*endif()
*output()
*output()


*shapes()
*format()
*if([@writehmcomments()])
*string("$")
*end()
*string("$HMNAME SHAPE           ")
*field(integer,id,8)
*quote()
*field(string,name,0)
*quote()
*field(integer,desvarid,8)
*field(integer,vectorcollectorid,8)
*end()
*string("$HWCOLOR SHAPE          ")
*field(integer,id,8)
*field(integer,color,8)
*end()
*string("$")
*end()
*endif()  
*uservariableset(#countshpnodes,0)
*loopif([(desvarid > 0) && (nodeidsmax > #countshpnodes)])
*pointerset(pointer1,nodeids,#countshpnodes)
*pointerset(pointer2,npert,#countshpnodes)
*string("DVGRID* ")
*fieldright(integer,desvarid,16)
*fieldright(integer,pointer1.pointervalue,16)
*string("               0")  // coordinate system
*string("             1.0")  // coefficient
*end()
*string("*       ")
*uservariableset(#pertindex,[#countshpnodes*3])
*pointerset(pointer2,npert,#pertindex)
*uservariableset(#pertj,0)
*loopif([#pertj < 3])
*fieldright(exponential,pointer2.pointervalue,16)
*uservariableset(#pertj,[#pertj+1])
*pointerset(pointer2,npert,[#pertindex + #pertj])
*fieldright(exponential,pointer2.pointervalue,16)
*uservariableset(#pertj,[#pertj+1])
*pointerset(pointer2,npert,[#pertindex + #pertj])
*fieldright(exponential,pointer2.pointervalue,16)
*uservariableset(#pertj,[#pertj+1])
*endloop()
*end()
*uservariableset(#countshpnodes,[#countshpnodes+1])
*endloop()
*output()


*cards("INCLUDE_BULK")
*beginmenu()
*beginrepeat($number_of_includes_in_bulk)
*repeatcounter(1)
*menustring("INCLUDE")
*menustring("  ")
*menuattributecreate($blank,0)  // to get rid of TCL window
*menufield(filename,string,$INCLUDES_BULK,72)
*menulineend()
*endrepeat()
*menustring("Names of include files to be included in the bulk data section.")
*menulineend()
*menustring("The length of the names should not exceed 72 characters.")
*menulineend()
*menustring("The INCLUDE statements will be present right after the BEGIN BULK statement.") 
*menulineend()
*endmenu()
*format()
*counterset(counter1,1)
*loopif([counter1 <= $number_of_includes_in_bulk])
*string("INCLUDE")
*string("  '")
*fieldleft(string,[@stringsplit(@attributearrayvalue($INCLUDES_BULK,counter1),)],56)
*string("'")
*end()
*counterinc(counter1)
*endloop()
*output()

*contactsurfs("SURF")
*beginmenu()
*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()
*variableset(variable5,0)
*menuoption(FACE_FORMAT,$SURF_FACE_TYPE)
*menucase(0)
*menuvariableset(variable5,0)
*menucase(1)
*menuvariableset(variable5,1)
*menuoptionend()
*menustring("SURF    ")
*menufield(ID,integer,id,8)
*menuif([variable5 == 1])
*menustring("FACE    ")
*menuelse()
*menustring("ELFACE  ")
*menuendif()
*menulineend()

*menuvariableset(variable1,0)
*menuif([facesmax > 500])
*menustring("Note: The number of faces shown here is limited to 500. However all the")
*menulineend()
*menustring("       faces will be exported.")
*menulineend()
*menuvariableset(variable1,500)
*menuelse()
*menuvariableset(variable1,facesmax)
*menuendif()  

*beginrepeat(variable1)
*repeatcounter(1)
*menupointerset(pointer1,faces,counter1-1)
*menuif([pointer1.element.config >= 103])
*menustring("        ")
*menuif([variable5 == 1])
*menuif([pointer1.facetype >= 3])
*menufield(GID1,integer,pointer1.node1.id,8)
*menufield(GID2,integer,pointer1.node2.id,8)
*menufield(GID3,integer,pointer1.node3.id,8)
*menuif([pointer1.facetype == 4 || pointer1.facetype == 8])
*menufield(GID4,integer,pointer1.node4.id,8)
*menuendif()
*menuendif()
*menuelse()
*menufield(EID,integer,pointer1.element.id,8)
*menuif([pointer1.element.config == 103 || pointer1.element.config == 104 || pointer1.element.config == 106 || pointer1.element.config == 108])
*menustring("        ")
*menustring("        ")
*menuelse()
*menufield(GID1,integer,pointer1.node1.id,8)
*menuendif()
*menuif([pointer1.element.config == 204 || pointer1.element.config == 210])
*menuvariableset(variable2,pointer1.element.node1.id)
*menuif([variable2 != pointer1.node1.id && variable2 != pointer1.node2.id && variable2 != pointer1.node3.id])
*menuvariableset(variable3,variable2)
*menuelse()
*menuvariableset(variable2,pointer1.element.node2.id)
*menuif([variable2 != pointer1.node1.id && variable2 != pointer1.node2.id && variable2 != pointer1.node3.id])
*menuvariableset(variable3,variable2)
*menuelse()
*menuvariableset(variable2,pointer1.element.node3.id)
*menuif([variable2 != pointer1.node1.id && variable2 != pointer1.node2.id && variable2 != pointer1.node3.id])
*menuvariableset(variable3,variable2)
*menuelse()
*menuvariableset(variable3,pointer1.element.node4.id)
*menuendif()
*menuendif()
*menuendif()
*menufield(GID2,integer,variable3,8)
*menuendif()
*menuif([pointer1.element.config == 208 || pointer1.element.config == 220])
*menufield(GID2,integer,pointer1.node3.id,8)
*menuendif()
*menuif([pointer1.element.config == 206 || pointer1.element.config == 215])
*menuif([pointer1.facetype == 4 || pointer1.facetype == 8])
*menufield(GID2,integer,pointer1.node3.id,8)
*menuelse()
*menustring("        ")
*menuendif()
*menuendif()
*menuif([pointer1.element.config == 205 || pointer1.element.config == 213])
*menuif([pointer1.facetype == 3 || pointer1.facetype == 6])
*menuvariableset(variable2,pointer1.element.node5.id)
*menuif([variable2 != pointer1.node2.id])
*menufield(G2,integer,pointer1.node2.id,8)
*menuelse()
*menufield(G2,integer,pointer1.node3.id,8)
*menuendif()
*menuendif()
*menuif([pointer1.facetype == 4 || pointer1.facetype == 8])
*menustring("        ")
*menuendif()
*menuendif()
*menuif([pointer1.reversecode])
*menufield(FLIP,integer,pointer1.reversecode,8)
*menuendif()
*menuendif()
*menulineend()
*menuendif()
*endrepeat()
*menulineend()
*endmenu()
*before()
*treataslocal(counter19)
*counterset(counter19,0)
*format()
*if([@writehmcomments()])
*string("$$")
*end()
*string("$HMNAME CSURF           ")
*field(integer,id,8)
*quote()
*field(string,name,0)
*quote()
*string(" ")
*quote()
*string("SURF")
*quote()
*end()
*string("$HWCOLOR CSURF          ")
*field(integer,id,8)
*field(integer,color,8)
*end()
*endif()  
*if([counter19==0])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  SURF Data")
*end()
*string("$$")
*end()
*endif()    
*counterset(counter19,1)    
*endif()
*if([$SURF_FACE_TYPE == 1])
*variableset(variable5,1)
*else()
*variableset(variable5,0)
*endif()
*string("SURF    ")
*field(integer,id,8)
*if([variable5 == 1])
*string("FACE    ")
*else()
*string("ELFACE  ")
*endif()
*end()
*variableset(variable1,1)
*loopif([variable1 <= facesmax])
*pointerset(pointer1,faces,variable1-1)
*if([pointer1.element.config >= 103])
*string("+       ")
*if([variable5 == 1])
*if([pointer1.facetype >= 3])
*field(integer,pointer1.node1.id,8)
*field(integer,pointer1.node2.id,8)
*field(integer,pointer1.node3.id,8)
*if([pointer1.facetype == 4 || pointer1.facetype == 8])
*field(integer,pointer1.node4.id,8)
*endif()
*endif()
*else()
*field(integer,pointer1.element.id,8)
*if([pointer1.element.config == 103 || pointer1.element.config == 104 || pointer1.element.config == 106 || pointer1.element.config == 108])
*string("        ")
*string("        ")
*else()
*field(integer,pointer1.node1.id,8)
*endif()
*if([pointer1.element.config == 204 || pointer1.element.config == 210])
*variableset(variable2,pointer1.element.node1.id)
*if([variable2 != pointer1.node1.id && variable2 != pointer1.node2.id && variable2 != pointer1.node3.id])
*variableset(variable3,variable2)
*else()
*variableset(variable2,pointer1.element.node2.id)
*if([variable2 != pointer1.node1.id && variable2 != pointer1.node2.id && variable2 != pointer1.node3.id])
*variableset(variable3,variable2)
*else()
*variableset(variable2,pointer1.element.node3.id)
*if([variable2 != pointer1.node1.id && variable2 != pointer1.node2.id && variable2 != pointer1.node3.id])
*variableset(variable3,variable2)
*else()
*variableset(variable3,pointer1.element.node4.id)
*endif()
*endif()
*endif()
*field(integer,variable3,8)
*endif()
*if([pointer1.element.config == 208 || pointer1.element.config == 220])
*field(integer,pointer1.node3.id,8)
*endif()
*if([pointer1.element.config == 206 || pointer1.element.config == 215])
*if([pointer1.facetype == 4 || pointer1.facetype == 8])
*field(integer,pointer1.node3.id,8)
*else()
*string("        ")
*endif()
*endif()
*if([pointer1.element.config == 205 || pointer1.element.config == 213])
*if([pointer1.facetype == 3 || pointer1.facetype == 6])
*variableset(variable2,pointer1.element.node5.id)
*if([variable2 != pointer1.node2.id])
*field(integer,pointer1.node2.id,8)
*else()
*field(integer,pointer1.node3.id,8)
*endif()
*endif()
*if([pointer1.facetype == 4 || pointer1.facetype == 8])
*string("        ")
*endif()
*endif()
*if([pointer1.reversecode])
*field(integer,pointer1.reversecode,8)
*endif()
*endif()
*end()
*endif()
*variableset(variable1,variable1+1)
*endloop()
*end()
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*output()

*include(../../optistruct/include/groups.tpl)

*include(../../optistruct/include/cards_BulkData.tpl)

*systems()
*beginmenu()
*menuif([definitioncode == 0])
*menuif([type == 0])
*menuoption(CORD4R,$CORD4R_OPT)
*menucase(0)
*menustring("CORD2R  ")
*menucase(1)
*menustring("CORD4R  ")
*menuoptionend()
*menuelse()
*menuattributeset($CORD4R_OPT,0)
*menuendif()
*menuif([type == 1])
*menustring("CORD2C  ")
*menuendif()
*menuif([type == 2])
*menustring("CORD2S  ")
*menuendif()
*menufield(CID,integer,id,8)
*menuif([inputsystemid != 0 && inputsystemid != id])
*menufield(RID,integer,inputsystemid,8)
*menuendif()
*menuif([inputsystemid == 0 || inputsystemid == id])
*menustring("        ")
*menuendif()
*menuif([type != 0 || $CORD4R_OPT != 1])
*menuif([(@entitygettype(systems,inputsystemid) == 2)])
*menufield(A1,real,[@xpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*menufield(A2,real,[90.0-@zpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*menufield(A3,real,[@ypointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*menufield(B1,real,[@xpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*menufield(B2,real,[90.0-@zpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*menufield(B3,real,[@ypointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*menuendif()
*menuif([(@entitygettype(systems,inputsystemid) != 2)])
*menufield(A1,real,[@xpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*menufield(A2,real,[@ypointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*menufield(A3,real,[@zpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*menufield(B1,real,[@xpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*menufield(B2,real,[@ypointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*menufield(B3,real,[@zpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*menuendif()
*menuif([@entitygettype(systems,inputsystemid) == 0])
*menuendif()
*menuif([@entitygettype(systems,inputsystemid) == 1])
*menuendif()
*menuif([@entitygettype(systems,inputsystemid) == 2])
*menuendif()
*menulineend()
*menuif([@entitygettype(systems,inputsystemid) == 0])
*menuendif()
*menuif([@entitygettype(systems,inputsystemid) == 1])
*menuendif()
*menuif([@entitygettype(systems,inputsystemid) == 2])
*menuendif()
*menuif([(@entitygettype(systems,inputsystemid) == 2)])
*menustring("        ") 
*menufield(C1,real,[@xpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*menufield(C2,real,[90.0-@zpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*menufield(C3,real,[@ypointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*menuendif()
*menuif([(@entitygettype(systems,inputsystemid) != 2)])
*menustring("        ")
*menufield(C1,real,[@xpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*menufield(C2,real,[@ypointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*menufield(C3,real,[@zpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*menuendif()
*menuelse()
*menuif([(@entitygettype(systems,inputsystemid) == 2)])
*menuvariableset(variable1,[@xpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*menuvariableset(variable2,[90.0-@zpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*menuvariableset(variable3,[@ypointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*menuvariableset(variable4,[@xpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*menuvariableset(variable5,[90.0-@zpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*menuvariableset(variable6,[@ypointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*menuvariableset(variable7,[@xpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*menuvariableset(variable8,[90.0-@zpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*menuvariableset(variable9,[@ypointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*menuelse()
*menuvariableset(variable1,[@xpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*menuvariableset(variable2,[@ypointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*menuvariableset(variable3,[@zpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*menuvariableset(variable4,[@xpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*menuvariableset(variable5,[@ypointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*menuvariableset(variable6,[@zpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*menuvariableset(variable7,[@xpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*menuvariableset(variable8,[@ypointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*menuvariableset(variable9,[@zpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*menuendif()
*menuvariableset(variable10,[variable4-variable1])
*menuvariableset(variable11,[variable5-variable2])
*menuvariableset(variable12,[variable6-variable3])

*menuvariableset(variable13,[variable7-variable1])   
*menuvariableset(variable14,[variable8-variable2])   
*menuvariableset(variable15,[variable9-variable3])   

*menuvariableset(variable16,[variable11*variable15 - variable14*variable12 + variable1])
*menuvariableset(variable17,[variable12*variable13 - variable10*variable15 + variable2])
*menuvariableset(variable18,[variable10*variable14 - variable11*variable13 + variable3])

*menuvariableset(variable13,[variable17*variable12 - variable18*variable11 + variable1])
*menuvariableset(variable14,[variable18*variable10 - variable16*variable12 + variable2])
*menuvariableset(variable15,[variable16*variable11 - variable17*variable10 + variable3])

*menufield(A1,real,[variable1],8)
*menufield(A2,real,[variable2],8)
*menufield(A3,real,[variable3],8)

*menufield(B1,real,[variable13 - variable1],8)
*menufield(B2,real,[variable14 - variable2],8)
*menufield(B3,real,[variable15 - variable3],8)
*menulineend()

*menustring("        ")
*menufield(C1,real,[variable16 - variable1],8) 
*menufield(C2,real,[variable17 - variable2],8)
*menufield(C3,real,[variable18 - variable3],8)
*menuendif()
*menulineend()
*menuendif()

## SYSTEM IN TERMS OF 3 NODES 
*menuif([definitioncode != 0])
*menuif([type != 0 && definitioncode != 6])
*menustring("$$ HMERROR: Invalid axis / plane defined for system.")
*menulineend()
*menuendif()
*menuif([type == 0])
*menuif([definitioncode != 1])
*menustring("CORD1R  ")
*menuendif()
*menuif([definitioncode == 1])
*menustring("CORD3R  ")
*menuendif()
*menuendif()
*menuif([type == 1])
*menustring("CORD1C  ")
*menuendif()
*menuif([type == 2])
*menustring("CORD1S  ")
*menuendif()
*menufield(CID,integer,id,8)
*menufield(G1,integer,originnodeid,8)
*menufield(G2,integer,axisnodeid,8)
*menufield(G3,integer,planenodeid,8)
*menulineend()
*menuendif()

*endmenu()
*before()
*treataslocal(counter19)
*counterset(counter19,0)
*beforecollector()
*if([@writehmcomments()])
*string("$HMNAME SYSTCOL ")
*field(integer,collector.id,8)
*string(" ")
*quote()
*field(string,collector.name,0)
*quote()
*end()
*string("$HWCOLOR SYSTCOL ")
*field(integer,collector.id,8)
*string(" ")
*field(integer,collector.color,8)
*end()
*endif()  

*format()
*if([counter19==0])
*if([@count(systems,0,0)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  SYSTEM Data")
*end()
*string("$$")
*end()
*endif()
*endif()
*counterset(counter1,0)  
*counterset(counter19,1)    
*endif()
*if([definitioncode == 0])
*if([type == 0])
*if([$CORD4R_OPT == 0])
*string("CORD2R  ")
*endif()
*if([$CORD4R_OPT == 1])
*string("CORD4R  ")
*endif()
*endif()
*if([type == 1])
*string("CORD2C  ")
*endif()
*if([type == 2])
*string("CORD2S  ")
*endif()
*field(integer,id,8)
*if([inputsystemid != 0 && inputsystemid != id])
*field(integer,inputsystemid,8)
*endif()
*if([inputsystemid == 0 || inputsystemid == id])
*string("        ")
*endif()
*if([type != 0 || $CORD4R_OPT != 1])
*if([(@entitygettype(systems,inputsystemid) == 2)])
*field(real,[@xpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*field(real,[90.0-@zpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*field(real,[@ypointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*field(real,[@xpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*field(real,[90.0-@zpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*field(real,[@ypointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*endif()
*if([(@entitygettype(systems,inputsystemid) != 2)])
*field(real,[@xpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*field(real,[@ypointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*field(real,[@zpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)],8)
*field(real,[@xpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*field(real,[@ypointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*field(real,[@zpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)],8)
*endif()
*end()
*if([@entitygettype(systems,inputsystemid) == 0])
*string("+       ")
*endif()
*if([@entitygettype(systems,inputsystemid) == 1])
*string("+       ")
*endif()
*if([@entitygettype(systems,inputsystemid) == 2])
*string("+       ")
*endif()
*if([(@entitygettype(systems,inputsystemid) == 2)])
*field(real,[@xpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*field(real,[90.0-@zpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*field(real,[@ypointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*endif()
*if([(@entitygettype(systems,inputsystemid) != 2)])
*field(real,[@xpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*field(real,[@ypointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*field(real,[@zpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)],8)
*endif()
*else()
*if([(@entitygettype(systems,inputsystemid) == 2)])
*variableset(variable1,[@xpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*variableset(variable2,[90.0-@zpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*variableset(variable3,[@ypointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*variableset(variable4,[@xpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*variableset(variable5,[90.0-@zpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*variableset(variable6,[@ypointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*variableset(variable7,[@xpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*variableset(variable8,[90.0-@zpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*variableset(variable9,[@ypointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*else()
*variableset(variable1,[@xpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*variableset(variable2,[@ypointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*variableset(variable3,[@zpointlocal(inputsystemid,globaloriginx,globaloriginy,globaloriginz)])
*variableset(variable4,[@xpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*variableset(variable5,[@ypointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*variableset(variable6,[@zpointlocal(inputsystemid,globaloriginx+100*globalzaxisx,globaloriginy+100*globalzaxisy,globaloriginz+100*globalzaxisz)])
*variableset(variable7,[@xpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*variableset(variable8,[@ypointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*variableset(variable9,[@zpointlocal(inputsystemid,globaloriginx+100*globalxaxisx,globaloriginy+100*globalxaxisy,globaloriginz+100*globalxaxisz)])
*endif()
*variableset(variable10,[variable4-variable1])
*variableset(variable11,[variable5-variable2])
*variableset(variable12,[variable6-variable3])

*variableset(variable13,[variable7-variable1])   
*variableset(variable14,[variable8-variable2])   
*variableset(variable15,[variable9-variable3])   

*variableset(variable16,[variable11*variable15 - variable14*variable12 + variable1])
*variableset(variable17,[variable12*variable13 - variable10*variable15 + variable2])
*variableset(variable18,[variable10*variable14 - variable11*variable13 + variable3])

*variableset(variable13,[variable17*variable12 - variable18*variable11 + variable1])
*variableset(variable14,[variable18*variable10 - variable16*variable12 + variable2])
*variableset(variable15,[variable16*variable11 - variable17*variable10 + variable3])

*field(real,[variable1],8)
*field(real,[variable2],8)
*field(real,[variable3],8)

*field(real,[variable13 - variable1],8)
*field(real,[variable14 - variable2],8)
*field(real,[variable15 - variable3],8)
*end()

*string("+       ")
*field(real,[variable16 - variable1],8) 
*field(real,[variable17 - variable2],8)
*field(real,[variable18 - variable3],8)
*endif()
*end()
*endif()

*variableset(variable1,0)
## THREE NODED SYSTEM 
*if([definitioncode != 0])
*if([type != 0 && definitioncode != 6])
*variableset(variable1,1)
*endif()
*if([type == 0])
*if([definitioncode != 1])
*string("CORD1R  ")
*endif()
*if([definitioncode == 1])
*string("CORD3R  ")
*endif()
*endif()
*if([type == 1])
*string("CORD1C  ")
*endif()
*if([type == 2])
*string("CORD1S  ")
*endif()
*field(integer,id,8)
*fieldright(integer,originnodeid,8)
*fieldright(integer,axisnodeid,8)
*fieldright(integer,planenodeid,8)
*end()
*endif()

*if([variable1 == 1])
*string("$$ HMERROR: Invalid axis / plane defined for system id: ")
*field(integer,id,0)
*errormessage(" $$HMERROR cards were written to the output deck.")
*end()
*variableset(variable1,0)
*endif()
*output()



*nodes()
*beginmenu()

*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()

*menucounterset(counter1,0)
*menuoption("SPOINT",$SPOINT_OPTION)
*menucase(0)
*menustring("GRID    ")
*menucounterset(counter1,1)
*menucase(1)
*menustring("SPOINT  ")
*menucounterset(counter1,2)
*menuoptionend()

*menuif([counter1==0])
*menustring("mixed   ")
*menuendif()

*menufield(ID,integer,id,8)

*menuif([$SPOINT_OPTION==0])
*menuif([counter1==1])
*menuif([@exists(inputsystem)])
*menufield(CP,integer,inputsystem.id,8)
*menuelse()
*menustring("        ")
*menuendif()
*menufield(X1,real,x,8)
*menuif([@exists(inputsystem) && inputsystem.type == 2 ])
*menufield(X2,real,[90.0-z],8)
*menuelse()
*menufield(X2,real,y,8)
*menuendif()
*menuif([@exists(inputsystem) && inputsystem.type == 2])
*menufield(X3,real,y,8)
*menuelse()
*menufield(X3,real,z,8)
*menuendif()
*menuendif()

*menuoption("CD -1",$negCDopt)
*menucase(0)
*menuif([@exists(outputsystem)])
*menufield(CD,integer,outputsystem.id,8)
*menuelse()
*menustring("        ")
*menuendif()
*menucase(1)
*menustring("      -1")
*menuoptionend()
*menufield(PS,integer,$GRID_SPC,8)
*menudefaultvalue("        ")
*menustring("        ")
*menuoption("GRID_COMMENT",$GRID_COMMENT_OPTION)
*menucase(0)
*menucase(1)
*menufield(Comment,string,$GRID_COMMENT,8)
*menuoptionend()
*menuendif()

*menulineend()
*endmenu()
*before()
*treataslocal(counter19)
*counterset(counter19,0)
*format()

*if([$COMMENT_OPTION == 1])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 2])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 3])
*endif()

*if([counter19==0])
*if([@count(nodes,0,0)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  GRID Data")
*end()
*string("$$")
*end()
*endif()
*endif()  
*counterset(counter19,1)    
*endif()

*if($SPOINT_OPTION!=1)
*string("GRID    ")
*sortnodes(byid)
*field(integer,id,8)
*if([@exists(inputsystem)])
*field(integer,inputsystem.id,8)
*else()
*string("        ")
*endif()
*field(real,x,8)
*if([@exists(inputsystem)])
*if([inputsystem.type == 2])
*field(real,[90.0-z],8)
*field(real,y,8)
*else()
*field(real,y,8)
*field(real,z,8)
*endif()
*else()
*field(real,y,8)
*field(real,z,8)
*endif()
*if([$negCDopt == 0])
*if([@exists(outputsystem)])
*field(integer,outputsystem.id,8)
*else()
*string("        ")
*endif()
*endif()
*if([$negCDopt == 1])
*string("      -1")
*endif()
*if([@defaultstatus($GRID_SPC)])
*string("        ")
*else()
*field(integer,$GRID_SPC,8)
*endif()
*string("        ")
*if([$GRID_COMMENT_OPTION == 1])
*field(string,$GRID_COMMENT,8)
*endif()
*end()
*endif()
*output()


*include(../../common_nas_os/grid_c.tpl)
*include(../../common_nas_os/1d_def_elems_c.tpl)
*include(../../common_nas_os/1d_elems_c.tpl)
include(../../common_nas_os/2D_elems_c.tpl)
*include(../../common_nas_os/3D_elems_c.tpl)
*include(../../common_nas_os/beamsect_c.tpl)
*include(../../common_nas_os/general_c.tpl)

*include(../../optistruct/include/elems.tpl)


*components("","")
*before()
*if([@writehmcomments()])
*string("$$") *end()
*string("$$------------------------------------------------------------------------------$") *end()
*string("$$    HyperMesh name and color information for generic components               $") *end()
*string("$$------------------------------------------------------------------------------$") *end()
*endif()  
*treataslocal(counter8)
*counterset(8,0)
*counterset(1,0)
*format()
*if([@writehmcomments()])
*string("$HMNAME COMP            ")

*field(integer,id,8)
*quote()
*field(string,name,0)
*quote()
*string(" ")

*if([propertyid > 0])
*field(integer,propertyid,8)
*string(" ")

*if([@defined(property.$PMASS)])
*quote()
*field(string,[@getentityvalue(properties,internalpropertyid,name)],0)
*quote()
*string(" 1 ")
*endif()

*if([@defined(property.$PBUSH) || @defined(property.$PBUSH1D) ||@defined(property.$PVISC) ||
@defined(property.$PDAMP) ||@defined(property.$PGAP) ||@defined(property.$PELAS)])
*quote()
*field(string,[@getentityvalue(properties,internalpropertyid,name)],0)
*quote()
*string(" 2 ")
*endif()

*if([@defined(property.$PBAR) || @defined(property.$PBARL) ||@defined(property.$PBEAM) ||
@defined(property.$PBEAML) ||@defined(property.$PBEND) ||@defined(property.$PROD) ||
@defined(property.$PTUBE) || @defined(property.$PWELD)])
*quote()
*field(string,[@getentityvalue(properties,internalpropertyid,name)],0)
*quote()
*string(" 3 ")
*endif()

*if([@defined(property.$PSHELL) || @defined(property.$PSHEAR) ||@defined(property.$PCOMP) ||
@defined(property.$PCOMPG) || @defined(property.$PCOMPP) ])
*quote()
*field(string,[@getentityvalue(properties,internalpropertyid,name)],0)
*quote()
*string(" 4 ")
*endif()

*if([@defined(property.$PSOLID) || @defined(property.$PLSOLID) || @defined(property.$PGASK)])
*quote()
*field(string,[@getentityvalue(properties,internalpropertyid,name)],0)
*quote()
*string(" 5 ")
*endif()

*if([@defined(property.$PCONT)])
*quote()
*field(string,[@getentityvalue(properties,internalpropertyid,name)],0)
*quote()
*string(" 6 ")
*endif()
*if([@defined(property.$PAABSF) || @defined(property.$PACABS)])
*quote()
*field(string,[@getentityvalue(properties,internalpropertyid,name)],0)
*quote()
*string(" 7 ")
*endif()    
*endif()
*end()

*string("$HWCOLOR COMP           ")

*field(integer,id,8)
*field(integer,color,8)
*end()

*string("$") *end()
*endif()
*output()

*elements(0,0,"","")
*before()
*treataslocal(counter8)
*counterset(counter8,0)
*treataslocal(counter7)
*counterset(counter7,0)
*uservariableset(#thru_c_tot,[@count(elements,0,0)])
*format()
*if([@writehmcomments()])
*counterinc(counter7)

*if([propertyidflag == 1])
*if([counter8==0])
*string("$")
*end()
*string("$HMDPRP ")
*counterset(counter1,0)
*counterset(counter2,0)
*counterset(counter3,0)
*variableset(variable7,0)
*counterset(counter8,1)
*endif()

*if(counter3==0)
*variableset(variable7,id)
*counterinc(counter3)
*endif()
*if([(id-variable7)==1])
*variableset(variable7,id)
*counterinc(counter1)
*else()

*if(counter1>0)
*if([ counter2%9 == 0 ])
*end()
*string("$       ")
*endif()
*string("THRU    ")
*counterinc(counter2)
*if([ counter2%9 == 0 ])
*end()
*string("$       ")
*endif()
*field(integer,variable7,8)
*counterinc(counter2)
*if([ counter2%9 == 0 ])
*end()
*string("$       ")
*endif()
*field(integer,id,8)
*counterinc(counter2)
*variableset(variable7,id)
*counterset(counter1,0)
*else()
*if([ counter2%9 == 0 ])
*end()
*string("$       ")
*endif()
*field(integer,id,8)
*variableset(variable7,id)
*counterinc(counter2)
*endif()

*endif()



*endif()
*endif()
*aftercollector()
*if([#flagforinclfiles == 1])
*if([@writehmcomments()])
*if([@count(elements,0,0)])
*if(counter1>0)
*if([ counter2%9 == 0 ])
*end()
*string("$       ")
*endif()
*string("THRU    ")
*counterinc(counter2)
*if([ counter2%9 == 0 ])
*end()
*string("$       ")
*endif()
*field(integer,variable7,8)
*counterinc(counter2)
*variableset(variable7,0)
*counterset(counter1,0)
*counterset(counter3,0)
*endif()
*endif()
*if([#thru_c_tot == counter7])
*end()
*string("$")
*end()
*endif()
*endif()
*endif()

*after()
*if([#flagforinclfiles == 0])
*if([@writehmcomments()])
*if([@count(elements,0,0)])
*if(counter1>0)
*if([ counter2%9 == 0 ])
*end()
*string("$       ")
*endif()
*string("THRU    ")
*counterinc(counter2)
*if([ counter2%9 == 0 ])
*end()
*string("$       ")
*endif()
*field(integer,variable7,8)
*counterinc(counter2)
*variableset(variable7,0)
*counterset(counter1,0)
*counterset(counter3,0)
*endif()
*endif()
*if([#thru_c_tot == counter7])
*end()
*string("$")
*end()
*endif()
*endif()
*endif()
*output()

*elements(0,0,"","")
*before()
*treataslocal(counter9)
*counterset(counter9,0)
*format()
*if([counter9 == 0])
*if([@writehmcomments()])
*end()
*string("$")
*end()
*endif()
*counterset(counter9,1)
*endif()
*output()

*include(../../optistruct/include/properties.tpl)

*elementorient2d(ThetaMCIDopt,2,3,THETA,MCID)



*include(../../optistruct/include/materials.tpl)

*text()
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$------------------------------------------------------------------------------$")
*end()
*string("$$ HyperMesh Commands for loadcollectors name and color information $")
*end()
*string("$$------------------------------------------------------------------------------$")
*end()
*endif()  
*output()

*loadcols()
*format()
*if([@writehmcomments()])
*if([@attributesmaxforsolver(1)==0])
*string("$HMNAME LOADCOL         ")
*field(integer,id,8)
*quote()
*field(string,name,0)
*quote()
*end()
*string("$HWCOLOR LOADCOL        ")
*field(integer,id,8)
*field(integer,color,8)
*end()
*string("$$")
*end()
*endif()
*endif()  
*output()

*include(../../common_nas_os/loadcols_c.tpl)
*include(../../common_nas_os/loadcollectors_c.tpl)
*include(../../common_nas_os/loads_c.tpl)
*include(../../common_nas_os/tableloadcols_output.tpl)

*include(../../optistruct/include/loadcols_format.tpl)

*include(../../optistruct/include/loads.tpl)

*assemblies("")
*format()
*if([@writehmcomments()])
*string("$HMASSEM")
*field(integer,id,8)
*field(integer,color,8)
*string(" ")
*fieldleft(string,name,0)
*counterset(counter1,0)
*loopif([counter1 < numberofcomponents])
*if([counter1 % 8 == 0])
*end()
*string("$HMASSEM_IDS    ")
*endif()
*pointerset(pointer1,components,counter1)
*field(integer,pointer1.pointervalue,8)
*counterinc(counter1)
*endloop()
*counterset(counter1,0)
*loopif([counter1 < numberofassemblies])
*if([counter1 % 7 == 0])
*end()
*string("$HMASSEM_ASSEM_ID       ")
*endif()
*pointerset(pointer1,assemblies,counter1)
*field(integer,pointer1.pointervalue,8)
*counterinc(counter1)
*endloop()

*end()
*endif()
*output()


*equations(1,"MPC")
*beginmenu()
*menustring("MPC     ")
*menufield(SID,integer,collector.id,8)
*menufield(,integer,dependentnode.id,8)
*menuoption("C1_ZERO",$MPC_C1_FLAG)
*menucase(0)
*menufield(,integer,dependentdof,8)
*menucase(1)
*menustring("       0")
*menuoptionend()

*menufield(,real,dependentcoeff,8)
*menucounterset(counter2,1)
*beginrepeat(independentnodesmax)
*repeatcounter(1)
*menupointerset(pointer1,independentnodes,[counter1 - 1])
*menupointerset(pointer2,independentdofs,[counter1 - 1])
*menuif([@dofs(pointer2.pointervalue,0)])
*menuif([counter2%2 == 0])
*menulineend()
*menustring("                ")
*menuendif()
*menucounterset(counter2,[counter2 + 1])
*menufield(,integer,pointer1.pointervalue,8)
*menufield(,integer,0,8)
*menupointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 0])
*menufield(,real,pointer3.pointervalue,8)
*menuendif()
*menuif([@dofs(pointer2.pointervalue,1)])
*menuif([counter2%2 == 0])
*menulineend()
*menustring("                ")
*menuendif()
*menucounterset(counter2,[counter2 + 1])
*menufield(,integer,pointer1.pointervalue,8)
*menufield(,integer,1,8)
*menupointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 0])
*menufield(,real,pointer3.pointervalue,9)
*menuendif()

*menuif([@dofs(pointer2.pointervalue,2)])
*menuif([counter2%2 == 0])
*menulineend()
*menustring("                ")
*menuendif()
*menucounterset(counter2,[counter2 + 1])
*menufield(,integer,pointer1.pointervalue,8)
*menufield(,integer,2,8)
*menupointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 1])
*menufield(,real,pointer3.pointervalue,9)
*menuendif()

*menuif([@dofs(pointer2.pointervalue,3)])
*menuif([counter2%2 == 0])
*menulineend()
*menustring("                ")
*menuendif()
*menucounterset(counter2,[counter2 + 1])
*menufield(,integer,pointer1.pointervalue,8)
*menufield(,integer,3,8)
*menupointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 2])
*menufield(,real,pointer3.pointervalue,8)
*menuendif()

*menuif([@dofs(pointer2.pointervalue,4)])
*menuif([counter2%2 == 0])
*menulineend()
*menustring("                ")
*menuendif()
*menucounterset(counter2,[counter2 + 1])
*menufield(,integer,pointer1.pointervalue,8)
*menufield(,integer,4,8)
*menupointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 3])
*menufield(,real,pointer3.pointervalue,9)
*menuendif()

*menuif([@dofs(pointer2.pointervalue,5)])
*menuif([counter2%2 == 0])
*menulineend()
*menustring("                ")
*menuendif()
*menucounterset(counter2,[counter2 + 1])
*menufield(,integer,pointer1.pointervalue,8)
*menufield(,integer,5,8)
*menupointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 4])
*menufield(,real,pointer3.pointervalue,9)
*menuendif()

*menuif([@dofs(pointer2.pointervalue,6)])
*menuif([counter2%2 == 0])
*menulineend()
*menustring("                ")
*menuendif()
*menucounterset(counter2,[counter2 + 1])
*menufield(,integer,pointer1.pointervalue,8)
*menufield(,integer,6,8)
*menupointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 5])
*menufield(,real,pointer3.pointervalue,9)
*menuendif()
*endrepeat()
*menulineend()
*endmenu()

*before()
*treataslocal(counter17)
*counterset(counter17,0)
*format()
*if([counter17==0])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  MPC Data")
*end()
*string("$$")
*end()
*endif()
*counterset(counter17,1)
*endif()

*string("MPC     ")
*field(integer,collector.id,8)
*field(integer,dependentnode.id,8)
*if($MPC_C1_FLAG==1)
*string("       0")
*else()
*field(integer,dependentdof,8)
*endif()
*field(real,dependentcoeff,8)
*counterset(counter1,1)
*counterset(counter2,1)
*counterset(counter19,1)
*loopif([counter1 <= independentnodesmax])
*pointerset(pointer1,independentnodes,[counter1 - 1])
*pointerset(pointer2,independentdofs,[counter1 - 1])

## ADD START
*if([@dofs(pointer2.pointervalue,0)])
*if([counter2%2 == 0])
*string("        ")
*string("+       ")
*end()
*string("+       ")
*string("        ")
*counterinc(counter19)
*endif()
*counterinc(counter2)
*field(integer,pointer1.pointervalue,8)
*field(integer,0,8)
*pointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 0])
*field(real,pointer3.pointervalue,8)
*endif()
## ADD END 

*if([@dofs(pointer2.pointervalue,1)])
*if([counter2%2 == 0])
*string("        ")
*string("+       ")
*end()
*string("+       ")
*string("        ")
*counterinc(counter19)
*endif()
*counterinc(counter2)
*field(integer,pointer1.pointervalue,8)
*field(integer,1,8)
*pointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 0])
*field(real,pointer3.pointervalue,8)
*endif()

*if([@dofs(pointer2.pointervalue,2)])
*if([counter2%2 == 0])
*string("        ")
*string("+       ")
*end()
*string("+       ")
*string("        ")
*counterinc(counter19)
*endif()
*counterinc(counter2)
*field(integer,pointer1.pointervalue,8)
*field(integer,2,8)
*pointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 1])
*field(real,pointer3.pointervalue,8)
*endif()

*if([@dofs(pointer2.pointervalue,3)])
*if([counter2%2 == 0])
*string("        ")
*string("+       ")
*end()
*string("+       ")
*string("        ")
*counterinc(counter19)
*endif()
*counterinc(counter2)
*field(integer,pointer1.pointervalue,8)
*field(integer,3,8)
*pointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 2])
*field(real,pointer3.pointervalue,8)
*endif()

*if([@dofs(pointer2.pointervalue,4)])
*if([counter2%2 == 0])
*string("        ")
*string("+       ")
*end()
*string("+       ")
*string("        ")
*counterinc(counter19)
*endif()
*counterinc(counter2)
*field(integer,pointer1.pointervalue,8)
*field(integer,4,8)
*pointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 3])
*field(real,pointer3.pointervalue,8)
*endif()

*if([@dofs(pointer2.pointervalue,5)])
*if([counter2%2 == 0])
*string("        ")
*string("+       ")
*end()
*string("+       ")
*string("        ")
*counterinc(counter19)
*endif()
*counterinc(counter2)
*field(integer,pointer1.pointervalue,8)
*field(integer,5,8)
*pointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 4])
*field(real,pointer3.pointervalue,8)
*endif()

*if([@dofs(pointer2.pointervalue,6)])
*if([counter2%2 == 0])
*string("        ")
*string("+       ")
*end()
*string("+       ")
*string("        ")
*counterinc(counter19)
*endif()
*counterinc(counter2)
*field(integer,pointer1.pointervalue,8)
*field(integer,6,8)
*pointerset(pointer3,independentcoeffs,[(counter1 - 1)*6 + 5])
*field(real,pointer3.pointervalue,8)
*endif()
*counterinc(counter1)
*endloop()
*end()
*output()


*function("HM_PLY_INFO",variable1,variable2,variable3,variable4)
// variable1 -> entity type
// variable2 -> entity id
// variable3 -> attribute identifier
*components("","")
*before()
*variableset(variable1,0)

*format()
*variableset(variable1,11)  // 11 -> PROPS
*variableset(variable2,id) // COMP ID
*variableset(variable3,3025) // PCOMP_THETA attribute
*variableset(variable4,3024)

*output()
*return()

*cards("BULK_UNSUPPORTED_CARDS")
*beginmenu()
*beginrepeat($Bulk_NumUnsupportedCards)
*repeatcounter(1)
*menufield(card_name2,string,$Bulk_UnsupportedCards,80)
*menulineend()
*endrepeat()
*endmenu()
*format()
*counterset(counter1,1)
*loopif([counter1 < =$Bulk_NumUnsupportedCards])
*field(string,[@stringsplit(@attributearrayvalue($Bulk_UnsupportedCards,counter1),)],80)
*end()
*counterinc(counter1)
*endloop()
*output()

*function("HM_COMP_TK",variable1)
*components("","")
*before()
*variableset(variable1,0)
*variableset(variable2,0)
*variableset(variable3,0)
*format()
*if([internalpropertyid  > 0])
*if([@defined(property.$PSHELL)])
*variableset(variable1,[@getentityvalue(props,internalpropertyid,$PSHELL_T)])
*endif()

*if([@defined(property.$PSHEAR)])
*variableset(variable1,[@getentityvalue(props,internalpropertyid,$PSHEAR_T)])
*endif()

*if([@defined(property.$PCOMP) || @defined(property.$PCOMPG)])
*variableset(variable2,[variable2 + @getentityvalue(props,internalpropertyid,$Number_of_Plies)])
*counterset(counter1,1)
*loopif([counter1 <= variable2])
*variableset(variable3,[variable3 + @attributearrayvalue(property.$PCOMP_T,counter1)])
*counterinc(counter1)
*endloop()
*variableset(variable1,[variable1 + variable3])
*endif()
*endif()
*output()
*return()

*function("HM_PROP_TK",variable1,variable4,variable5)
*properties("","")
*before()
*variableset(variable1,0)
*variableset(variable2,0)
*variableset(variable3,0)
*variableset(variable4,0)
*variableset(variable5,0)
*format()
*if([@defined($PSHELL)])
*variableset(variable1,[variable1+$PSHELL_T])
*endif()
*if([@defined($PSHEAR)])
*variableset(variable1,[variable1+$PSHEAR_T])
*endif()
*if([@defined($PCOMP) || @defined($PCOMPG)])
*variableset(variable2,[variable2 + $Number_of_Plies])
*counterset(counter1,1)
*loopif([counter1 <= variable2])
*variableset(variable3,[variable3 + @attributearrayvalue($PCOMP_T,counter1)])
*counterinc(counter1)
*endloop()
*variableset(variable1,[variable1 + variable3])
*variableset(variable5,[variable5+$PCOMP_Z0])
*endif()
*output()
*return()


*function("HM_ELEMENT_MASS",variable16,variable11,variable1)
*elements(0,0,"","")
*before()
*populatemassthicknesstable()
*format()
*output()
*materials("")
*before()
*tablereset()
*format()
*tablestore([6*id], [@defined($MAT1)])
*tablestore([6*id+1], [@defined($MAT2)])
*tablestore([6*id+2], [@defined($MAT3)])
*tablestore([6*id+3], [@defined($MAT4)])
*tablestore([6*id+4], [@defined($MAT8)])
*tablestore([6*id+5], [@defined($MAT9)])
*tablestore([6*id+6], [@defined($MAT10)])
*if([@defined($MAT1)])
*tablenstore(1,id,$Rho)
*endif()
*if([@defined($MAT2)])
*tablenstore(1,id,$MAT2_RHO)
*endif()
*if([@defined($MAT3)])
*tablenstore(1,id,$MAT3_RHO)
*endif()
*if([@defined($MAT4)])
*tablenstore(1,id,$MAT4_RHO)
*endif()
*if([@defined($MAT6)])
*tablenstore(1,id,$MAT6_RHO)
*endif()
*if([@defined($MAT8)])
*tablenstore(1,id,$MAT8_RHO)
*endif()
*if([@defined($MAT9)])
*tablenstore(1,id,$MAT9_RHO)
*endif()
*if([@defined($MAT10)])
*tablenstore(1,id,$MAT10_RHO)
*endif()

*output()

//TODO: generate masscalc from FRT
include(masscalc)
include(../../common_nas_os/masscalc_c.tpl)
*elements(0,0,"","")
*before()
*format()
*after()
*deletemassthicknesstable()  
*output()  

*text()
*if([variable20 != 0])
*errormessage("Some property data missing or misformatted (calculated mass may be inaccurate)")
*endif()
*output()

*return()

*text()
*if([@controlcardattributedefined(OMIT,$OMIT)])
*if([@getcontrolcardattribute(OMIT,$OMIT_END_BULK) == 0])  
*string("ENDDATA")
*endif()
*else()
*if([@controlcardattributedefined(OMIT,$OMIT) == 0])
*string("ENDDATA")
*endif()
*endif() 
*end()
*output()


*text()
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$------------------------------------------------------------------------------$$")
*end()
*string("$$        Data Definition for AutoDV                                            $$")
*end()
*string("$$------------------------------------------------------------------------------$$")
*end()
*endif()
*output()

*text()
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$-----------------------------------------------------------------------------$$")
*end()
*string("$$        Design Variables Card for Control Perturbations                      $$")
*end()
*string("$$-----------------------------------------------------------------------------$$")
*end()
*endif()
*output()

*designvars()
*format()
*if([(config == 115) && (designable != 0)])
*string("$DVARCNT") 
*field(integer,id,8)
*field(string,name,8)
// vector collector id
*field(integer,designable,8)
*field(real,initialvalue,8)
*field(real,lowerbound,8)
*field(real,upperbound,8)
*if([delxv == -1.0])
*string("        ")
*else()
*field(real,delxv,8)
*endif()
*end()
*string("$ORDER  ") 
*field(integer,id,8)
*end()
*endif()
*output()


*text()
*if([@writehmcomments()])
*string("$")
*end()
*string("$------------------------------------------------------------------------------$")
*end()
*string("$        Domain Element Definitions                                            $")
*end()
*string("$------------------------------------------------------------------------------$")
*end()
*endif()
*output()


*elements(103,5,"DTRIA3","")
*beginmenu()

*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()

*menustring("DTRIA3  ")
*menufield(EID,integer,id,8)
*menufield(PID,integer,collector.id,8)
*menufield(G1,integer,node1.id,8)
*menufield(G2,integer,node2.id,8)
*menufield(G3,integer,node3.id,8)
*menulineend()
*endmenu()
*before()
*if([@count(elements,103,5)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  $DTRIA3 Data")
*end()
*string("$$")
*end()
*endif()
*counterset(counter1,0)
*endif()
*format()

*if([$COMMENT_OPTION == 1])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 2])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 3])
*endif()

*string("$DTRIA3 ")
*field(integer,id,8)
*field(integer,collector.id,8)
*field(integer,node1.id,8)
*field(integer,node2.id,8)
*field(integer,node3.id,8)
*end()
*output()



*elements(104,5,"DQUAD4","")
*beginmenu()

*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()

*menustring("DQUAD4  ")
*menufield(EID,integer,id,8)
*menufield(PID,integer,collector.id,8)
*menufield(G1,integer,node1.id,8)
*menufield(G2,integer,node2.id,8)
*menufield(G3,integer,node3.id,8)
*menufield(G4,integer,node4.id,8)
*menulineend()
*endmenu()
*before()
*if([@count(elements,104,5)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  $DQUAD4 Data")
*end()
*string("$$")
*end()
*endif()
*counterset(counter1,0)
*endif()
*format()

*if([$COMMENT_OPTION == 1])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 2])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 3])
*endif()

*string("$DQUAD4 ")
*field(integer,id,8)
*field(integer,collector.id,8)
*field(integer,node1.id,8)
*field(integer,node2.id,8)
*field(integer,node3.id,8)
*field(integer,node4.id,8)
*end()
*output()



*elements(204,5,"DTETRA4","")
*beginmenu()

*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()

*menustring("DTETRA4 ")
*menufield(EID,integer,id,8)
*menufield(PID,integer,collector.id,8)
*menufield(G1,integer,node1.id,8)
*menufield(G2,integer,node2.id,8)
*menufield(G3,integer,node3.id,8)
*menufield(G4,integer,node4.id,8)
*menulineend()
*endmenu()
*before()
*if([@count(elements,204,5)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  $DTETRA4 Elements 4-noded")
*end()
*string("$$")
*end()
*endif()
*endif()
*format()

*if([$COMMENT_OPTION == 1])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 2])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 3])
*endif()

*string("$DTETRA4")
*field(integer,id,8)
*field(integer,collector.id,8)
*field(integer,node1.id,8)
*field(integer,node2.id,8)
*field(integer,node3.id,8)
*field(integer,node4.id,8)
*end()
*output()



*elements(206,5,"DPENTA6","")
*beginmenu()

*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()

*menustring("DPENTA6 ")
*menufield(EID,integer,id,8)
*menufield(PID,integer,collector.id,8)
*menufield(G1,integer,node1.id,8)
*menufield(G2,integer,node2.id,8)
*menufield(G3,integer,node3.id,8)
*menufield(G4,integer,node4.id,8)
*menufield(G5,integer,node5.id,8)
*menufield(G6,integer,node6.id,8)
*menulineend()
*endmenu()
*before()
*if([@count(elements,206,5)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  $DPENTA6 Elements 6-noded")
*end()
*string("$$")
*end()
*endif()
*endif()
*format()

*if([$COMMENT_OPTION == 1])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 2])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 3])
*endif()

*string("$DPENTA6")
*field(integer,id,8)
*field(integer,collector.id,8)
*field(integer,node1.id,8)
*field(integer,node2.id,8)
*field(integer,node3.id,8)
*field(integer,node4.id,8)
*field(integer,node5.id,8)
*field(integer,node6.id,8)
*end()
*output()



*elements(208,5,"DHEXA8","")
*beginmenu()

*menuoptionenum("User Comments",$COMMENT_OPTION,COMMENT1_OPTION)
*menucase(1)
*menucase(2)
*beginrepeat($COMMENT_ARRAY_NUM)
*repeatcounter(1)
*menustring("$")
*menufield(Comments,string,$COMMENT_ARRAY,79)
*menulineend()
*endrepeat()
*menucase(3)
*menuoptionend()

*menustring("DHEXA8  ")
*menufield(EID,integer,id,8)
*menufield(PID,integer,collector.id,8)
*menufield(G1,integer,node1.id,8)
*menufield(G2,integer,node2.id,8)
*menufield(G3,integer,node3.id,8)
*menufield(G4,integer,node4.id,8)
*menufield(G5,integer,node5.id,8)
*menufield(G6,integer,node6.id,8)
*menustring("        ")
*menulineend()
*menustring("        ")
*menufield(G7,integer,node7.id,8)
*menufield(G8,integer,node8.id,8)
*menulineend()
*endmenu()
*before()
*if([@count(elements,208,5)])
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  $DHEXA8 Elements 8-noded")
*counterset(counter1,0)
*end()
*string("$$")
*end()
*endif()
*endif()
*format()

*if([$COMMENT_OPTION == 1])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 2])
*counterset(counter1,1)
*loopif([counter1 <= $COMMENT_ARRAY_NUM])
*string("$")
*fieldleft(string,[@attributearrayvalue($COMMENT_ARRAY,counter1)],79)
*end()
*counterinc(counter1)
*endloop()
*endif()
*if([$COMMENT_OPTION == 3])
*endif()

*string("$DHEXA8 ")
*field(integer,id,8)
*field(integer,collector.id,8)
*field(integer,node1.id,8)
*field(integer,node2.id,8)
*field(integer,node3.id,8)
*field(integer,node4.id,8)
*field(integer,node5.id,8)
*field(integer,node6.id,8)
*end()
*string("$       ")
*field(integer,node7.id,8)
*field(integer,node8.id,8)
*end()
*output()



*text()
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$------------------------------------------------------------------------------$$")
*end()
*string("$$            Nodeset Definitions                                               $$")
*end()
*string("$$------------------------------------------------------------------------------$$")
*end()
*endif()
*output()


*groups(4,1,"NODESET")
*nomenu()
*before()
*if([@writehmcomments()])
*string("$$  Design domain node sets")
*end()
*endif()
*format()
*string("$Domain ")
*field(string,name,8)
*field(integer,id,8)
*field(integer,[@entityincollector(elements,135,1)],8)
*field(integer,color,8)
*end()
*elements(135,1,"N","")
*beforecollector()
*counterset(1,1)
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*format()
*if([counter1 = 1])
*string("$       ")
*endif()
*field(integer,node1.id,8)
*counterinc(1)
*if([counter1 = 10])
*end()
*counterset(1,1)
*endif()
*aftercollector()
*if([counter1 = 1])
*else()
*end()
*endif()
*if([@writehmcomments()])
*string("$")
*end()
*endif()
*output()
*output()


*text()
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$------------------------------------------------------------------------------$$")
*end()
*string("$$            Control Perturbation                                              $$")
*end()
*string("$$------------------------------------------------------------------------------$$")
*end()
*endif()
*output()


*vectorcols()
*before()
*if([@writehmcomments()])
*string("$$")
*end()
*endif()
*format()
*if([@writehmcomments()])
*string("$HMNAME VECTORCOL")
*field(integer,id,8)
*fieldleft(string,name,0)
*end()
*string("$HWCOLOR VECTORCOL")
*field(integer,id,8)
*field(integer,color,8)
*end()
*string("$")
*end()
*endif()
*output()

*vectors()
*beginmenu()
*menuif([@stringinstring(collector.name,"~",0)])
*menustring("CTRLPRT ")
*menufield(ID,integer,id,8)
*menufield(SID,integer,collector.id,8)
*menufield(NODID,integer,basenode.id,8)
*menufield(XCOMP,real,xcomp,8)
*menufield(YCOMP,real,ycomp,8)
*menufield(ZCOMP,real,zcomp,8)
*menufield(MAG,real,magnitude,8)
*menufield(SYS,integer,systemid,8)
*menulineend()
*menuendif()
*endmenu()
*before()
*if([@writehmcomments()])
*string("$$")
*end()
*string("$$  CONTROL PERTURBATION Data")
*end()
*string("$$")
*end()
*endif()
*format()
*if([@stringinstring(collector.name,"~",0)])
*string("$CTRLPRT")
*field(integer,id,8)
*field(integer,collector.id,8)
*field(integer,basenode.id,8)
*field(real,xcomp,8)
*field(real,ycomp,8)
*field(real,zcomp,8)
*field(real,magnitude,8)
*field(integer,systemid,8)
*end()
*endif()
*output()


text()

if([@count(elements,135,1) == 0])    
if([@count(groups,4,1) != 0])          
errormessage("Error: Domain Nodes Sets Empty.")
endif()
endif() 

if([@count(elements,0,5) > @count(groups,4,1)])       
errormessage("Error: More Domain Elements than Domain Node Sets.")
endif() 

if([@count(elements,0,5) < @count(groups,4,1)])       
errormessage("Error: More Domain Node Sets than Domain Elements.")
endif() 

output()



